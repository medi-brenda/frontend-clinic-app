{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport { extendObservable, runInAction } from 'mobx';\nimport { newClinic } from \"../models/clinic\";\nimport { newDoctorProfile } from \"../models/doctor\";\nimport { newPersonalProfile } from \"../models/personalProfile\";\nimport { newRecord } from \"../models/record\";\nimport { newTransaction } from \"../models/transaction\";\nimport { newPendingItem } from \"../models/pendingItem\";\nexport var DataStore = function DataStore() {\n  var _this = this;\n\n  _classCallCheck(this, DataStore);\n\n  this.values = newTransaction();\n  this.method = '';\n  this.records = [];\n  this.record = newRecord();\n  this.personalProfile = newPersonalProfile();\n  this.clinic = newClinic();\n  this.doctorProfileList = [];\n  this.doctorProfile = newDoctorProfile();\n  this.doctorInsurerIds = [];\n  this.pendingItems = [];\n  this.pendingItem = newPendingItem();\n\n  this.setValues = function (values) {\n    runInAction(function () {\n      _this.values = values;\n    });\n  };\n\n  this.resetData = function () {\n    runInAction(function () {\n      _this.values = newTransaction();\n    });\n  };\n\n  this.setMethod = function (method) {\n    runInAction(function () {\n      _this.method = method;\n    });\n  };\n\n  this.setRecords = function (records) {\n    runInAction(function () {\n      _this.records = records;\n    });\n  };\n\n  this.setRecord = function (record) {\n    runInAction(function () {\n      _this.record = record;\n    });\n  };\n\n  this.setPersonalProfile = function (personalProfile) {\n    runInAction(function () {\n      _this.personalProfile = personalProfile;\n    });\n  };\n\n  this.setClinic = function (clinic) {\n    runInAction(function () {\n      _this.clinic = clinic;\n    });\n  };\n\n  this.setDoctorProfileList = function (doctorProfileList) {\n    runInAction(function () {\n      _this.doctorProfileList = doctorProfileList;\n    });\n  };\n\n  this.setDoctorProfile = function (doctorProfile) {\n    runInAction(function () {\n      _this.doctorProfile = doctorProfile;\n    });\n  };\n\n  this.setDoctorInsurerIds = function (doctorInsurerIds) {\n    runInAction(function () {\n      _this.doctorInsurerIds = doctorInsurerIds;\n    });\n  };\n\n  this.setPendingItem = function (pendingItem) {\n    runInAction(function () {\n      _this.pendingItem = pendingItem;\n    });\n  };\n\n  this.setPendingItems = function (pendingItemList) {\n    runInAction(function () {\n      _this.pendingItems = pendingItemList;\n    });\n  };\n\n  extendObservable(this, {\n    values: newTransaction(),\n    method: '',\n    records: [],\n    record: newRecord(),\n    personalProfile: newPersonalProfile(),\n    clinic: newClinic(),\n    doctorProfileList: [],\n    doctorProfile: newDoctorProfile(),\n    doctorInsurerIds: [],\n    pendingItems: [],\n    pendingItem: newPendingItem()\n  });\n};\nexport default DataStore;","map":{"version":3,"names":["extendObservable","runInAction","newClinic","newDoctorProfile","newPersonalProfile","newRecord","newTransaction","newPendingItem","DataStore","values","method","records","record","personalProfile","clinic","doctorProfileList","doctorProfile","doctorInsurerIds","pendingItems","pendingItem","setValues","resetData","setMethod","setRecords","setRecord","setPersonalProfile","setClinic","setDoctorProfileList","setDoctorProfile","setDoctorInsurerIds","setPendingItem","setPendingItems","pendingItemList"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/stores/data.ts"],"sourcesContent":["import {extendObservable, runInAction} from 'mobx';\r\nimport {Clinic, newClinic} from '../models/clinic';\r\nimport {DoctorProfile, newDoctorProfile} from '../models/doctor';\r\nimport {newPersonalProfile, PersonalProfile} from '../models/personalProfile';\r\nimport {newRecord, Record} from '../models/record';\r\nimport {newTransaction, Transaction} from '../models/transaction';\r\nimport {newPendingItem, PendingItem} from \"../models/pendingItem\";\r\n\r\nexport class DataStore {\r\n    values: Transaction = newTransaction();\r\n    method: string = '';\r\n    records: Record[] = [];\r\n    record: Record = newRecord();\r\n    personalProfile: PersonalProfile = newPersonalProfile();\r\n    clinic: Clinic = newClinic();\r\n    doctorProfileList: DoctorProfile[] = [];\r\n    doctorProfile: DoctorProfile = newDoctorProfile();\r\n    doctorInsurerIds: string[] = [];\r\n    pendingItems: PendingItem[] = [];\r\n    pendingItem: PendingItem = newPendingItem();\r\n\r\n    constructor() {\r\n        extendObservable(this, {\r\n            values: newTransaction(),\r\n            method: '',\r\n            records: [],\r\n            record: newRecord(),\r\n            personalProfile: newPersonalProfile(),\r\n            clinic: newClinic(),\r\n            doctorProfileList: [],\r\n            doctorProfile: newDoctorProfile(),\r\n            doctorInsurerIds: [],\r\n            pendingItems: [],\r\n            pendingItem: newPendingItem(),\r\n        });\r\n    }\r\n\r\n    setValues = (values: Transaction) => {\r\n        runInAction(() => {\r\n            this.values = values;\r\n        });\r\n    }\r\n\r\n    resetData = () => {\r\n        runInAction(() => {\r\n            this.values = newTransaction()\r\n        });\r\n    }\r\n\r\n    setMethod = (method: string) => {\r\n        runInAction(() => {\r\n            this.method = method;\r\n        });\r\n    }\r\n\r\n    setRecords = (records: Record[]) => {\r\n        runInAction(() => {\r\n            this.records = records;\r\n        });\r\n    }\r\n\r\n    setRecord = (record: Record) => {\r\n        runInAction(() => {\r\n            this.record = record;\r\n        });\r\n    }\r\n\r\n    setPersonalProfile = (personalProfile: PersonalProfile) => {\r\n        runInAction(() => {\r\n            this.personalProfile = personalProfile;\r\n        });\r\n    }\r\n\r\n    setClinic = (clinic: Clinic) => {\r\n        runInAction(() => {\r\n            this.clinic = clinic;\r\n        });\r\n    }\r\n\r\n    setDoctorProfileList = (doctorProfileList: DoctorProfile[]) => {\r\n        runInAction(() => {\r\n            this.doctorProfileList = doctorProfileList;\r\n        });\r\n    }\r\n\r\n    setDoctorProfile = (doctorProfile: DoctorProfile) => {\r\n        runInAction(() => {\r\n            this.doctorProfile = doctorProfile;\r\n        });\r\n    }\r\n\r\n    setDoctorInsurerIds = (doctorInsurerIds: string[]) => {\r\n        runInAction(() => {\r\n            this.doctorInsurerIds = doctorInsurerIds;\r\n        });\r\n    }\r\n\r\n    setPendingItem = (pendingItem: PendingItem) => {\r\n        runInAction(() => {\r\n            this.pendingItem = pendingItem;\r\n        });\r\n    };\r\n\r\n    setPendingItems = (pendingItemList: PendingItem[]) => {\r\n        runInAction(() => {\r\n            this.pendingItems = pendingItemList;\r\n        });\r\n    };\r\n}\r\n\r\nexport default DataStore;\r\n"],"mappings":";AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,MAA5C;AACA,SAAgBC,SAAhB;AACA,SAAuBC,gBAAvB;AACA,SAAQC,kBAAR;AACA,SAAQC,SAAR;AACA,SAAQC,cAAR;AACA,SAAQC,cAAR;AAEA,WAAaC,SAAb,GAaI,qBAAc;EAAA;;EAAA;;EAAA,KAZdC,MAYc,GAZQH,cAAc,EAYtB;EAAA,KAXdI,MAWc,GAXG,EAWH;EAAA,KAVdC,OAUc,GAVM,EAUN;EAAA,KATdC,MASc,GATGP,SAAS,EASZ;EAAA,KARdQ,eAQc,GARqBT,kBAAkB,EAQvC;EAAA,KAPdU,MAOc,GAPGZ,SAAS,EAOZ;EAAA,KANda,iBAMc,GANuB,EAMvB;EAAA,KALdC,aAKc,GALiBb,gBAAgB,EAKjC;EAAA,KAJdc,gBAIc,GAJe,EAIf;EAAA,KAHdC,YAGc,GAHgB,EAGhB;EAAA,KAFdC,WAEc,GAFaZ,cAAc,EAE3B;;EAAA,KAgBda,SAhBc,GAgBF,UAACX,MAAD,EAAyB;IACjCR,WAAW,CAAC,YAAM;MACd,KAAI,CAACQ,MAAL,GAAcA,MAAd;IACH,CAFU,CAAX;EAGH,CApBa;;EAAA,KAsBdY,SAtBc,GAsBF,YAAM;IACdpB,WAAW,CAAC,YAAM;MACd,KAAI,CAACQ,MAAL,GAAcH,cAAc,EAA5B;IACH,CAFU,CAAX;EAGH,CA1Ba;;EAAA,KA4BdgB,SA5Bc,GA4BF,UAACZ,MAAD,EAAoB;IAC5BT,WAAW,CAAC,YAAM;MACd,KAAI,CAACS,MAAL,GAAcA,MAAd;IACH,CAFU,CAAX;EAGH,CAhCa;;EAAA,KAkCda,UAlCc,GAkCD,UAACZ,OAAD,EAAuB;IAChCV,WAAW,CAAC,YAAM;MACd,KAAI,CAACU,OAAL,GAAeA,OAAf;IACH,CAFU,CAAX;EAGH,CAtCa;;EAAA,KAwCda,SAxCc,GAwCF,UAACZ,MAAD,EAAoB;IAC5BX,WAAW,CAAC,YAAM;MACd,KAAI,CAACW,MAAL,GAAcA,MAAd;IACH,CAFU,CAAX;EAGH,CA5Ca;;EAAA,KA8Cda,kBA9Cc,GA8CO,UAACZ,eAAD,EAAsC;IACvDZ,WAAW,CAAC,YAAM;MACd,KAAI,CAACY,eAAL,GAAuBA,eAAvB;IACH,CAFU,CAAX;EAGH,CAlDa;;EAAA,KAoDda,SApDc,GAoDF,UAACZ,MAAD,EAAoB;IAC5Bb,WAAW,CAAC,YAAM;MACd,KAAI,CAACa,MAAL,GAAcA,MAAd;IACH,CAFU,CAAX;EAGH,CAxDa;;EAAA,KA0Dda,oBA1Dc,GA0DS,UAACZ,iBAAD,EAAwC;IAC3Dd,WAAW,CAAC,YAAM;MACd,KAAI,CAACc,iBAAL,GAAyBA,iBAAzB;IACH,CAFU,CAAX;EAGH,CA9Da;;EAAA,KAgEda,gBAhEc,GAgEK,UAACZ,aAAD,EAAkC;IACjDf,WAAW,CAAC,YAAM;MACd,KAAI,CAACe,aAAL,GAAqBA,aAArB;IACH,CAFU,CAAX;EAGH,CApEa;;EAAA,KAsEda,mBAtEc,GAsEQ,UAACZ,gBAAD,EAAgC;IAClDhB,WAAW,CAAC,YAAM;MACd,KAAI,CAACgB,gBAAL,GAAwBA,gBAAxB;IACH,CAFU,CAAX;EAGH,CA1Ea;;EAAA,KA4Eda,cA5Ec,GA4EG,UAACX,WAAD,EAA8B;IAC3ClB,WAAW,CAAC,YAAM;MACd,KAAI,CAACkB,WAAL,GAAmBA,WAAnB;IACH,CAFU,CAAX;EAGH,CAhFa;;EAAA,KAkFdY,eAlFc,GAkFI,UAACC,eAAD,EAAoC;IAClD/B,WAAW,CAAC,YAAM;MACd,KAAI,CAACiB,YAAL,GAAoBc,eAApB;IACH,CAFU,CAAX;EAGH,CAtFa;;EACVhC,gBAAgB,CAAC,IAAD,EAAO;IACnBS,MAAM,EAAEH,cAAc,EADH;IAEnBI,MAAM,EAAE,EAFW;IAGnBC,OAAO,EAAE,EAHU;IAInBC,MAAM,EAAEP,SAAS,EAJE;IAKnBQ,eAAe,EAAET,kBAAkB,EALhB;IAMnBU,MAAM,EAAEZ,SAAS,EANE;IAOnBa,iBAAiB,EAAE,EAPA;IAQnBC,aAAa,EAAEb,gBAAgB,EARZ;IASnBc,gBAAgB,EAAE,EATC;IAUnBC,YAAY,EAAE,EAVK;IAWnBC,WAAW,EAAEZ,cAAc;EAXR,CAAP,CAAhB;AAaH,CA3BL;AAsGA,eAAeC,SAAf"},"metadata":{},"sourceType":"module"}