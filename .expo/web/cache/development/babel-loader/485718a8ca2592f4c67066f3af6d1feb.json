{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\src\\\\components\\\\gridItem\\\\index.tsx\";\n\nimport { View } from 'native-base';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nvar window = Dimensions.get('window');\n\nvar getImage = function getImage(image) {\n  switch (image) {\n    case 'verify':\n      return require(\"../../assets/images/homeIcon/verify.png\");\n\n    case 'modify':\n      return require(\"../../assets/images/homeIcon/modify.png\");\n\n    case 'record':\n      return require(\"../../assets/images/homeIcon/record.png\");\n\n    case 'report':\n      return require(\"../../assets/images/homeIcon/report.png\");\n\n    case 'cooperators':\n      return require(\"../../assets/images/homeIcon/cooperators.png\");\n\n    case 'update':\n      return require(\"../../assets/images/homeIcon/more.png\");\n  }\n};\n\nvar GridItem = function GridItem(_ref) {\n  var image = _ref.image,\n      title = _ref.title,\n      onPress = _ref.onPress,\n      custom = _ref.custom,\n      _ref$selfDefinedWidth = _ref.selfDefinedWidth,\n      selfDefinedWidth = _ref$selfDefinedWidth === void 0 ? 0 : _ref$selfDefinedWidth,\n      _ref$selfDefinedHeigh = _ref.selfDefinedHeight,\n      selfDefinedHeight = _ref$selfDefinedHeigh === void 0 ? 0 : _ref$selfDefinedHeigh,\n      _ref$marginTop = _ref.marginTop,\n      marginTop = _ref$marginTop === void 0 ? 0 : _ref$marginTop;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      width = _useState2[0],\n      setWidth = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      height = _useState4[0],\n      setHeight = _useState4[1];\n\n  var _useState5 = useState(width > height ? height * 0.6 : width * 0.6),\n      _useState6 = _slicedToArray(_useState5, 2),\n      length = _useState6[0],\n      setLength = _useState6[1];\n\n  useEffect(function () {\n    var tempWidth = selfDefinedWidth !== 0 ? selfDefinedWidth : width;\n\n    if (selfDefinedWidth !== 0) {\n      tempWidth = selfDefinedWidth;\n    } else {\n      tempWidth = width > height ? height * 0.6 : width * 0.6;\n    }\n\n    setLength(tempWidth);\n  });\n  return React.createElement(View, {\n    style: styleSheet.gridItem,\n    onLayout: function onLayout(event) {\n      var layout = event.nativeEvent.layout;\n\n      if (!width) {\n        setWidth(layout.width);\n        setHeight(layout.height);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styleSheet.touchable,\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: length,\n      height: length,\n      opacity: 1\n    },\n    source: getImage(image),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    numberOfLines: 1,\n    style: [styleSheet.text, {\n      marginTop: marginTop\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, title), custom));\n};\n\nvar styleSheet = StyleSheet.create({\n  gridItem: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  touchable: {\n    flex: 1,\n    width: window.width / 2 - 20,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginHorizontal: 10,\n    paddingBottom: 10\n  },\n  text: {\n    color: \"#fb6060\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});\nexport default GridItem;","map":{"version":3,"names":["View","React","useEffect","useState","TouchableOpacity","window","Dimensions","get","getImage","image","require","GridItem","title","onPress","custom","selfDefinedWidth","selfDefinedHeight","marginTop","width","setWidth","height","setHeight","length","setLength","tempWidth","styleSheet","gridItem","event","layout","nativeEvent","touchable","opacity","text","StyleSheet","create","flex","display","flexDirection","backgroundColor","borderRadius","alignItems","justifyContent","marginHorizontal","paddingBottom","color","fontSize","fontWeight"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/components/gridItem/index.tsx"],"sourcesContent":["import { View } from 'native-base';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, Image, Dimensions } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nconst window = Dimensions.get('window');\r\n\r\ntype GridItemType = {\r\n    image: string,\r\n    title: string,\r\n    onPress: () => void,\r\n    custom?: React.ReactNode\r\n    selfDefinedWidth?: number,\r\n    selfDefinedHeight?: number,\r\n    marginTop?: number,\r\n}\r\n\r\nconst getImage = (image: string) => {\r\n    switch (image) {\r\n        case 'verify':\r\n            return require('../../assets/images/homeIcon/verify.png');\r\n        case 'modify':\r\n            return require('../../assets/images/homeIcon/modify.png');\r\n        case 'record':\r\n            return require('../../assets/images/homeIcon/record.png');\r\n        case 'report':\r\n            return require('../../assets/images/homeIcon/report.png');\r\n        case 'cooperators':\r\n            return require('../../assets/images/homeIcon/cooperators.png');\r\n        case 'update':\r\n            return require('../../assets/images/homeIcon/more.png');\r\n    }\r\n}\r\n\r\nconst GridItem = ({ image, title, onPress, custom, selfDefinedWidth = 0, selfDefinedHeight = 0, marginTop = 0 }: GridItemType) => {\r\n    const [width, setWidth] = useState<number>(0);\r\n    const [height, setHeight] = useState<number>(0);\r\n    const [length, setLength] = useState<number>(width > height ? height * 0.6 : width * 0.6);\r\n\r\n    useEffect(() => {\r\n        let tempWidth = selfDefinedWidth !== 0 ? selfDefinedWidth: width;\r\n        if(selfDefinedWidth !== 0)\r\n        {\r\n            tempWidth = selfDefinedWidth\r\n        }\r\n        else \r\n        {\r\n            tempWidth = width > height ? height * 0.6 : width * 0.6\r\n        }\r\n        setLength(tempWidth);\r\n    });\r\n\r\n    return (\r\n        <View\r\n            style={styleSheet.gridItem}\r\n            onLayout={(event) => {\r\n                const { layout } = event.nativeEvent;\r\n                if (!width) {\r\n                    setWidth(layout.width);\r\n                    setHeight(layout.height);\r\n                }\r\n            }}\r\n        >\r\n            <TouchableOpacity\r\n                style={styleSheet.touchable}\r\n                onPress={onPress}\r\n\r\n            >\r\n                <Image\r\n                    style={{\r\n                        width: length,\r\n                        height: length,\r\n                        opacity: 1,\r\n                    }}\r\n                    source={getImage(image)}\r\n                />\r\n\r\n                <Text\r\n                    numberOfLines={1}\r\n                    style={[styleSheet.text, {marginTop: marginTop,}]}\r\n                >\r\n                    {title}\r\n                </Text>\r\n                {custom}\r\n            </TouchableOpacity>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    gridItem: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    touchable: {\r\n        flex: 1,\r\n        width: window.width / 2 - 20,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 10,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginHorizontal: 10,\r\n        paddingBottom: 10,\r\n    },\r\n    text: {\r\n        color: \"#fb6060\",\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n    }\r\n});\r\n\r\nexport default GridItem;"],"mappings":"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"},"metadata":{},"sourceType":"module"}