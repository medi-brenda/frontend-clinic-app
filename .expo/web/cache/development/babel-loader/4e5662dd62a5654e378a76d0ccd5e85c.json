{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\src\\\\components\\\\scanner\\\\index.tsx\";\n\nimport { Camera } from 'expo-camera';\nimport { View } from 'native-base';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport CamearBorderOverlay from \"./cameraOverlay\";\n\nvar Scanner = function Scanner(_ref) {\n  var doctor = _ref.doctor,\n      button = _ref.button,\n      onScan = _ref.onScan,\n      onBack = _ref.onBack;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      width = _useState2[0],\n      setWidth = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      height = _useState4[0],\n      setHeight = _useState4[1];\n\n  return React.createElement(ScrollView, {\n    onLayout: function onLayout(event) {\n      var layout = event.nativeEvent.layout;\n\n      if (!width) {\n        setWidth(layout.width);\n        setHeight(layout.height);\n      }\n    },\n    keyboardShouldPersistTaps: \"never\",\n    scrollEnabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      height: height || \"auto\",\n      width: width || \"auto\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, React.createElement(Camera, {\n    style: StyleSheet.absoluteFillObject,\n    type: Camera.Constants.Type.back,\n    onBarCodeScanned: function onBarCodeScanned(_ref2) {\n      var type = _ref2.type,\n          data = _ref2.data;\n      return onScan == null ? void 0 : onScan(data);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styleSheet.overlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styleSheet.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styleSheet.overlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), React.createElement(CamearBorderOverlay, {\n    width: width ? width * 0.7 + 2 : 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styleSheet.overlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styleSheet.info,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styleSheet.doctor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, doctor)), React.createElement(View, {\n    style: styleSheet.overlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styleSheet = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  overlay: {\n    backgroundColor: \"rgba(0,0,0,0.7)\",\n    flexGrow: 1\n  },\n  info: {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.7)\",\n    paddingTop: 30\n  },\n  doctor: {\n    color: \"white\",\n    fontSize: 25,\n    textAlign: \"center\"\n  },\n  button: {\n    marginHorizontal: 15,\n    marginTop: 10\n  }\n});\nexport default React.memo(Scanner);","map":{"version":3,"names":["Camera","View","React","useState","ScrollView","CamearBorderOverlay","Scanner","doctor","button","onScan","onBack","width","setWidth","height","setHeight","event","layout","nativeEvent","justifyContent","flexDirection","StyleSheet","absoluteFillObject","Constants","Type","back","type","data","styleSheet","overlay","row","info","create","backgroundColor","flexGrow","alignItems","paddingTop","color","fontSize","textAlign","marginHorizontal","marginTop","memo"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/components/scanner/index.tsx"],"sourcesContent":["import { Camera } from 'expo-camera';\r\nimport { View } from 'native-base';\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, Text } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport MCCButton from '../mccButton';\r\nimport CamearBorderOverlay from './cameraOverlay';\r\n\r\ntype ScannerProps = {\r\n    doctor: string,\r\n    button: string,\r\n    onBack: () => void,\r\n    onScan: ((value: string) => void) | undefined,\r\n}\r\n\r\nconst Scanner = ({ doctor, button, onScan, onBack }: ScannerProps) => {\r\n    const [width, setWidth] = useState<number>(0);\r\n    const [height, setHeight] = useState<number>(0);\r\n\r\n    return (\r\n        <ScrollView\r\n            onLayout={(event) => {\r\n                const { layout } = event.nativeEvent;\r\n                if (!width) {\r\n                    setWidth(layout.width);\r\n                    setHeight(layout.height);\r\n                }\r\n            }}\r\n            keyboardShouldPersistTaps={\"never\"}\r\n            scrollEnabled={false}\r\n        >\r\n            <View\r\n                style={{\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"column\",\r\n                    height: height || \"auto\",\r\n                    width: width || \"auto\",\r\n                }}\r\n            >\r\n                <Camera\r\n                    style={StyleSheet.absoluteFillObject}\r\n                    type={Camera.Constants.Type.back}\r\n                    onBarCodeScanned={({ type, data }) => onScan?.(data)}\r\n                />\r\n\r\n                <View style={styleSheet.overlay} />\r\n\r\n                <View style={styleSheet.row}>\r\n                    <View style={styleSheet.overlay} />\r\n                    <CamearBorderOverlay width={width ? (width * 0.7 + 2) : 0} />\r\n                    <View style={styleSheet.overlay} />\r\n                </View>\r\n\r\n                <View style={styleSheet.info}>\r\n                    <Text style={styleSheet.doctor}>\r\n                        {doctor}\r\n                    </Text>\r\n                </View>\r\n                <View style={styleSheet.overlay} />\r\n            </View>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    row: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n    },\r\n    overlay: {\r\n        backgroundColor: \"rgba(0,0,0,0.7)\",\r\n        flexGrow: 1,\r\n    },\r\n    info: {\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"rgba(0,0,0,0.7)\",\r\n        paddingTop: 30,\r\n    },\r\n    doctor: {\r\n        color: \"white\",\r\n        fontSize: 25,\r\n        textAlign: \"center\"\r\n    },\r\n    button: {\r\n        marginHorizontal: 15,\r\n        marginTop: 10\r\n    }\r\n})\r\n\r\nexport default React.memo(Scanner);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}