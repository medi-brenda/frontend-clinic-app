{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport { extendObservable, runInAction } from 'mobx';\nimport { newNews } from \"../models/news\";\nimport { newPromotion } from \"../models/promotion\";\nimport { newSetting } from \"../models/setting\";\nexport var AppStore = function AppStore() {\n  var _this = this;\n\n  _classCallCheck(this, AppStore);\n\n  this.version = '';\n  this.banners = [];\n  this.inited = false;\n  this.clinicId = '';\n  this.token = '';\n  this.logined = false;\n  this.currentTab = '';\n  this.setting = newSetting();\n  this.reminders = [];\n  this.readReminders = false;\n  this.newsList = [];\n  this.news = newNews();\n  this.promotionList = [];\n  this.cooperators = [];\n  this.newProducts = [];\n  this.newResources = [];\n  this.newFavoriteDiagnosis = '';\n  this.promotion = newPromotion();\n  this.aboutUs = {\n    nameEn: '',\n    nameChi: ''\n  };\n  this.notificationToken = '';\n\n  this.setBanners = function (banners) {\n    runInAction(function () {\n      _this.banners = banners;\n    });\n  };\n\n  this.setInited = function () {\n    runInAction(function () {\n      _this.inited = true;\n    });\n  };\n\n  this.setAuthData = function (token, clinicId) {\n    runInAction(function () {\n      _this.token = token;\n      _this.clinicId = clinicId;\n      _this.logined = true;\n    });\n  };\n\n  this.setCurrentTab = function (tab) {\n    runInAction(function () {\n      _this.currentTab = tab;\n    });\n  };\n\n  this.setSetting = function (setting) {\n    runInAction(function () {\n      _this.setting = setting;\n    });\n  };\n\n  this.setReminders = function (reminders) {\n    runInAction(function () {\n      _this.reminders = reminders;\n    });\n  };\n\n  this.setReadReminders = function (readReminders) {\n    runInAction(function () {\n      _this.readReminders = readReminders;\n    });\n  };\n\n  this.setNewsList = function (newsList) {\n    runInAction(function () {\n      _this.newsList = newsList;\n    });\n  };\n\n  this.setNews = function (news) {\n    runInAction(function () {\n      _this.news = news;\n    });\n  };\n\n  this.setPromotionList = function (promotionList) {\n    runInAction(function () {\n      _this.promotionList = promotionList;\n    });\n  };\n\n  this.setPromotion = function (promotion) {\n    runInAction(function () {\n      _this.promotion = promotion;\n    });\n  };\n\n  this.setAboutUs = function (aboutUs) {\n    runInAction(function () {\n      _this.aboutUs = aboutUs;\n    });\n  };\n\n  this.resetData = function () {\n    runInAction(function () {\n      _this.clinicId = '';\n      _this.token = '';\n      _this.logined = false;\n      _this.setting = newSetting();\n    });\n  };\n\n  this.setVersion = function () {\n    var version = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    runInAction(function () {\n      _this.version = version;\n    });\n  };\n\n  this.setNotificationToken = function () {\n    var notificationToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    runInAction(function () {\n      _this.notificationToken = notificationToken;\n    });\n  };\n\n  this.setCooperators = function (cooperators) {\n    runInAction(function () {\n      _this.cooperators = cooperators;\n    });\n  };\n\n  this.setNewProducts = function (newProducts) {\n    runInAction(function () {\n      _this.newProducts = newProducts;\n    });\n  };\n\n  this.setNewResources = function (newResources) {\n    runInAction(function () {\n      _this.newResources = newResources;\n    });\n  };\n\n  this.setNewFavoriteDiagnosis = function (newFavoriteDiagnosis) {\n    runInAction(function () {\n      _this.newFavoriteDiagnosis = newFavoriteDiagnosis;\n    });\n  };\n\n  extendObservable(this, {\n    banners: [],\n    inited: false,\n    clinicId: '',\n    token: '',\n    logined: false,\n    currentTab: '',\n    setting: newSetting(),\n    reminders: [],\n    readReminders: false,\n    newsList: [],\n    news: newNews(),\n    promotionList: [],\n    cooperators: [],\n    newProducts: [],\n    newResources: [],\n    newFavoriteDiagnosis: '',\n    promotion: newPromotion(),\n    version: '',\n    aboutUs: {\n      nameEn: '',\n      nameChi: ''\n    },\n    notificationToken: ''\n  });\n};\nexport default AppStore;","map":{"version":3,"names":["extendObservable","runInAction","newNews","newPromotion","newSetting","AppStore","version","banners","inited","clinicId","token","logined","currentTab","setting","reminders","readReminders","newsList","news","promotionList","cooperators","newProducts","newResources","newFavoriteDiagnosis","promotion","aboutUs","nameEn","nameChi","notificationToken","setBanners","setInited","setAuthData","setCurrentTab","tab","setSetting","setReminders","setReadReminders","setNewsList","setNews","setPromotionList","setPromotion","setAboutUs","resetData","setVersion","setNotificationToken","setCooperators","setNewProducts","setNewResources","setNewFavoriteDiagnosis"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/stores/app.ts"],"sourcesContent":["import { extendObservable, runInAction } from 'mobx';\r\nimport { Banner } from '../models/banner';\r\nimport { Name } from '../models/common';\r\nimport { newNews, News } from '../models/news';\r\nimport { Promotion, newPromotion } from '../models/promotion';\r\nimport { Reminder } from '../models/reminder';\r\nimport { newSetting, Setting } from '../models/setting';\r\nimport { Cooperators } from '../models/cooperators';\r\nimport { NewProducts } from '../models/newProducts';\r\nimport { Resources } from '../models/resources';\r\n\r\nexport class AppStore {\r\n    version: string = '';\r\n    banners: Banner[] = [];\r\n    inited: boolean = false;\r\n    clinicId: string = '';\r\n    token: string = '';\r\n    logined: boolean = false;\r\n    currentTab: string = '';\r\n    setting: Setting = newSetting();\r\n    reminders: Reminder[] = [];\r\n    readReminders: boolean = false;\r\n    newsList: News[] = [];\r\n    news: News = newNews();\r\n    promotionList: Promotion[] = [];\r\n    cooperators: Cooperators[] = [];\r\n    newProducts: NewProducts[] = [];\r\n    newResources: Resources[]=[];\r\n    newFavoriteDiagnosis: string = '';\r\n    promotion: Promotion = newPromotion();\r\n    aboutUs: Name = {\r\n        nameEn: '',\r\n        nameChi: ''\r\n    };\r\n    notificationToken: string = '';\r\n\r\n    constructor() {\r\n        extendObservable(this, {\r\n            banners: [],\r\n            inited: false,\r\n            clinicId: '',\r\n            token: '',\r\n            logined: false,\r\n            currentTab: '',\r\n            setting: newSetting(),\r\n            reminders: [],\r\n            readReminders: false,\r\n            newsList: [],\r\n            news: newNews(),\r\n            promotionList: [],\r\n            cooperators: [],\r\n            newProducts: [],\r\n            newResources: [],\r\n            newFavoriteDiagnosis: '',\r\n            promotion: newPromotion(),\r\n            version: '',\r\n            aboutUs: {\r\n                nameEn: '',\r\n                nameChi: ''\r\n            },\r\n            notificationToken: ''\r\n        });\r\n    }\r\n\r\n    setBanners = (banners: Banner[]) => {\r\n        runInAction(() => {\r\n            this.banners = banners;\r\n        });\r\n    }\r\n\r\n    setInited = () => {\r\n        runInAction(() => {\r\n            this.inited = true;\r\n        });\r\n    }\r\n\r\n    setAuthData = (token: string, clinicId: string) => {\r\n        runInAction(() => {\r\n            this.token = token;\r\n            this.clinicId = clinicId;\r\n            this.logined = true;\r\n        });\r\n    }\r\n\r\n    setCurrentTab = (tab: string) => {\r\n        runInAction(() => {\r\n            this.currentTab = tab;\r\n        });\r\n    }\r\n\r\n    setSetting = (setting: Setting) => {\r\n        runInAction(() => {\r\n            this.setting = setting;\r\n        });\r\n    }\r\n\r\n    setReminders = (reminders: Reminder[]) => {\r\n        runInAction(() => {\r\n            this.reminders = reminders;\r\n        });\r\n    }\r\n\r\n    setReadReminders = (readReminders: boolean) => {\r\n        runInAction(() => {\r\n            this.readReminders = readReminders;\r\n        });\r\n    }\r\n\r\n    setNewsList = (newsList: News[]) => {\r\n        runInAction(() => {\r\n            this.newsList = newsList;\r\n        });\r\n    }\r\n\r\n    setNews = (news: News) => {\r\n        runInAction(() => {\r\n            this.news = news;\r\n        });\r\n    }\r\n\r\n    setPromotionList = (promotionList: Promotion[]) => {\r\n        runInAction(() => {\r\n            this.promotionList = promotionList;\r\n        });\r\n    }\r\n\r\n    setPromotion = (promotion: Promotion) => {\r\n        runInAction(() => {\r\n            this.promotion = promotion;\r\n        });\r\n    }\r\n\r\n    setAboutUs = (aboutUs: Name) => {\r\n        runInAction(() => {\r\n            this.aboutUs = aboutUs;\r\n        });\r\n    }\r\n\r\n    resetData = () => {\r\n        runInAction(() => {\r\n            this.clinicId = '';\r\n            this.token = '';\r\n            this.logined = false;\r\n            this.setting = newSetting();\r\n        });\r\n    }\r\n\r\n    setVersion = (version: string = '') => {\r\n        runInAction(() => {\r\n            this.version = version;\r\n        });\r\n    }\r\n\r\n    setNotificationToken = (notificationToken: string = '') => {\r\n        runInAction(() => {\r\n            this.notificationToken = notificationToken;\r\n        });\r\n    }\r\n    \r\n    setCooperators = (cooperators: Cooperators[]) => {\r\n        runInAction(() => {\r\n            this.cooperators = cooperators;\r\n        });\r\n    }\r\n\r\n    setNewProducts = (newProducts: NewProducts[]) => {\r\n        runInAction(() => {\r\n            this.newProducts = newProducts;\r\n        });\r\n    }\r\n\r\n    setNewResources = (newResources: Resources[]) => {\r\n        runInAction(() => {\r\n            this.newResources = newResources;\r\n        });\r\n    }\r\n\r\n    setNewFavoriteDiagnosis = (newFavoriteDiagnosis: string) => {\r\n        runInAction(() => {\r\n            this.newFavoriteDiagnosis = newFavoriteDiagnosis;\r\n        });\r\n    }\r\n}\r\n\r\nexport default AppStore;"],"mappings":"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"},"metadata":{},"sourceType":"module"}