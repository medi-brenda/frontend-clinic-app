{"ast":null,"code":"import { newConsultation } from \"./consultation\";\nimport { newSchedules } from \"./schedule\";\nimport * as _ from 'lodash';\nexport function newDoctor(data) {\n  return _.assign({\n    nameEn: '',\n    nameChi: '',\n    gender: '',\n    medicalServices: [],\n    authority: '',\n    regNo: 0,\n    docCert: '',\n    consultations: [newConsultation()],\n    schedules: newSchedules()\n  }, data);\n}\nexport function newDoctorProfile(data) {\n  return _.assign({\n    id: '',\n    nameEn: '',\n    nameChi: '',\n    gender: '',\n    speciality: [],\n    authorityEn: '',\n    authorityChi: '',\n    regNo: 0,\n    docCert: '',\n    consultations: [newConsultation()],\n    schedules: newSchedules(),\n    status: '',\n    benefits: []\n  }, data);\n}","map":{"version":3,"names":["newConsultation","newSchedules","_","newDoctor","data","assign","nameEn","nameChi","gender","medicalServices","authority","regNo","docCert","consultations","schedules","newDoctorProfile","id","speciality","authorityEn","authorityChi","status","benefits"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/models/doctor.ts"],"sourcesContent":["import { Consultation, newConsultation } from \"./consultation\";\r\nimport { Option } from \"./option\";\r\nimport { newSchedules, Schedule } from \"./schedule\";\r\nimport * as _ from 'lodash';\r\n\r\nexport type Doctor = {\r\n    nameEn: string,\r\n    nameChi: string,\r\n    gender: string,\r\n    medicalServices: string[],\r\n    authority: string,\r\n    regNo: number,\r\n    docCert: string,\r\n    consultations: Consultation[],\r\n    schedules: Schedule[],\r\n}\r\n\r\nexport function newDoctor(data?: Partial<Doctor>) {\r\n    return _.assign({\r\n        nameEn: '',\r\n        nameChi: '',\r\n        gender: '',\r\n        medicalServices: [],\r\n        authority: '',\r\n        regNo: 0,\r\n        docCert: '',\r\n        consultations: [newConsultation()],\r\n        schedules: newSchedules()\r\n    }, data);\r\n}\r\n\r\nexport type DoctorProfileBenefit = {\r\n    benefitCode: string,\r\n    insurerId: string,\r\n    doctorCode: string,\r\n    doctorFee: string,\r\n    location: string\r\n    insurer: {\r\n        nameChi: string,\r\n        nameEn: string\r\n    }\r\n}\r\n\r\nexport type DoctorProfile = {\r\n    id: string,\r\n    nameEn: string,\r\n    nameChi: string,\r\n    gender: string,\r\n    authorityEn: string,\r\n    authorityChi: string,\r\n    regNo: number,\r\n    docCert: string,\r\n    consultations: Consultation[],\r\n    schedules: Schedule[],\r\n    speciality?: Option[],\r\n    benefits?: DoctorProfileBenefit[],\r\n    status: string\r\n}\r\n\r\nexport function newDoctorProfile(data?: Partial<DoctorProfile>): DoctorProfile {\r\n    return _.assign({\r\n        id: '',\r\n        nameEn: '',\r\n        nameChi: '',\r\n        gender: '',\r\n        speciality: [],\r\n        authorityEn: '',\r\n        authorityChi: '',\r\n        regNo: 0,\r\n        docCert: '',\r\n        consultations: [newConsultation()],\r\n        schedules: newSchedules(),\r\n        status: '',\r\n        benefits: []\r\n    }, data);\r\n}"],"mappings":"AAAA,SAAuBA,eAAvB;AAEA,SAASC,YAAT;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AAcA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAA2C;EAC9C,OAAOF,CAAC,CAACG,MAAF,CAAS;IACZC,MAAM,EAAE,EADI;IAEZC,OAAO,EAAE,EAFG;IAGZC,MAAM,EAAE,EAHI;IAIZC,eAAe,EAAE,EAJL;IAKZC,SAAS,EAAE,EALC;IAMZC,KAAK,EAAE,CANK;IAOZC,OAAO,EAAE,EAPG;IAQZC,aAAa,EAAE,CAACb,eAAe,EAAhB,CARH;IASZc,SAAS,EAAEb,YAAY;EATX,CAAT,EAUJG,IAVI,CAAP;AAWH;AA8BD,OAAO,SAASW,gBAAT,CAA0BX,IAA1B,EAAwE;EAC3E,OAAOF,CAAC,CAACG,MAAF,CAAS;IACZW,EAAE,EAAE,EADQ;IAEZV,MAAM,EAAE,EAFI;IAGZC,OAAO,EAAE,EAHG;IAIZC,MAAM,EAAE,EAJI;IAKZS,UAAU,EAAE,EALA;IAMZC,WAAW,EAAE,EAND;IAOZC,YAAY,EAAE,EAPF;IAQZR,KAAK,EAAE,CARK;IASZC,OAAO,EAAE,EATG;IAUZC,aAAa,EAAE,CAACb,eAAe,EAAhB,CAVH;IAWZc,SAAS,EAAEb,YAAY,EAXX;IAYZmB,MAAM,EAAE,EAZI;IAaZC,QAAQ,EAAE;EAbE,CAAT,EAcJjB,IAdI,CAAP;AAeH"},"metadata":{},"sourceType":"module"}