{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\src\\\\pages\\\\doctorProfileList\\\\index.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from '@react-navigation/native';\nimport { observer } from 'mobx-react';\nimport { Container, View } from 'native-base';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { goDoctorProfile, initDoctorProfile } from \"../../actions/app\";\nimport TitleBar from \"../../components/titleBar\";\nimport { useStores } from \"../../stores\";\nimport ErrorPage from \"../error\";\nimport Loading from \"../loading\";\nimport { ListItem } from 'react-native-elements';\nimport { translate } from \"../../utils/string\";\nimport PhoneCall from \"../../components/phoneCall\";\nvar DoctorProfileListPage = observer(function () {\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n,\n      t = _useTranslation.t;\n\n  var stores = useStores();\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var doctorProfileList = stores.dataStore.doctorProfileList;\n  useEffect(function () {\n    init();\n  }, []);\n\n  var init = function init() {\n    var errorMsg;\n    return _regeneratorRuntime.async(function init$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(initDoctorProfile({\n              stores: stores,\n              navigation: navigation,\n              i18n: i18n\n            }));\n\n          case 3:\n            errorMsg = _context.sent;\n            setLoading(false);\n\n            if (errorMsg) {\n              setError(errorMsg);\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onListItemPress = function onListItemPress(doctorProfile) {\n    goDoctorProfile({\n      stores: stores,\n      navigation: navigation,\n      doctorProfile: doctorProfile\n    });\n  };\n\n  var isEng = i18n.language === 'en';\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(TitleBar, {\n    title: t('DoctorProfile.Title'),\n    onBack: function onBack() {\n      navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, loading ? React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 31\n    }\n  }) : error ? React.createElement(ErrorPage, {\n    title: error,\n    onRetry: init,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }) : React.createElement(View, {\n    style: styleSheet.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, React.createElement(FlatList, {\n    data: doctorProfileList,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var _item$speciality;\n\n      var item = _ref.item,\n          index = _ref.index;\n      var isActive = item.status === '1';\n      var inActiveColor = \"#929292\";\n      var textStyle = isActive ? null : {\n        color: inActiveColor\n      };\n      var leftIcon = {\n        name: \"people\"\n      };\n\n      if (!isActive) {\n        leftIcon.color = inActiveColor;\n      }\n\n      return React.createElement(ListItem, {\n        titleStyle: textStyle,\n        subtitleStyle: textStyle,\n        leftIcon: leftIcon,\n        title: translate(item, i18n) + \" (\" + (isActive ? t('DoctorProfile.Active') : t('DoctorProfile.Inactive')) + \")\",\n        subtitle: \"(\" + ((_item$speciality = item.speciality) == null ? void 0 : _item$speciality.map(function (sp) {\n          return translate(sp, i18n);\n        })) + \")\",\n        bottomDivider: true,\n        chevron: true,\n        onPress: function onPress() {\n          onListItemPress(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 45\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }))), React.createElement(PhoneCall, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }));\n});\nvar styleSheet = StyleSheet.create({\n  container: {\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  divider: {\n    backgroundColor: \"grey\"\n  }\n});\nexport default DoctorProfileListPage;","map":{"version":3,"names":["useNavigation","observer","Container","View","React","useEffect","useState","useTranslation","ScrollView","goDoctorProfile","initDoctorProfile","TitleBar","useStores","ErrorPage","Loading","ListItem","translate","PhoneCall","DoctorProfileListPage","i18n","t","stores","navigation","loading","setLoading","error","setError","doctorProfileList","dataStore","init","errorMsg","onListItemPress","doctorProfile","isEng","language","goBack","styleSheet","container","item","index","toString","isActive","status","inActiveColor","textStyle","color","leftIcon","name","speciality","map","sp","StyleSheet","create","paddingLeft","paddingRight","divider","backgroundColor"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/doctorProfileList/index.tsx"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport { observer } from 'mobx-react';\r\nimport { Container, View } from 'native-base';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { StyleSheet, FlatList } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { goDoctorProfile, initDoctorProfile } from '../../actions/app';\r\nimport TitleBar from '../../components/titleBar';\r\nimport { useStores } from '../../stores';\r\nimport ErrorPage from '../error';\r\nimport Loading from '../loading';\r\nimport { ListItem } from 'react-native-elements';\r\nimport { translate } from '../../utils/string';\r\nimport { DoctorProfile } from '../../models/doctor';\r\nimport PhoneCall from \"../../components/phoneCall\";\r\n\r\nconst DoctorProfileListPage = observer(() => {\r\n    const { i18n, t } = useTranslation();\r\n    const stores = useStores();\r\n    const navigation = useNavigation();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const { doctorProfileList } = stores.dataStore;\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const init = async () => {\r\n        setLoading(true);\r\n        const errorMsg = await initDoctorProfile({ stores, navigation, i18n });\r\n        setLoading(false);\r\n        if (errorMsg) {\r\n            setError(errorMsg)\r\n        }\r\n    }\r\n\r\n    const onListItemPress = (doctorProfile: DoctorProfile) => {\r\n        goDoctorProfile({ stores, navigation, doctorProfile });\r\n    }\r\n\r\n    const isEng = i18n.language === 'en';\r\n\r\n    return (\r\n        <Container>\r\n            <TitleBar\r\n                title={t('DoctorProfile.Title')}\r\n                onBack={() => { navigation.goBack(); }}\r\n            />\r\n            <ScrollView>\r\n                {\r\n                    loading ? <Loading /> :\r\n                        error ? <ErrorPage title={error} onRetry={init} /> :\r\n                            <View style={styleSheet.container}>\r\n                                <FlatList\r\n                                    data={doctorProfileList}\r\n                                    keyExtractor={(item, index) => index.toString()}\r\n                                    renderItem={({ item, index }) => {\r\n                                        const isActive = item.status === '1';\r\n                                        const inActiveColor = \"#929292\";\r\n                                        const textStyle = isActive ? null : { color: inActiveColor };\r\n                                        const leftIcon: any = { name: \"people\" };\r\n                                        if (!isActive) {\r\n                                            leftIcon.color = inActiveColor;\r\n                                        }\r\n\r\n                                        return (\r\n                                            <ListItem\r\n                                                titleStyle={textStyle}\r\n                                                subtitleStyle={textStyle}\r\n                                                leftIcon={leftIcon}\r\n                                                title={`${translate(item, i18n)} (${isActive ? t('DoctorProfile.Active') : t('DoctorProfile.Inactive')})`}\r\n                                                subtitle={`(${item.speciality?.map(sp => translate(sp, i18n))})`}\r\n                                                bottomDivider\r\n                                                chevron={true}\r\n                                                onPress={() => {\r\n                                                    onListItemPress(item);\r\n                                                }}\r\n                                            />\r\n                                        )\r\n                                    }}\r\n                                />\r\n                            </View>\r\n                }\r\n\r\n            </ScrollView>\r\n\r\n            <PhoneCall/>\r\n        </Container>\r\n    )\r\n});\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    container: {\r\n        paddingLeft: 20,\r\n        paddingRight: 20\r\n    },\r\n    divider: {\r\n        backgroundColor: \"grey\"\r\n    }\r\n});\r\n\r\nexport default DoctorProfileListPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}