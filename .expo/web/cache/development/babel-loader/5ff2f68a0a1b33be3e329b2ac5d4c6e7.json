{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\src\\\\pages\\\\login\\\\forgetPassword.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { observer } from 'mobx-react';\nimport { Container, View, Text, Item, Input, Form } from 'native-base';\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useStores } from \"../../stores\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport AppHeader from \"../../components/appHeader\";\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation } from '@react-navigation/native';\nimport ImageComponent from \"../../components/image\";\nimport styles from \"../../styles\";\nimport { Ionicons } from '@expo/vector-icons';\nimport MCCButton from \"../../components/mccButton\";\nimport { forgetPassword } from \"../../actions/auth\";\nimport InsurerLogos from \"../../components/insurerLogos\";\nvar ForgetPasswordPage = observer(function () {\n  var stores = useStores();\n  var authState = stores.authStore.authState;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var onEmailChange = function onEmailChange(value) {\n    setEmail(value);\n  };\n\n  var onForgetPassword = function onForgetPassword() {\n    var resp;\n    return _regeneratorRuntime.async(function onForgetPassword$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(forgetPassword({\n              navigation: navigation,\n              email: email,\n              stores: stores\n            }));\n\n          case 2:\n            resp = _context.sent;\n            Alert.alert(resp.success ? t('Common.Success') : t('Common.Error'), t(resp.message));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Container, {\n    style: styleSheet.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(Spinner, {\n    visible: authState === 'progress',\n    color: 'red',\n    size: 'large',\n    overlayColor: 'rgba(0, 0, 0, 0.25)',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), React.createElement(AppHeader, {\n    title: t('Auth.ForgetPassword'),\n    onBack: navigation.goBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styleSheet.view,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(ImageComponent, {\n    image: require(\"../../assets/images/mcc-black-medium.png\"),\n    style: styleSheet.mccLogo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styleSheet.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, t('Common.trust_parter'))), React.createElement(InsurerLogos, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), React.createElement(StatusBar, {\n    backgroundColor: \"#ff8566\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), React.createElement(Form, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, React.createElement(Item, {\n    rounded: true,\n    style: styles.inputLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-mail\",\n    style: styleSheet.icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), React.createElement(Input, {\n    onChangeText: onEmailChange,\n    placeholder: t('Common.Email'),\n    placeholderTextColor: \"#a4a4a4\",\n    style: styleSheet.input,\n    autoCapitalize: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  })), React.createElement(MCCButton, {\n    onPress: onForgetPassword,\n    text: t('Common.Confirm'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }))));\n});\nvar styleSheet = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff'\n  },\n  header: {\n    backgroundColor: '#fff',\n    borderBottomWidth: 0,\n    shadowOpacity: 0,\n    elevation: 0\n  },\n  view: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: 20,\n    marginTop: 0\n  },\n  logoContainer: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'stretch',\n    justifyContent: 'center'\n  },\n  mccLogo: {\n    width: '100%',\n    height: '25%'\n  },\n  logo: {\n    width: '40%',\n    height: 48,\n    marginRight: '2%',\n    marginLeft: '2%'\n  },\n  title: {\n    color: '#f95e56',\n    fontSize: 14\n  },\n  form: {\n    marginTop: 24\n  },\n  input: {\n    fontSize: 16\n  },\n  icon: {\n    fontSize: 18,\n    marginLeft: 18,\n    marginRight: 5,\n    color: \"#a4a4a4\"\n  },\n  term: {\n    marginBottom: 20\n  },\n  termDescription: {\n    color: 'grey'\n  },\n  hyperlink: {\n    color: '#0066cc'\n  }\n});\nexport default ForgetPasswordPage;","map":{"version":3,"names":["observer","Container","View","Text","Item","Input","Form","React","useState","useStores","Spinner","AppHeader","useTranslation","useNavigation","ImageComponent","styles","Ionicons","MCCButton","forgetPassword","InsurerLogos","ForgetPasswordPage","stores","authState","authStore","t","navigation","email","setEmail","onEmailChange","value","onForgetPassword","resp","Alert","alert","success","message","styleSheet","container","goBack","view","require","mccLogo","title","form","inputLogin","icon","input","StyleSheet","create","backgroundColor","header","borderBottomWidth","shadowOpacity","elevation","flex","flexDirection","alignItems","padding","marginTop","logoContainer","width","display","justifyContent","height","logo","marginRight","marginLeft","color","fontSize","term","marginBottom","termDescription","hyperlink"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/login/forgetPassword.tsx"],"sourcesContent":["import { observer } from 'mobx-react';\r\nimport { Body, Container, Icon, View, Text, Item, Input, Form } from 'native-base';\r\nimport React, { useState } from 'react';\r\nimport { Alert, StatusBar, StyleSheet } from 'react-native';\r\nimport { useStores } from '../../stores';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport AppHeader from '../../components/appHeader';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport * as WebBrowser from \"expo-web-browser\";\r\nimport ImageComponent from '../../components/image';\r\nimport styles from '../../styles';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport MCCButton from '../../components/mccButton';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { forgetPassword } from '../../actions/auth';\r\nimport InsurerLogos from '../../components/insurerLogos';\r\n\r\n\r\nconst ForgetPasswordPage = observer(() => {\r\n    const stores = useStores();\r\n    const { authState } = stores.authStore;\r\n    const { t } = useTranslation();\r\n    const navigation = useNavigation();\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const onEmailChange = (value: string) => {\r\n        setEmail(value)\r\n    }\r\n\r\n    const onForgetPassword = async () => {\r\n        const resp = await forgetPassword({\r\n            navigation, \r\n            email, stores\r\n        });\r\n        \r\n        Alert.alert(\r\n            resp.success ? t('Common.Success') : t('Common.Error'),\r\n            t(resp.message)\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container style={styleSheet.container}>\r\n            <Spinner\r\n                visible={authState === 'progress'}\r\n                color={'red'}\r\n                size={'large'}\r\n                overlayColor={'rgba(0, 0, 0, 0.25)'}\r\n            />\r\n            <AppHeader\r\n                title={t('Auth.ForgetPassword')}\r\n                onBack={navigation.goBack}\r\n            />\r\n            <View style={styleSheet.view}>\r\n                <ImageComponent\r\n                    image={require('../../assets/images/mcc-black-medium.png')}\r\n                    style={styleSheet.mccLogo}\r\n                />\r\n                <View>\r\n                    <Text style={styleSheet.title}>{t('Common.trust_parter')}</Text>\r\n                </View>\r\n                <InsurerLogos />\r\n                <StatusBar backgroundColor='#ff8566' />\r\n                <Form style={styles.form}>\r\n                    <Item rounded style={styles.inputLogin}>\r\n                        <Ionicons\r\n                            name='md-mail'\r\n                            style={styleSheet.icon}\r\n                        />\r\n                        <Input\r\n                            onChangeText={onEmailChange}\r\n                            placeholder={t('Common.Email')}\r\n                            placeholderTextColor='#a4a4a4'\r\n                            style={styleSheet.input}\r\n                            autoCapitalize='none'\r\n                        />\r\n                    </Item>\r\n                    \r\n                    <MCCButton onPress={onForgetPassword} text={t('Common.Confirm')} />    \r\n                </Form>\r\n                \r\n            </View>\r\n        </Container >\r\n    );\r\n});\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#fff'\r\n    },\r\n    header: {\r\n        backgroundColor: '#fff',\r\n        borderBottomWidth: 0,\r\n        shadowOpacity: 0,\r\n        elevation: 0,\r\n    },\r\n    view: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: 20,\r\n        marginTop: 0,\r\n    },\r\n    logoContainer: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'stretch',\r\n        justifyContent: 'center'\r\n    },\r\n    mccLogo: {\r\n        width: '100%',\r\n        height: '25%'\r\n    },\r\n    logo: {\r\n        width: '40%',\r\n        height: 48,\r\n        marginRight: '2%',\r\n        marginLeft: '2%'\r\n    },\r\n    title: {\r\n        color: '#f95e56',\r\n        fontSize: 14\r\n    },\r\n    form: {\r\n        marginTop: 24\r\n    },\r\n    input: {\r\n        fontSize: 16\r\n    },\r\n    icon: {\r\n        fontSize: 18,\r\n        marginLeft: 18,\r\n        marginRight: 5,\r\n        color: \"#a4a4a4\",\r\n    },\r\n    term: {\r\n        marginBottom: 20\r\n    },\r\n    termDescription: {\r\n        color: 'grey'\r\n    },\r\n    hyperlink: {\r\n        color: '#0066cc'\r\n    }\r\n})\r\n\r\nexport default ForgetPasswordPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}