{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\src\\\\components\\\\closeBtn\\\\closeBtn.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nvar BUTTON_SIZE = 25;\nvar BORDER_WIDTH = 1;\n\nvar CloseButton = function CloseButton(props) {\n  var backgroundColor = props.backgroundColor;\n  var borderColor = props.borderColor;\n  var crossColor = props.crossColor;\n  return React.createElement(TouchableOpacity, {\n    onPress: props.onPress,\n    style: [styles.button, _objectSpread({\n      backgroundColor: backgroundColor,\n      borderColor: borderColor\n    }, props.style)],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: 'close',\n    color: crossColor,\n    size: BUTTON_SIZE / 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n};\n\nCloseButton.defaultProps = {\n  backgroundColor: '#E07A6E',\n  borderColor: '#E07A6E',\n  crossColor: 'white',\n  style: undefined\n};\nvar styles = StyleSheet.create({\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: BUTTON_SIZE + BORDER_WIDTH,\n    height: BUTTON_SIZE + BORDER_WIDTH,\n    borderWidth: BORDER_WIDTH,\n    borderRadius: BUTTON_SIZE / 2\n  }\n});\nexport default CloseButton;","map":{"version":3,"names":["React","Icon","BUTTON_SIZE","BORDER_WIDTH","CloseButton","props","backgroundColor","borderColor","crossColor","onPress","styles","button","style","defaultProps","undefined","StyleSheet","create","justifyContent","alignItems","width","height","borderWidth","borderRadius"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/components/closeBtn/closeBtn.tsx"],"sourcesContent":["import React from 'react';\r\nimport {TouchableOpacity, StyleSheet} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nconst BUTTON_SIZE = 25\r\nconst BORDER_WIDTH = 1\r\n\r\ntype CloseBtnProps = {\r\n    onPress: () => void,\r\n    borderColor?: string,\r\n    backgroundColor?: string,\r\n    crossColor?: string,\r\n    style:any\r\n}\r\n\r\nconst CloseButton: React.FC<CloseBtnProps> = (props) => {\r\n    const backgroundColor = props.backgroundColor;\r\n    const borderColor = props.borderColor;\r\n    const crossColor = props.crossColor;\r\n\r\n    return (\r\n        <TouchableOpacity onPress={props.onPress} style={[styles.button, {backgroundColor, borderColor,...props.style}]}>\r\n            <Icon name={'close'} color={crossColor} size={BUTTON_SIZE / 2}/>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nCloseButton.defaultProps={\r\n    backgroundColor:'#E07A6E',\r\n    borderColor:'#E07A6E',\r\n    crossColor:'white',\r\n    style:undefined\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: BUTTON_SIZE + BORDER_WIDTH,\r\n        height: BUTTON_SIZE + BORDER_WIDTH,\r\n        borderWidth: BORDER_WIDTH,\r\n        borderRadius: BUTTON_SIZE / 2,\r\n    }\r\n})\r\nexport default CloseButton;\r\n"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,IAAP;AAEA,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,YAAY,GAAG,CAArB;;AAUA,IAAMC,WAAoC,GAAG,SAAvCA,WAAuC,CAACC,KAAD,EAAW;EACpD,IAAMC,eAAe,GAAGD,KAAK,CAACC,eAA9B;EACA,IAAMC,WAAW,GAAGF,KAAK,CAACE,WAA1B;EACA,IAAMC,UAAU,GAAGH,KAAK,CAACG,UAAzB;EAEA,OACI,oBAAC,gBAAD;IAAkB,OAAO,EAAEH,KAAK,CAACI,OAAjC;IAA0C,KAAK,EAAE,CAACC,MAAM,CAACC,MAAR;MAAiBL,eAAe,EAAfA,eAAjB;MAAkCC,WAAW,EAAXA;IAAlC,GAAiDF,KAAK,CAACO,KAAvD,EAAjD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,oBAAC,IAAD;IAAM,IAAI,EAAE,OAAZ;IAAqB,KAAK,EAAEJ,UAA5B;IAAwC,IAAI,EAAEN,WAAW,GAAG,CAA5D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ;AAKH,CAVD;;AAYAE,WAAW,CAACS,YAAZ,GAAyB;EACrBP,eAAe,EAAC,SADK;EAErBC,WAAW,EAAC,SAFS;EAGrBC,UAAU,EAAC,OAHU;EAIrBI,KAAK,EAACE;AAJe,CAAzB;AAQA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC7BL,MAAM,EAAE;IACJM,cAAc,EAAE,QADZ;IAEJC,UAAU,EAAE,QAFR;IAGJC,KAAK,EAAEjB,WAAW,GAAGC,YAHjB;IAIJiB,MAAM,EAAElB,WAAW,GAAGC,YAJlB;IAKJkB,WAAW,EAAElB,YALT;IAMJmB,YAAY,EAAEpB,WAAW,GAAG;EANxB;AADqB,CAAlB,CAAf;AAUA,eAAeE,WAAf"},"metadata":{},"sourceType":"module"}