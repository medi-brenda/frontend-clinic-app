{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport { extendObservable, runInAction } from 'mobx';\nimport { newDoctor } from \"../models/doctor\";\nimport { newRegistrationForm } from \"../models/registrationForm\";\nexport var AuthStore = function AuthStore() {\n  var _this = this;\n\n  _classCallCheck(this, AuthStore);\n\n  this.bannerSeen = false;\n  this.selectedSlide = 0;\n  this.registerData = newRegistrationForm();\n  this.authState = 'init';\n  this.doctorType = '';\n  this.doctorIndex = 0;\n  this.doctor = newDoctor();\n  this.scheduleType = '';\n  this.schedules = [];\n\n  this.setSelectedSlide = function (index) {\n    runInAction(function () {\n      if (index === 3) {\n        _this.bannerSeen = true;\n      }\n\n      _this.selectedSlide = _this.bannerSeen ? 3 : index;\n    });\n  };\n\n  this.setRegisterData = function (registerData) {\n    runInAction(function () {\n      _this.registerData = registerData;\n    });\n  };\n\n  this.setDoctorType = function (doctorType) {\n    runInAction(function () {\n      _this.doctorType = doctorType;\n    });\n  };\n\n  this.setDoctorIndex = function (doctorIndex) {\n    runInAction(function () {\n      _this.doctorIndex = doctorIndex;\n    });\n  };\n\n  this.setDoctor = function (doctor) {\n    runInAction(function () {\n      _this.doctor = doctor;\n    });\n  };\n\n  this.setScheduleType = function (scheduleType) {\n    runInAction(function () {\n      _this.scheduleType = scheduleType;\n    });\n  };\n\n  this.setSchedules = function (schedules) {\n    runInAction(function () {\n      _this.schedules = schedules;\n    });\n  };\n\n  this.setAuthState = function (authState) {\n    runInAction(function () {\n      _this.authState = authState;\n    });\n  };\n\n  extendObservable(this, {\n    bannerSeen: false,\n    selectedSlide: 0,\n    banks: [],\n    districts: [],\n    specialities: [],\n    authorities: [],\n    benefits: [],\n    insurers: [],\n    registerData: newRegistrationForm(),\n    authState: 'init',\n    doctorType: '',\n    doctorIndex: 0,\n    doctor: newDoctor(),\n    scheduleType: '',\n    schedules: []\n  });\n};\nexport default AuthStore;","map":{"version":3,"names":["extendObservable","runInAction","newDoctor","newRegistrationForm","AuthStore","bannerSeen","selectedSlide","registerData","authState","doctorType","doctorIndex","doctor","scheduleType","schedules","setSelectedSlide","index","setRegisterData","setDoctorType","setDoctorIndex","setDoctor","setScheduleType","setSchedules","setAuthState","banks","districts","specialities","authorities","benefits","insurers"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/stores/auth.ts"],"sourcesContent":["import { extendObservable, runInAction } from 'mobx';\r\nimport { Authority } from '../models/authorities';\r\nimport { Bank } from '../models/bank';\r\nimport { Benefit } from '../models/benefit';\r\nimport { ActionState } from '../models/common';\r\nimport { District } from '../models/district';\r\nimport { Doctor, newDoctor } from '../models/doctor';\r\nimport { Insurer } from '../models/insurer';\r\nimport { RegistrationForm, newRegistrationForm } from '../models/registrationForm';\r\nimport { Schedule } from '../models/schedule';\r\nimport { Specialities } from '../models/specialities';\r\n\r\nexport class AuthStore {\r\n    bannerSeen: boolean = false;\r\n    selectedSlide: number = 0;\r\n\r\n    // registers\r\n    registerData: RegistrationForm = newRegistrationForm();\r\n    authState: ActionState = 'init';\r\n\r\n    // doctor detail page\r\n    doctorType: string = '';\r\n    doctorIndex: number = 0;\r\n    doctor: Doctor = newDoctor();\r\n\r\n    // service hour page\r\n    scheduleType: string = '';\r\n    schedules: Schedule[] = [];\r\n\r\n    constructor() {\r\n        extendObservable(this, {\r\n            bannerSeen: false,\r\n            selectedSlide: 0,\r\n            banks: [],\r\n            districts: [],\r\n            specialities: [],\r\n            authorities: [],\r\n            benefits: [],\r\n            insurers: [],\r\n            registerData: newRegistrationForm(),\r\n            authState: 'init',\r\n            doctorType: '',\r\n            doctorIndex: 0,\r\n            doctor: newDoctor(),\r\n            scheduleType: '',\r\n            schedules: []\r\n        });\r\n    }\r\n\r\n    setSelectedSlide = (index: number) => {\r\n        runInAction(() => {\r\n            if (index === 3) {\r\n                this.bannerSeen = true;\r\n            }\r\n            this.selectedSlide = this.bannerSeen ? 3 : index;\r\n        })\r\n    }\r\n\r\n    setRegisterData = (registerData: RegistrationForm) => {\r\n        runInAction(() => {\r\n            this.registerData = registerData;\r\n        })\r\n    }\r\n\r\n    setDoctorType = (doctorType: string) => {\r\n        runInAction(() => {\r\n            this.doctorType = doctorType;\r\n        })\r\n    }\r\n\r\n    setDoctorIndex = (doctorIndex: number) => {\r\n        runInAction(() => {\r\n            this.doctorIndex = doctorIndex;\r\n        })\r\n    }\r\n\r\n    setDoctor = (doctor: Doctor) => {\r\n        runInAction(() => {\r\n            this.doctor = doctor;\r\n        })\r\n    }\r\n\r\n    setScheduleType = (scheduleType: string) => {\r\n        runInAction(() => {\r\n            this.scheduleType = scheduleType;\r\n        })\r\n    }\r\n\r\n    setSchedules = (schedules: Schedule[]) => {\r\n        runInAction(() => {\r\n            this.schedules = schedules;\r\n        })\r\n    }\r\n\r\n    setAuthState = (authState: ActionState) => {\r\n        runInAction(() => {\r\n            this.authState = authState;\r\n        })\r\n    }\r\n}\r\n\r\nexport default AuthStore;"],"mappings":";AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,MAA9C;AAMA,SAAiBC,SAAjB;AAEA,SAA2BC,mBAA3B;AAIA,WAAaC,SAAb,GAiBI,qBAAc;EAAA;;EAAA;;EAAA,KAhBdC,UAgBc,GAhBQ,KAgBR;EAAA,KAfdC,aAec,GAfU,CAeV;EAAA,KAZdC,YAYc,GAZmBJ,mBAAmB,EAYtC;EAAA,KAXdK,SAWc,GAXW,MAWX;EAAA,KARdC,UAQc,GARO,EAQP;EAAA,KAPdC,WAOc,GAPQ,CAOR;EAAA,KANdC,MAMc,GANGT,SAAS,EAMZ;EAAA,KAHdU,YAGc,GAHS,EAGT;EAAA,KAFdC,SAEc,GAFU,EAEV;;EAAA,KAoBdC,gBApBc,GAoBK,UAACC,KAAD,EAAmB;IAClCd,WAAW,CAAC,YAAM;MACd,IAAIc,KAAK,KAAK,CAAd,EAAiB;QACb,KAAI,CAACV,UAAL,GAAkB,IAAlB;MACH;;MACD,KAAI,CAACC,aAAL,GAAqB,KAAI,CAACD,UAAL,GAAkB,CAAlB,GAAsBU,KAA3C;IACH,CALU,CAAX;EAMH,CA3Ba;;EAAA,KA6BdC,eA7Bc,GA6BI,UAACT,YAAD,EAAoC;IAClDN,WAAW,CAAC,YAAM;MACd,KAAI,CAACM,YAAL,GAAoBA,YAApB;IACH,CAFU,CAAX;EAGH,CAjCa;;EAAA,KAmCdU,aAnCc,GAmCE,UAACR,UAAD,EAAwB;IACpCR,WAAW,CAAC,YAAM;MACd,KAAI,CAACQ,UAAL,GAAkBA,UAAlB;IACH,CAFU,CAAX;EAGH,CAvCa;;EAAA,KAyCdS,cAzCc,GAyCG,UAACR,WAAD,EAAyB;IACtCT,WAAW,CAAC,YAAM;MACd,KAAI,CAACS,WAAL,GAAmBA,WAAnB;IACH,CAFU,CAAX;EAGH,CA7Ca;;EAAA,KA+CdS,SA/Cc,GA+CF,UAACR,MAAD,EAAoB;IAC5BV,WAAW,CAAC,YAAM;MACd,KAAI,CAACU,MAAL,GAAcA,MAAd;IACH,CAFU,CAAX;EAGH,CAnDa;;EAAA,KAqDdS,eArDc,GAqDI,UAACR,YAAD,EAA0B;IACxCX,WAAW,CAAC,YAAM;MACd,KAAI,CAACW,YAAL,GAAoBA,YAApB;IACH,CAFU,CAAX;EAGH,CAzDa;;EAAA,KA2DdS,YA3Dc,GA2DC,UAACR,SAAD,EAA2B;IACtCZ,WAAW,CAAC,YAAM;MACd,KAAI,CAACY,SAAL,GAAiBA,SAAjB;IACH,CAFU,CAAX;EAGH,CA/Da;;EAAA,KAiEdS,YAjEc,GAiEC,UAACd,SAAD,EAA4B;IACvCP,WAAW,CAAC,YAAM;MACd,KAAI,CAACO,SAAL,GAAiBA,SAAjB;IACH,CAFU,CAAX;EAGH,CArEa;;EACVR,gBAAgB,CAAC,IAAD,EAAO;IACnBK,UAAU,EAAE,KADO;IAEnBC,aAAa,EAAE,CAFI;IAGnBiB,KAAK,EAAE,EAHY;IAInBC,SAAS,EAAE,EAJQ;IAKnBC,YAAY,EAAE,EALK;IAMnBC,WAAW,EAAE,EANM;IAOnBC,QAAQ,EAAE,EAPS;IAQnBC,QAAQ,EAAE,EARS;IASnBrB,YAAY,EAAEJ,mBAAmB,EATd;IAUnBK,SAAS,EAAE,MAVQ;IAWnBC,UAAU,EAAE,EAXO;IAYnBC,WAAW,EAAE,CAZM;IAanBC,MAAM,EAAET,SAAS,EAbE;IAcnBU,YAAY,EAAE,EAdK;IAenBC,SAAS,EAAE;EAfQ,CAAP,CAAhB;AAiBH,CAnCL;AAyFA,eAAeT,SAAf"},"metadata":{},"sourceType":"module"}