{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\src\\\\components\\\\opModal\\\\index.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Input, Item, View } from 'native-base';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport Modal from 'react-native-modal';\nimport { checkOperationPassword } from \"../../actions/auth\";\nimport { useStores } from \"../../stores\";\nimport MCCButton from \"../mccButton\";\n\nvar OPModal = function OPModal(_ref) {\n  var show = _ref.show,\n      onDismiss = _ref.onDismiss;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var stores = useStores();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      spinner = _useState4[0],\n      setSpinner = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  useEffect(function () {\n    setPassword('');\n    setError('');\n  }, [show]);\n\n  var onPasswordChange = function onPasswordChange(password) {\n    setPassword(password);\n  };\n\n  var onSubmit = function onSubmit(password) {\n    setPassword(password);\n  };\n\n  var onCancel = function onCancel() {\n    onDismiss('');\n  };\n\n  var onConfirm = function onConfirm() {\n    var _await$checkOperation, success, message;\n\n    return _regeneratorRuntime.async(function onConfirm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setSpinner(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(checkOperationPassword({\n              stores: stores,\n              password: password\n            }));\n\n          case 3:\n            _await$checkOperation = _context.sent;\n            success = _await$checkOperation.success;\n            message = _await$checkOperation.message;\n            setSpinner(false);\n\n            if (success) {\n              onDismiss(password);\n            } else {\n              setError(t(message || 'Error.IncorrectOPPassword'));\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Modal, {\n    isVisible: show,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Spinner, {\n    visible: spinner,\n    color: 'red',\n    size: 'large',\n    overlayColor: 'rgba(0, 0, 0, 0.25)',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styleSheet.view,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styleSheet.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, t('Record.ST8')), React.createElement(Item, {\n    style: styleSheet.item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, React.createElement(Input, {\n    autoFocus: true,\n    placeholder: t('Record.ST9'),\n    secureTextEntry: true,\n    style: styleSheet.input,\n    onChangeText: onPasswordChange,\n    value: password,\n    onSubmitEditing: function onSubmitEditing(e) {\n      onSubmit(e.nativeEvent.text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  })), error ? React.createElement(View, {\n    style: styleSheet.errorContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styleSheet.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, error)) : undefined, React.createElement(View, {\n    style: styleSheet.actionContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styleSheet.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, React.createElement(MCCButton, {\n    onPress: onCancel,\n    color: \"grey\",\n    text: t('Common.Cancel'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styleSheet.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, React.createElement(MCCButton, {\n    onPress: onConfirm,\n    text: t('Common.Confirm'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  })))));\n};\n\nvar styleSheet = StyleSheet.create({\n  view: {\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  button: {\n    justifyContent: 'center',\n    marginHorizontal: 5,\n    flex: 1\n  },\n  title: {\n    marginVertical: 10,\n    fontSize: 24\n  },\n  text: {\n    fontSize: 20\n  },\n  item: {\n    borderColor: 'rgba(0,0,0,0.5)',\n    marginLeft: 20,\n    marginRight: 20,\n    marginBottom: 10\n  },\n  input: {\n    textAlign: 'center',\n    fontSize: 22\n  },\n  errorContainer: {\n    marginBottom: 10\n  },\n  errorText: {\n    color: 'red'\n  },\n  actionContainer: {\n    flexDirection: 'row',\n    marginTop: 5\n  }\n});\nexport default OPModal;","map":{"version":3,"names":["Input","Item","View","React","useEffect","useState","useTranslation","Spinner","Modal","checkOperationPassword","useStores","MCCButton","OPModal","show","onDismiss","t","stores","password","setPassword","spinner","setSpinner","error","setError","onPasswordChange","onSubmit","onCancel","onConfirm","success","message","styleSheet","view","title","item","input","e","nativeEvent","text","errorContainer","errorText","undefined","actionContainer","button","StyleSheet","create","backgroundColor","justifyContent","alignItems","borderRadius","paddingTop","paddingBottom","marginHorizontal","flex","marginVertical","fontSize","borderColor","marginLeft","marginRight","marginBottom","textAlign","color","flexDirection","marginTop"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/components/opModal/index.tsx"],"sourcesContent":["import { Input, Item, View } from 'native-base';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { StyleSheet, Text } from 'react-native';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport Modal from 'react-native-modal';\r\nimport { checkOperationPassword } from '../../actions/auth';\r\nimport { useStores } from '../../stores';\r\nimport MCCButton from '../mccButton';\r\n\r\ntype OPModalProp = {\r\n    show: boolean,\r\n    onDismiss: (result: string) => void\r\n}\r\n\r\nconst OPModal = ({ show, onDismiss }: OPModalProp) => {\r\n    const { t } = useTranslation();\r\n    const stores = useStores();\r\n    const [password, setPassword] = useState('');\r\n    const [spinner, setSpinner] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        setPassword('');\r\n        setError('');\r\n    }, [show]);\r\n\r\n    const onPasswordChange = (password: string) => {\r\n        setPassword(password);\r\n    }\r\n\r\n    const onSubmit = (password: string) => {\r\n        setPassword(password);\r\n    }\r\n\r\n    const onCancel = () => {\r\n        onDismiss('');\r\n    }\r\n\r\n    const onConfirm = async () => {\r\n        setSpinner(true);\r\n        const { success, message } = await checkOperationPassword({ stores, password });\r\n        setSpinner(false);\r\n        if (success) {\r\n            onDismiss(password);\r\n        }\r\n        else {\r\n            setError(t(message || 'Error.IncorrectOPPassword'));\r\n        }\r\n    }\r\n    return (\r\n        <Modal isVisible={show}>\r\n            <Spinner\r\n                visible={spinner}\r\n                color={'red'}\r\n                size={'large'}\r\n                overlayColor={'rgba(0, 0, 0, 0.25)'}\r\n            />\r\n            <View style={styleSheet.view}>\r\n                <Text style={styleSheet.title}>{t('Record.ST8')}</Text>\r\n                <Item\r\n                    style={styleSheet.item}\r\n                >\r\n                    <Input\r\n                        autoFocus={true}\r\n                        placeholder={t('Record.ST9')}\r\n                        secureTextEntry={true}\r\n                        style={styleSheet.input}\r\n                        onChangeText={onPasswordChange}\r\n                        value={password}\r\n                        onSubmitEditing={(e) => {\r\n                            onSubmit(e.nativeEvent.text);\r\n                        }}\r\n                    />\r\n                </Item>\r\n                {\r\n                    error ? (\r\n                        <View style={styleSheet.errorContainer}>\r\n                            <Text style={styleSheet.errorText}>{error}</Text>\r\n                        </View>\r\n                    ) : undefined\r\n                }\r\n                <View\r\n                    style={styleSheet.actionContainer}\r\n                >\r\n                    <View style={styleSheet.button}>\r\n                        <MCCButton\r\n                            onPress={onCancel}\r\n                            color='grey'\r\n                            text={t('Common.Cancel')}\r\n                        />\r\n                    </View>\r\n                    <View style={styleSheet.button}>\r\n                        <MCCButton\r\n                            onPress={onConfirm}\r\n                            text={t('Common.Confirm')}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    view: {\r\n        backgroundColor: 'white',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 10,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n    },\r\n    button: {\r\n        justifyContent: 'center',\r\n        marginHorizontal: 5,\r\n        flex: 1,\r\n    },\r\n    title: {\r\n        marginVertical: 10,\r\n        fontSize: 24\r\n    },\r\n    text: {\r\n        fontSize: 20\r\n    },\r\n    item: {\r\n        borderColor: 'rgba(0,0,0,0.5)',\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        marginBottom: 10,\r\n    },\r\n    input: {\r\n        textAlign: 'center',\r\n        fontSize: 22\r\n    },\r\n    errorContainer: {\r\n        marginBottom: 10\r\n    },\r\n    errorText: {\r\n        color: 'red'\r\n    },\r\n    actionContainer: {\r\n        flexDirection: 'row',\r\n        marginTop: 5,\r\n    }\r\n});\r\n\r\nexport default OPModal;"],"mappings":"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"},"metadata":{},"sourceType":"module"}