{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\node_modules\\\\react-native-image-pan-zoom\\\\built\\\\image-zoom\\\\image-zoom.component.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar image_zoom_style_1 = require(\"./image-zoom.style\");\n\nvar image_zoom_type_1 = require(\"./image-zoom.type\");\n\nvar ImageViewer = function (_super) {\n  __extends(ImageViewer, _super);\n\n  function ImageViewer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = new image_zoom_type_1.ImageZoomState();\n    _this.lastPositionX = null;\n    _this.positionX = 0;\n    _this.animatedPositionX = new react_native_1.Animated.Value(0);\n    _this.lastPositionY = null;\n    _this.positionY = 0;\n    _this.animatedPositionY = new react_native_1.Animated.Value(0);\n    _this.scale = 1;\n    _this.animatedScale = new react_native_1.Animated.Value(1);\n    _this.zoomLastDistance = null;\n    _this.zoomCurrentDistance = 0;\n    _this.lastTouchStartTime = 0;\n    _this.horizontalWholeOuterCounter = 0;\n    _this.swipeDownOffset = 0;\n    _this.horizontalWholeCounter = 0;\n    _this.verticalWholeCounter = 0;\n    _this.centerDiffX = 0;\n    _this.centerDiffY = 0;\n    _this.lastClickTime = 0;\n    _this.doubleClickX = 0;\n    _this.doubleClickY = 0;\n    _this.isDoubleClick = false;\n    _this.isLongPress = false;\n    _this.isHorizontalWrap = false;\n    _this.imagePanResponder = react_native_1.PanResponder.create({\n      onStartShouldSetPanResponder: _this.props.onStartShouldSetPanResponder,\n      onPanResponderTerminationRequest: _this.props.onPanResponderTerminationRequest,\n      onMoveShouldSetPanResponder: _this.props.onMoveShouldSetPanResponder,\n      onPanResponderGrant: function onPanResponderGrant(evt) {\n        _this.lastPositionX = null;\n        _this.lastPositionY = null;\n        _this.zoomLastDistance = null;\n        _this.horizontalWholeCounter = 0;\n        _this.verticalWholeCounter = 0;\n        _this.lastTouchStartTime = new Date().getTime();\n        _this.isDoubleClick = false;\n        _this.isLongPress = false;\n        _this.isHorizontalWrap = false;\n\n        if (_this.singleClickTimeout) {\n          clearTimeout(_this.singleClickTimeout);\n        }\n\n        if (evt.nativeEvent.changedTouches.length > 1) {\n          var centerX = (evt.nativeEvent.changedTouches[0].pageX + evt.nativeEvent.changedTouches[1].pageX) / 2;\n          _this.centerDiffX = centerX - _this.props.cropWidth / 2;\n          var centerY = (evt.nativeEvent.changedTouches[0].pageY + evt.nativeEvent.changedTouches[1].pageY) / 2;\n          _this.centerDiffY = centerY - _this.props.cropHeight / 2;\n        }\n\n        if (_this.longPressTimeout) {\n          clearTimeout(_this.longPressTimeout);\n        }\n\n        var _a = evt.nativeEvent,\n            locationX = _a.locationX,\n            locationY = _a.locationY,\n            pageX = _a.pageX,\n            pageY = _a.pageY;\n        _this.longPressTimeout = setTimeout(function () {\n          _this.isLongPress = true;\n\n          if (_this.props.onLongPress) {\n            _this.props.onLongPress({\n              locationX: locationX,\n              locationY: locationY,\n              pageX: pageX,\n              pageY: pageY\n            });\n          }\n        }, _this.props.longPressTime);\n\n        if (evt.nativeEvent.changedTouches.length <= 1) {\n          if (new Date().getTime() - _this.lastClickTime < (_this.props.doubleClickInterval || 0)) {\n            _this.lastClickTime = 0;\n            _this.doubleClickX = evt.nativeEvent.changedTouches[0].pageX;\n            _this.doubleClickY = evt.nativeEvent.changedTouches[0].pageY;\n\n            if (_this.props.onDoubleClick) {\n              _this.props.onDoubleClick({\n                locationX: evt.nativeEvent.changedTouches[0].locationX,\n                locationY: evt.nativeEvent.changedTouches[0].locationY,\n                pageX: _this.doubleClickX,\n                pageY: _this.doubleClickY\n              });\n            }\n\n            clearTimeout(_this.longPressTimeout);\n            _this.isDoubleClick = true;\n\n            if (_this.props.enableDoubleClickZoom) {\n              if (_this.scale > 1 || _this.scale < 1) {\n                _this.scale = 1;\n                _this.positionX = 0;\n                _this.positionY = 0;\n              } else {\n                var beforeScale = _this.scale;\n                _this.scale = 2;\n                var diffScale = _this.scale - beforeScale;\n                _this.positionX = (_this.props.cropWidth / 2 - _this.doubleClickX) * diffScale / _this.scale;\n                _this.positionY = (_this.props.cropHeight / 2 - _this.doubleClickY) * diffScale / _this.scale;\n              }\n\n              _this.imageDidMove('centerOn');\n\n              react_native_1.Animated.parallel([react_native_1.Animated.timing(_this.animatedScale, {\n                toValue: _this.scale,\n                duration: 100,\n                useNativeDriver: !!_this.props.useNativeDriver\n              }), react_native_1.Animated.timing(_this.animatedPositionX, {\n                toValue: _this.positionX,\n                duration: 100,\n                useNativeDriver: !!_this.props.useNativeDriver\n              }), react_native_1.Animated.timing(_this.animatedPositionY, {\n                toValue: _this.positionY,\n                duration: 100,\n                useNativeDriver: !!_this.props.useNativeDriver\n              })]).start();\n            }\n          } else {\n            _this.lastClickTime = new Date().getTime();\n          }\n        }\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        if (_this.isDoubleClick) {\n          return;\n        }\n\n        if (evt.nativeEvent.changedTouches.length <= 1) {\n          var diffX = gestureState.dx - (_this.lastPositionX || 0);\n\n          if (_this.lastPositionX === null) {\n            diffX = 0;\n          }\n\n          var diffY = gestureState.dy - (_this.lastPositionY || 0);\n\n          if (_this.lastPositionY === null) {\n            diffY = 0;\n          }\n\n          _this.lastPositionX = gestureState.dx;\n          _this.lastPositionY = gestureState.dy;\n          _this.horizontalWholeCounter += diffX;\n          _this.verticalWholeCounter += diffY;\n\n          if (Math.abs(_this.horizontalWholeCounter) > 5 || Math.abs(_this.verticalWholeCounter) > 5) {\n            clearTimeout(_this.longPressTimeout);\n          }\n\n          if (_this.props.panToMove) {\n            if (_this.swipeDownOffset === 0) {\n              if (Math.abs(diffX) > Math.abs(diffY)) {\n                _this.isHorizontalWrap = true;\n              }\n\n              if (_this.props.imageWidth * _this.scale > _this.props.cropWidth) {\n                if (_this.horizontalWholeOuterCounter > 0) {\n                  if (diffX < 0) {\n                    if (_this.horizontalWholeOuterCounter > Math.abs(diffX)) {\n                      _this.horizontalWholeOuterCounter += diffX;\n                      diffX = 0;\n                    } else {\n                      diffX += _this.horizontalWholeOuterCounter;\n                      _this.horizontalWholeOuterCounter = 0;\n\n                      if (_this.props.horizontalOuterRangeOffset) {\n                        _this.props.horizontalOuterRangeOffset(0);\n                      }\n                    }\n                  } else {\n                    _this.horizontalWholeOuterCounter += diffX;\n                  }\n                } else if (_this.horizontalWholeOuterCounter < 0) {\n                  if (diffX > 0) {\n                    if (Math.abs(_this.horizontalWholeOuterCounter) > diffX) {\n                      _this.horizontalWholeOuterCounter += diffX;\n                      diffX = 0;\n                    } else {\n                      diffX += _this.horizontalWholeOuterCounter;\n                      _this.horizontalWholeOuterCounter = 0;\n\n                      if (_this.props.horizontalOuterRangeOffset) {\n                        _this.props.horizontalOuterRangeOffset(0);\n                      }\n                    }\n                  } else {\n                    _this.horizontalWholeOuterCounter += diffX;\n                  }\n                } else {}\n\n                _this.positionX += diffX / _this.scale;\n                var horizontalMax = (_this.props.imageWidth * _this.scale - _this.props.cropWidth) / 2 / _this.scale;\n\n                if (_this.positionX < -horizontalMax) {\n                  _this.positionX = -horizontalMax;\n                  _this.horizontalWholeOuterCounter += -1 / 1e10;\n                } else if (_this.positionX > horizontalMax) {\n                  _this.positionX = horizontalMax;\n                  _this.horizontalWholeOuterCounter += 1 / 1e10;\n                }\n\n                _this.animatedPositionX.setValue(_this.positionX);\n              } else {\n                _this.horizontalWholeOuterCounter += diffX;\n              }\n\n              if (_this.horizontalWholeOuterCounter > (_this.props.maxOverflow || 0)) {\n                _this.horizontalWholeOuterCounter = _this.props.maxOverflow || 0;\n              } else if (_this.horizontalWholeOuterCounter < -(_this.props.maxOverflow || 0)) {\n                _this.horizontalWholeOuterCounter = -(_this.props.maxOverflow || 0);\n              }\n\n              if (_this.horizontalWholeOuterCounter !== 0) {\n                if (_this.props.horizontalOuterRangeOffset) {\n                  _this.props.horizontalOuterRangeOffset(_this.horizontalWholeOuterCounter);\n                }\n              }\n            }\n\n            if (_this.props.imageHeight * _this.scale > _this.props.cropHeight) {\n              _this.positionY += diffY / _this.scale;\n\n              _this.animatedPositionY.setValue(_this.positionY);\n            } else {\n              if (_this.props.enableSwipeDown && !_this.isHorizontalWrap) {\n                _this.swipeDownOffset += diffY;\n\n                if (_this.swipeDownOffset > 0) {\n                  _this.positionY += diffY / _this.scale;\n\n                  _this.animatedPositionY.setValue(_this.positionY);\n\n                  _this.scale = _this.scale - diffY / 1000;\n\n                  _this.animatedScale.setValue(_this.scale);\n                }\n              }\n            }\n          }\n        } else {\n          if (_this.longPressTimeout) {\n            clearTimeout(_this.longPressTimeout);\n          }\n\n          if (_this.props.pinchToZoom) {\n            var minX = void 0;\n            var maxX = void 0;\n\n            if (evt.nativeEvent.changedTouches[0].locationX > evt.nativeEvent.changedTouches[1].locationX) {\n              minX = evt.nativeEvent.changedTouches[1].pageX;\n              maxX = evt.nativeEvent.changedTouches[0].pageX;\n            } else {\n              minX = evt.nativeEvent.changedTouches[0].pageX;\n              maxX = evt.nativeEvent.changedTouches[1].pageX;\n            }\n\n            var minY = void 0;\n            var maxY = void 0;\n\n            if (evt.nativeEvent.changedTouches[0].locationY > evt.nativeEvent.changedTouches[1].locationY) {\n              minY = evt.nativeEvent.changedTouches[1].pageY;\n              maxY = evt.nativeEvent.changedTouches[0].pageY;\n            } else {\n              minY = evt.nativeEvent.changedTouches[0].pageY;\n              maxY = evt.nativeEvent.changedTouches[1].pageY;\n            }\n\n            var widthDistance = maxX - minX;\n            var heightDistance = maxY - minY;\n            var diagonalDistance = Math.sqrt(widthDistance * widthDistance + heightDistance * heightDistance);\n            _this.zoomCurrentDistance = Number(diagonalDistance.toFixed(1));\n\n            if (_this.zoomLastDistance !== null) {\n              var distanceDiff = (_this.zoomCurrentDistance - _this.zoomLastDistance) / 200;\n              var zoom = _this.scale + distanceDiff;\n\n              if (zoom < (_this.props.minScale || 0)) {\n                zoom = _this.props.minScale || 0;\n              }\n\n              if (zoom > (_this.props.maxScale || 0)) {\n                zoom = _this.props.maxScale || 0;\n              }\n\n              var beforeScale = _this.scale;\n              _this.scale = zoom;\n\n              _this.animatedScale.setValue(_this.scale);\n\n              var diffScale = _this.scale - beforeScale;\n              _this.positionX -= _this.centerDiffX * diffScale / _this.scale;\n              _this.positionY -= _this.centerDiffY * diffScale / _this.scale;\n\n              _this.animatedPositionX.setValue(_this.positionX);\n\n              _this.animatedPositionY.setValue(_this.positionY);\n            }\n\n            _this.zoomLastDistance = _this.zoomCurrentDistance;\n          }\n        }\n\n        _this.imageDidMove('onPanResponderMove');\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n        if (_this.longPressTimeout) {\n          clearTimeout(_this.longPressTimeout);\n        }\n\n        if (_this.isDoubleClick) {\n          return;\n        }\n\n        if (_this.isLongPress) {\n          return;\n        }\n\n        var moveDistance = Math.sqrt(gestureState.dx * gestureState.dx + gestureState.dy * gestureState.dy);\n        var _a = evt.nativeEvent,\n            locationX = _a.locationX,\n            locationY = _a.locationY,\n            pageX = _a.pageX,\n            pageY = _a.pageY;\n\n        if (evt.nativeEvent.changedTouches.length === 1 && moveDistance < (_this.props.clickDistance || 0)) {\n          _this.singleClickTimeout = setTimeout(function () {\n            if (_this.props.onClick) {\n              _this.props.onClick({\n                locationX: locationX,\n                locationY: locationY,\n                pageX: pageX,\n                pageY: pageY\n              });\n            }\n          }, _this.props.doubleClickInterval);\n        } else {\n          if (_this.props.responderRelease) {\n            _this.props.responderRelease(gestureState.vx, _this.scale);\n          }\n\n          _this.panResponderReleaseResolve();\n        }\n      },\n      onPanResponderTerminate: function onPanResponderTerminate() {}\n    });\n\n    _this.resetScale = function () {\n      _this.positionX = 0;\n      _this.positionY = 0;\n      _this.scale = 1;\n\n      _this.animatedScale.setValue(1);\n    };\n\n    _this.panResponderReleaseResolve = function () {\n      if (_this.props.enableSwipeDown && _this.props.swipeDownThreshold) {\n        if (_this.swipeDownOffset > _this.props.swipeDownThreshold) {\n          if (_this.props.onSwipeDown) {\n            _this.props.onSwipeDown();\n          }\n\n          return;\n        }\n      }\n\n      if (_this.props.enableCenterFocus && _this.scale < 1) {\n        _this.scale = 1;\n        react_native_1.Animated.timing(_this.animatedScale, {\n          toValue: _this.scale,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n      }\n\n      if (_this.props.imageWidth * _this.scale <= _this.props.cropWidth) {\n        _this.positionX = 0;\n        react_native_1.Animated.timing(_this.animatedPositionX, {\n          toValue: _this.positionX,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n      }\n\n      if (_this.props.imageHeight * _this.scale <= _this.props.cropHeight) {\n        _this.positionY = 0;\n        react_native_1.Animated.timing(_this.animatedPositionY, {\n          toValue: _this.positionY,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n      }\n\n      if (_this.props.imageHeight * _this.scale > _this.props.cropHeight) {\n        var verticalMax = (_this.props.imageHeight * _this.scale - _this.props.cropHeight) / 2 / _this.scale;\n\n        if (_this.positionY < -verticalMax) {\n          _this.positionY = -verticalMax;\n        } else if (_this.positionY > verticalMax) {\n          _this.positionY = verticalMax;\n        }\n\n        react_native_1.Animated.timing(_this.animatedPositionY, {\n          toValue: _this.positionY,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n      }\n\n      if (_this.props.imageWidth * _this.scale > _this.props.cropWidth) {\n        var horizontalMax = (_this.props.imageWidth * _this.scale - _this.props.cropWidth) / 2 / _this.scale;\n\n        if (_this.positionX < -horizontalMax) {\n          _this.positionX = -horizontalMax;\n        } else if (_this.positionX > horizontalMax) {\n          _this.positionX = horizontalMax;\n        }\n\n        react_native_1.Animated.timing(_this.animatedPositionX, {\n          toValue: _this.positionX,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n      }\n\n      if (_this.props.enableCenterFocus && _this.scale === 1) {\n        _this.positionX = 0;\n        _this.positionY = 0;\n        react_native_1.Animated.timing(_this.animatedPositionX, {\n          toValue: _this.positionX,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n        react_native_1.Animated.timing(_this.animatedPositionY, {\n          toValue: _this.positionY,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n      }\n\n      _this.horizontalWholeOuterCounter = 0;\n      _this.swipeDownOffset = 0;\n\n      _this.imageDidMove('onPanResponderRelease');\n    };\n\n    return _this;\n  }\n\n  ImageViewer.prototype.componentDidMount = function () {\n    if (this.props.centerOn) {\n      this.centerOn(this.props.centerOn);\n    }\n  };\n\n  ImageViewer.prototype.componentDidUpdate = function (prevProps) {\n    if (this.props.centerOn && !prevProps.centerOn || this.props.centerOn && prevProps.centerOn && this.didCenterOnChange(prevProps.centerOn, this.props.centerOn)) {\n      this.centerOn(this.props.centerOn);\n    }\n  };\n\n  ImageViewer.prototype.imageDidMove = function (type) {\n    if (this.props.onMove) {\n      this.props.onMove({\n        type: type,\n        positionX: this.positionX,\n        positionY: this.positionY,\n        scale: this.scale,\n        zoomCurrentDistance: this.zoomCurrentDistance\n      });\n    }\n  };\n\n  ImageViewer.prototype.didCenterOnChange = function (params, paramsNext) {\n    return params.x !== paramsNext.x || params.y !== paramsNext.y || params.scale !== paramsNext.scale;\n  };\n\n  ImageViewer.prototype.centerOn = function (params) {\n    var _this = this;\n\n    this.positionX = params.x;\n    this.positionY = params.y;\n    this.scale = params.scale;\n    var duration = params.duration || 300;\n    react_native_1.Animated.parallel([react_native_1.Animated.timing(this.animatedScale, {\n      toValue: this.scale,\n      duration: duration,\n      useNativeDriver: !!this.props.useNativeDriver\n    }), react_native_1.Animated.timing(this.animatedPositionX, {\n      toValue: this.positionX,\n      duration: duration,\n      useNativeDriver: !!this.props.useNativeDriver\n    }), react_native_1.Animated.timing(this.animatedPositionY, {\n      toValue: this.positionY,\n      duration: duration,\n      useNativeDriver: !!this.props.useNativeDriver\n    })]).start(function () {\n      _this.imageDidMove('centerOn');\n    });\n  };\n\n  ImageViewer.prototype.handleLayout = function (event) {\n    if (this.props.layoutChange) {\n      this.props.layoutChange(event);\n    }\n  };\n\n  ImageViewer.prototype.reset = function () {\n    this.scale = 1;\n    this.animatedScale.setValue(this.scale);\n    this.positionX = 0;\n    this.animatedPositionX.setValue(this.positionX);\n    this.positionY = 0;\n    this.animatedPositionY.setValue(this.positionY);\n  };\n\n  ImageViewer.prototype.render = function () {\n    var animateConf = {\n      transform: [{\n        scale: this.animatedScale\n      }, {\n        translateX: this.animatedPositionX\n      }, {\n        translateY: this.animatedPositionY\n      }]\n    };\n    var parentStyles = react_native_1.StyleSheet.flatten(this.props.style);\n    return React.createElement(react_native_1.View, _extends({\n      style: __assign(__assign(__assign({}, image_zoom_style_1.default.container), parentStyles), {\n        width: this.props.cropWidth,\n        height: this.props.cropHeight\n      })\n    }, this.imagePanResponder.panHandlers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 17\n      }\n    }), React.createElement(react_native_1.Animated.View, {\n      style: animateConf,\n      renderToHardwareTextureAndroid: this.props.useHardwareTextureAndroid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }\n    }, React.createElement(react_native_1.View, {\n      onLayout: this.handleLayout.bind(this),\n      style: {\n        width: this.props.imageWidth,\n        height: this.props.imageHeight\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 11\n      }\n    }, this.props.children)));\n  };\n\n  ImageViewer.defaultProps = new image_zoom_type_1.ImageZoomProps();\n  return ImageViewer;\n}(React.Component);\n\nexports.default = ImageViewer;","map":{"version":3,"sources":["../../src/image-zoom/image-zoom.component.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar react_native_1 = require(\"react-native\");\nvar image_zoom_style_1 = require(\"./image-zoom.style\");\nvar image_zoom_type_1 = require(\"./image-zoom.type\");\nvar ImageViewer = /** @class */ (function (_super) {\n    __extends(ImageViewer, _super);\n    function ImageViewer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = new image_zoom_type_1.ImageZoomState();\n        // 上次/当前/动画 x 位移\n        _this.lastPositionX = null;\n        _this.positionX = 0;\n        _this.animatedPositionX = new react_native_1.Animated.Value(0);\n        // 上次/当前/动画 y 位移\n        _this.lastPositionY = null;\n        _this.positionY = 0;\n        _this.animatedPositionY = new react_native_1.Animated.Value(0);\n        // 缩放大小\n        _this.scale = 1;\n        _this.animatedScale = new react_native_1.Animated.Value(1);\n        _this.zoomLastDistance = null;\n        _this.zoomCurrentDistance = 0;\n        // 上次手按下去的时间\n        _this.lastTouchStartTime = 0;\n        // 滑动过程中，整体横向过界偏移量\n        _this.horizontalWholeOuterCounter = 0;\n        // 滑动过程中，swipeDown 偏移量\n        _this.swipeDownOffset = 0;\n        // 滑动过程中，x y的总位移\n        _this.horizontalWholeCounter = 0;\n        _this.verticalWholeCounter = 0;\n        // 两手距离中心点位置\n        _this.centerDiffX = 0;\n        _this.centerDiffY = 0;\n        // 上一次点击的时间\n        _this.lastClickTime = 0;\n        // 双击时的位置\n        _this.doubleClickX = 0;\n        _this.doubleClickY = 0;\n        // 是否双击了\n        _this.isDoubleClick = false;\n        // 是否是长按\n        _this.isLongPress = false;\n        // 是否在左右滑\n        _this.isHorizontalWrap = false;\n        // 图片手势处理\n        _this.imagePanResponder = react_native_1.PanResponder.create({\n            // 要求成为响应者：\n            onStartShouldSetPanResponder: _this.props.onStartShouldSetPanResponder,\n            onPanResponderTerminationRequest: _this.props.onPanResponderTerminationRequest,\n            onMoveShouldSetPanResponder: _this.props.onMoveShouldSetPanResponder,\n            onPanResponderGrant: function (evt) {\n                // 开始手势操作\n                _this.lastPositionX = null;\n                _this.lastPositionY = null;\n                _this.zoomLastDistance = null;\n                _this.horizontalWholeCounter = 0;\n                _this.verticalWholeCounter = 0;\n                _this.lastTouchStartTime = new Date().getTime();\n                _this.isDoubleClick = false;\n                _this.isLongPress = false;\n                _this.isHorizontalWrap = false;\n                // 任何手势开始，都清空单击计时器\n                if (_this.singleClickTimeout) {\n                    clearTimeout(_this.singleClickTimeout);\n                }\n                if (evt.nativeEvent.changedTouches.length > 1) {\n                    var centerX = (evt.nativeEvent.changedTouches[0].pageX + evt.nativeEvent.changedTouches[1].pageX) / 2;\n                    _this.centerDiffX = centerX - _this.props.cropWidth / 2;\n                    var centerY = (evt.nativeEvent.changedTouches[0].pageY + evt.nativeEvent.changedTouches[1].pageY) / 2;\n                    _this.centerDiffY = centerY - _this.props.cropHeight / 2;\n                }\n                // 计算长按\n                if (_this.longPressTimeout) {\n                    clearTimeout(_this.longPressTimeout);\n                }\n                var _a = evt.nativeEvent, locationX = _a.locationX, locationY = _a.locationY, pageX = _a.pageX, pageY = _a.pageY;\n                _this.longPressTimeout = setTimeout(function () {\n                    _this.isLongPress = true;\n                    if (_this.props.onLongPress) {\n                        _this.props.onLongPress({ locationX: locationX, locationY: locationY, pageX: pageX, pageY: pageY });\n                    }\n                }, _this.props.longPressTime);\n                if (evt.nativeEvent.changedTouches.length <= 1) {\n                    // 一个手指的情况\n                    if (new Date().getTime() - _this.lastClickTime < (_this.props.doubleClickInterval || 0)) {\n                        // 认为触发了双击\n                        _this.lastClickTime = 0;\n                        // 因为可能触发放大，因此记录双击时的坐标位置\n                        _this.doubleClickX = evt.nativeEvent.changedTouches[0].pageX;\n                        _this.doubleClickY = evt.nativeEvent.changedTouches[0].pageY;\n                        if (_this.props.onDoubleClick) {\n                            _this.props.onDoubleClick({\n                                locationX: evt.nativeEvent.changedTouches[0].locationX,\n                                locationY: evt.nativeEvent.changedTouches[0].locationY,\n                                pageX: _this.doubleClickX,\n                                pageY: _this.doubleClickY,\n                            });\n                        }\n                        // 取消长按\n                        clearTimeout(_this.longPressTimeout);\n                        // 缩放\n                        _this.isDoubleClick = true;\n                        if (_this.props.enableDoubleClickZoom) {\n                            if (_this.scale > 1 || _this.scale < 1) {\n                                // 回归原位\n                                _this.scale = 1;\n                                _this.positionX = 0;\n                                _this.positionY = 0;\n                            }\n                            else {\n                                // 开始在位移地点缩放\n                                // 记录之前缩放比例\n                                // 此时 this.scale 一定为 1\n                                var beforeScale = _this.scale;\n                                // 开始缩放\n                                _this.scale = 2;\n                                // 缩放 diff\n                                var diffScale = _this.scale - beforeScale;\n                                // 找到两手中心点距离页面中心的位移\n                                // 移动位置\n                                _this.positionX = ((_this.props.cropWidth / 2 - _this.doubleClickX) * diffScale) / _this.scale;\n                                _this.positionY = ((_this.props.cropHeight / 2 - _this.doubleClickY) * diffScale) / _this.scale;\n                            }\n                            _this.imageDidMove('centerOn');\n                            react_native_1.Animated.parallel([\n                                react_native_1.Animated.timing(_this.animatedScale, {\n                                    toValue: _this.scale,\n                                    duration: 100,\n                                    useNativeDriver: !!_this.props.useNativeDriver,\n                                }),\n                                react_native_1.Animated.timing(_this.animatedPositionX, {\n                                    toValue: _this.positionX,\n                                    duration: 100,\n                                    useNativeDriver: !!_this.props.useNativeDriver,\n                                }),\n                                react_native_1.Animated.timing(_this.animatedPositionY, {\n                                    toValue: _this.positionY,\n                                    duration: 100,\n                                    useNativeDriver: !!_this.props.useNativeDriver,\n                                }),\n                            ]).start();\n                        }\n                    }\n                    else {\n                        _this.lastClickTime = new Date().getTime();\n                    }\n                }\n            },\n            onPanResponderMove: function (evt, gestureState) {\n                if (_this.isDoubleClick) {\n                    // 有时双击会被当做位移，这里屏蔽掉\n                    return;\n                }\n                if (evt.nativeEvent.changedTouches.length <= 1) {\n                    // x 位移\n                    var diffX = gestureState.dx - (_this.lastPositionX || 0);\n                    if (_this.lastPositionX === null) {\n                        diffX = 0;\n                    }\n                    // y 位移\n                    var diffY = gestureState.dy - (_this.lastPositionY || 0);\n                    if (_this.lastPositionY === null) {\n                        diffY = 0;\n                    }\n                    // 保留这一次位移作为下次的上一次位移\n                    _this.lastPositionX = gestureState.dx;\n                    _this.lastPositionY = gestureState.dy;\n                    _this.horizontalWholeCounter += diffX;\n                    _this.verticalWholeCounter += diffY;\n                    if (Math.abs(_this.horizontalWholeCounter) > 5 || Math.abs(_this.verticalWholeCounter) > 5) {\n                        // 如果位移超出手指范围，取消长按监听\n                        clearTimeout(_this.longPressTimeout);\n                    }\n                    if (_this.props.panToMove) {\n                        // 处理左右滑，如果正在 swipeDown，左右滑失效\n                        if (_this.swipeDownOffset === 0) {\n                            if (Math.abs(diffX) > Math.abs(diffY)) {\n                                _this.isHorizontalWrap = true;\n                            }\n                            // diffX > 0 表示手往右滑，图往左移动，反之同理\n                            // horizontalWholeOuterCounter > 0 表示溢出在左侧，反之在右侧，绝对值越大溢出越多\n                            if (_this.props.imageWidth * _this.scale > _this.props.cropWidth) {\n                                // 如果图片宽度大图盒子宽度， 可以横向拖拽\n                                // 没有溢出偏移量或者这次位移完全收回了偏移量才能拖拽\n                                if (_this.horizontalWholeOuterCounter > 0) {\n                                    // 溢出在右侧\n                                    if (diffX < 0) {\n                                        // 从右侧收紧\n                                        if (_this.horizontalWholeOuterCounter > Math.abs(diffX)) {\n                                            // 偏移量还没有用完\n                                            _this.horizontalWholeOuterCounter += diffX;\n                                            diffX = 0;\n                                        }\n                                        else {\n                                            // 溢出量置为0，偏移量减去剩余溢出量，并且可以被拖动\n                                            diffX += _this.horizontalWholeOuterCounter;\n                                            _this.horizontalWholeOuterCounter = 0;\n                                            if (_this.props.horizontalOuterRangeOffset) {\n                                                _this.props.horizontalOuterRangeOffset(0);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        // 向右侧扩增\n                                        _this.horizontalWholeOuterCounter += diffX;\n                                    }\n                                }\n                                else if (_this.horizontalWholeOuterCounter < 0) {\n                                    // 溢出在左侧\n                                    if (diffX > 0) {\n                                        // 从左侧收紧\n                                        if (Math.abs(_this.horizontalWholeOuterCounter) > diffX) {\n                                            // 偏移量还没有用完\n                                            _this.horizontalWholeOuterCounter += diffX;\n                                            diffX = 0;\n                                        }\n                                        else {\n                                            // 溢出量置为0，偏移量减去剩余溢出量，并且可以被拖动\n                                            diffX += _this.horizontalWholeOuterCounter;\n                                            _this.horizontalWholeOuterCounter = 0;\n                                            if (_this.props.horizontalOuterRangeOffset) {\n                                                _this.props.horizontalOuterRangeOffset(0);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        // 向左侧扩增\n                                        _this.horizontalWholeOuterCounter += diffX;\n                                    }\n                                }\n                                else {\n                                    // 溢出偏移量为0，正常移动\n                                }\n                                // 产生位移\n                                _this.positionX += diffX / _this.scale;\n                                // 但是横向不能出现黑边\n                                // 横向能容忍的绝对值\n                                var horizontalMax = (_this.props.imageWidth * _this.scale - _this.props.cropWidth) / 2 / _this.scale;\n                                if (_this.positionX < -horizontalMax) {\n                                    // 超越了左边临界点，还在继续向左移动\n                                    _this.positionX = -horizontalMax;\n                                    // 让其产生细微位移，偏离轨道\n                                    _this.horizontalWholeOuterCounter += -1 / 1e10;\n                                }\n                                else if (_this.positionX > horizontalMax) {\n                                    // 超越了右侧临界点，还在继续向右移动\n                                    _this.positionX = horizontalMax;\n                                    // 让其产生细微位移，偏离轨道\n                                    _this.horizontalWholeOuterCounter += 1 / 1e10;\n                                }\n                                _this.animatedPositionX.setValue(_this.positionX);\n                            }\n                            else {\n                                // 不能横向拖拽，全部算做溢出偏移量\n                                _this.horizontalWholeOuterCounter += diffX;\n                            }\n                            // 溢出量不会超过设定界限\n                            if (_this.horizontalWholeOuterCounter > (_this.props.maxOverflow || 0)) {\n                                _this.horizontalWholeOuterCounter = _this.props.maxOverflow || 0;\n                            }\n                            else if (_this.horizontalWholeOuterCounter < -(_this.props.maxOverflow || 0)) {\n                                _this.horizontalWholeOuterCounter = -(_this.props.maxOverflow || 0);\n                            }\n                            if (_this.horizontalWholeOuterCounter !== 0) {\n                                // 如果溢出偏移量不是0，执行溢出回调\n                                if (_this.props.horizontalOuterRangeOffset) {\n                                    _this.props.horizontalOuterRangeOffset(_this.horizontalWholeOuterCounter);\n                                }\n                            }\n                        }\n                        // 如果图片高度大于盒子高度， 可以纵向弹性拖拽\n                        if (_this.props.imageHeight * _this.scale > _this.props.cropHeight) {\n                            _this.positionY += diffY / _this.scale;\n                            _this.animatedPositionY.setValue(_this.positionY);\n                            // 如果图片上边缘脱离屏幕上边缘，则进入 swipeDown 动作\n                            // if (\n                            //   (this.props.imageHeight / 2 - this.positionY) * this.scale <\n                            //   this.props.cropHeight / 2\n                            // ) {\n                            //   if (this.props.enableSwipeDown) {\n                            //     this.swipeDownOffset += diffY\n                            //     // 只要滑动溢出量不小于 0，就可以拖动\n                            //     if (this.swipeDownOffset > 0) {\n                            //       this.positionY += diffY / this.scale\n                            //       this.animatedPositionY.setValue(this.positionY)\n                            //       // 越到下方，缩放越小\n                            //       this.scale = this.scale - diffY / 1000\n                            //       this.animatedScale.setValue(this.scale)\n                            //     }\n                            //   }\n                            // }\n                        }\n                        else {\n                            // swipeDown 不允许在已经有横向偏移量时触发\n                            if (_this.props.enableSwipeDown && !_this.isHorizontalWrap) {\n                                // 图片高度小于盒子高度，只能向下拖拽，而且一定是 swipeDown 动作\n                                _this.swipeDownOffset += diffY;\n                                // 只要滑动溢出量不小于 0，就可以拖动\n                                if (_this.swipeDownOffset > 0) {\n                                    _this.positionY += diffY / _this.scale;\n                                    _this.animatedPositionY.setValue(_this.positionY);\n                                    // 越到下方，缩放越小\n                                    _this.scale = _this.scale - diffY / 1000;\n                                    _this.animatedScale.setValue(_this.scale);\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    // 多个手指的情况\n                    // 取消长按状态\n                    if (_this.longPressTimeout) {\n                        clearTimeout(_this.longPressTimeout);\n                    }\n                    if (_this.props.pinchToZoom) {\n                        // 找最小的 x 和最大的 x\n                        var minX = void 0;\n                        var maxX = void 0;\n                        if (evt.nativeEvent.changedTouches[0].locationX > evt.nativeEvent.changedTouches[1].locationX) {\n                            minX = evt.nativeEvent.changedTouches[1].pageX;\n                            maxX = evt.nativeEvent.changedTouches[0].pageX;\n                        }\n                        else {\n                            minX = evt.nativeEvent.changedTouches[0].pageX;\n                            maxX = evt.nativeEvent.changedTouches[1].pageX;\n                        }\n                        var minY = void 0;\n                        var maxY = void 0;\n                        if (evt.nativeEvent.changedTouches[0].locationY > evt.nativeEvent.changedTouches[1].locationY) {\n                            minY = evt.nativeEvent.changedTouches[1].pageY;\n                            maxY = evt.nativeEvent.changedTouches[0].pageY;\n                        }\n                        else {\n                            minY = evt.nativeEvent.changedTouches[0].pageY;\n                            maxY = evt.nativeEvent.changedTouches[1].pageY;\n                        }\n                        var widthDistance = maxX - minX;\n                        var heightDistance = maxY - minY;\n                        var diagonalDistance = Math.sqrt(widthDistance * widthDistance + heightDistance * heightDistance);\n                        _this.zoomCurrentDistance = Number(diagonalDistance.toFixed(1));\n                        if (_this.zoomLastDistance !== null) {\n                            var distanceDiff = (_this.zoomCurrentDistance - _this.zoomLastDistance) / 200;\n                            var zoom = _this.scale + distanceDiff;\n                            if (zoom < (_this.props.minScale || 0)) {\n                                zoom = _this.props.minScale || 0;\n                            }\n                            if (zoom > (_this.props.maxScale || 0)) {\n                                zoom = _this.props.maxScale || 0;\n                            }\n                            // 记录之前缩放比例\n                            var beforeScale = _this.scale;\n                            // 开始缩放\n                            _this.scale = zoom;\n                            _this.animatedScale.setValue(_this.scale);\n                            // 图片要慢慢往两个手指的中心点移动\n                            // 缩放 diff\n                            var diffScale = _this.scale - beforeScale;\n                            // 找到两手中心点距离页面中心的位移\n                            // 移动位置\n                            _this.positionX -= (_this.centerDiffX * diffScale) / _this.scale;\n                            _this.positionY -= (_this.centerDiffY * diffScale) / _this.scale;\n                            _this.animatedPositionX.setValue(_this.positionX);\n                            _this.animatedPositionY.setValue(_this.positionY);\n                        }\n                        _this.zoomLastDistance = _this.zoomCurrentDistance;\n                    }\n                }\n                _this.imageDidMove('onPanResponderMove');\n            },\n            onPanResponderRelease: function (evt, gestureState) {\n                // 取消长按\n                if (_this.longPressTimeout) {\n                    clearTimeout(_this.longPressTimeout);\n                }\n                // 双击结束，结束尾判断\n                if (_this.isDoubleClick) {\n                    return;\n                }\n                // 长按结束，结束尾判断\n                if (_this.isLongPress) {\n                    return;\n                }\n                // 如果是单个手指、距离上次按住大于预设秒、滑动距离小于预设值, 则可能是单击（如果后续双击间隔内没有开始手势）\n                // const stayTime = new Date().getTime() - this.lastTouchStartTime!\n                var moveDistance = Math.sqrt(gestureState.dx * gestureState.dx + gestureState.dy * gestureState.dy);\n                var _a = evt.nativeEvent, locationX = _a.locationX, locationY = _a.locationY, pageX = _a.pageX, pageY = _a.pageY;\n                if (evt.nativeEvent.changedTouches.length === 1 && moveDistance < (_this.props.clickDistance || 0)) {\n                    _this.singleClickTimeout = setTimeout(function () {\n                        if (_this.props.onClick) {\n                            _this.props.onClick({ locationX: locationX, locationY: locationY, pageX: pageX, pageY: pageY });\n                        }\n                    }, _this.props.doubleClickInterval);\n                }\n                else {\n                    // 多手势结束，或者滑动结束\n                    if (_this.props.responderRelease) {\n                        _this.props.responderRelease(gestureState.vx, _this.scale);\n                    }\n                    _this.panResponderReleaseResolve();\n                }\n            },\n            onPanResponderTerminate: function () {\n                //\n            },\n        });\n        _this.resetScale = function () {\n            _this.positionX = 0;\n            _this.positionY = 0;\n            _this.scale = 1;\n            _this.animatedScale.setValue(1);\n        };\n        _this.panResponderReleaseResolve = function () {\n            // 判断是否是 swipeDown\n            if (_this.props.enableSwipeDown && _this.props.swipeDownThreshold) {\n                if (_this.swipeDownOffset > _this.props.swipeDownThreshold) {\n                    if (_this.props.onSwipeDown) {\n                        _this.props.onSwipeDown();\n                    }\n                    // Stop reset.\n                    return;\n                }\n            }\n            if (_this.props.enableCenterFocus && _this.scale < 1) {\n                // 如果缩放小于1，强制重置为 1\n                _this.scale = 1;\n                react_native_1.Animated.timing(_this.animatedScale, {\n                    toValue: _this.scale,\n                    duration: 100,\n                    useNativeDriver: !!_this.props.useNativeDriver,\n                }).start();\n            }\n            if (_this.props.imageWidth * _this.scale <= _this.props.cropWidth) {\n                // 如果图片宽度小于盒子宽度，横向位置重置\n                _this.positionX = 0;\n                react_native_1.Animated.timing(_this.animatedPositionX, {\n                    toValue: _this.positionX,\n                    duration: 100,\n                    useNativeDriver: !!_this.props.useNativeDriver,\n                }).start();\n            }\n            if (_this.props.imageHeight * _this.scale <= _this.props.cropHeight) {\n                // 如果图片高度小于盒子高度，纵向位置重置\n                _this.positionY = 0;\n                react_native_1.Animated.timing(_this.animatedPositionY, {\n                    toValue: _this.positionY,\n                    duration: 100,\n                    useNativeDriver: !!_this.props.useNativeDriver,\n                }).start();\n            }\n            // 横向肯定不会超出范围，由拖拽时控制\n            // 如果图片高度大于盒子高度，纵向不能出现黑边\n            if (_this.props.imageHeight * _this.scale > _this.props.cropHeight) {\n                // 纵向能容忍的绝对值\n                var verticalMax = (_this.props.imageHeight * _this.scale - _this.props.cropHeight) / 2 / _this.scale;\n                if (_this.positionY < -verticalMax) {\n                    _this.positionY = -verticalMax;\n                }\n                else if (_this.positionY > verticalMax) {\n                    _this.positionY = verticalMax;\n                }\n                react_native_1.Animated.timing(_this.animatedPositionY, {\n                    toValue: _this.positionY,\n                    duration: 100,\n                    useNativeDriver: !!_this.props.useNativeDriver,\n                }).start();\n            }\n            if (_this.props.imageWidth * _this.scale > _this.props.cropWidth) {\n                // 纵向能容忍的绝对值\n                var horizontalMax = (_this.props.imageWidth * _this.scale - _this.props.cropWidth) / 2 / _this.scale;\n                if (_this.positionX < -horizontalMax) {\n                    _this.positionX = -horizontalMax;\n                }\n                else if (_this.positionX > horizontalMax) {\n                    _this.positionX = horizontalMax;\n                }\n                react_native_1.Animated.timing(_this.animatedPositionX, {\n                    toValue: _this.positionX,\n                    duration: 100,\n                    useNativeDriver: !!_this.props.useNativeDriver,\n                }).start();\n            }\n            // 拖拽正常结束后,如果没有缩放,直接回到0,0点\n            if (_this.props.enableCenterFocus && _this.scale === 1) {\n                _this.positionX = 0;\n                _this.positionY = 0;\n                react_native_1.Animated.timing(_this.animatedPositionX, {\n                    toValue: _this.positionX,\n                    duration: 100,\n                    useNativeDriver: !!_this.props.useNativeDriver,\n                }).start();\n                react_native_1.Animated.timing(_this.animatedPositionY, {\n                    toValue: _this.positionY,\n                    duration: 100,\n                    useNativeDriver: !!_this.props.useNativeDriver,\n                }).start();\n            }\n            // 水平溢出量置空\n            _this.horizontalWholeOuterCounter = 0;\n            // swipeDown 溢出量置空\n            _this.swipeDownOffset = 0;\n            _this.imageDidMove('onPanResponderRelease');\n        };\n        return _this;\n    }\n    ImageViewer.prototype.componentDidMount = function () {\n        if (this.props.centerOn) {\n            this.centerOn(this.props.centerOn);\n        }\n    };\n    ImageViewer.prototype.componentDidUpdate = function (prevProps) {\n        // Either centerOn has never been called, or it is a repeat and we should ignore it\n        if ((this.props.centerOn && !prevProps.centerOn) ||\n            (this.props.centerOn && prevProps.centerOn && this.didCenterOnChange(prevProps.centerOn, this.props.centerOn))) {\n            this.centerOn(this.props.centerOn);\n        }\n    };\n    ImageViewer.prototype.imageDidMove = function (type) {\n        if (this.props.onMove) {\n            this.props.onMove({\n                type: type,\n                positionX: this.positionX,\n                positionY: this.positionY,\n                scale: this.scale,\n                zoomCurrentDistance: this.zoomCurrentDistance,\n            });\n        }\n    };\n    ImageViewer.prototype.didCenterOnChange = function (params, paramsNext) {\n        return params.x !== paramsNext.x || params.y !== paramsNext.y || params.scale !== paramsNext.scale;\n    };\n    ImageViewer.prototype.centerOn = function (params) {\n        var _this = this;\n        this.positionX = params.x;\n        this.positionY = params.y;\n        this.scale = params.scale;\n        var duration = params.duration || 300;\n        react_native_1.Animated.parallel([\n            react_native_1.Animated.timing(this.animatedScale, {\n                toValue: this.scale,\n                duration: duration,\n                useNativeDriver: !!this.props.useNativeDriver,\n            }),\n            react_native_1.Animated.timing(this.animatedPositionX, {\n                toValue: this.positionX,\n                duration: duration,\n                useNativeDriver: !!this.props.useNativeDriver,\n            }),\n            react_native_1.Animated.timing(this.animatedPositionY, {\n                toValue: this.positionY,\n                duration: duration,\n                useNativeDriver: !!this.props.useNativeDriver,\n            }),\n        ]).start(function () {\n            _this.imageDidMove('centerOn');\n        });\n    };\n    /**\n     * 图片区域视图渲染完毕\n     */\n    ImageViewer.prototype.handleLayout = function (event) {\n        if (this.props.layoutChange) {\n            this.props.layoutChange(event);\n        }\n    };\n    /**\n     * 重置大小和位置\n     */\n    ImageViewer.prototype.reset = function () {\n        this.scale = 1;\n        this.animatedScale.setValue(this.scale);\n        this.positionX = 0;\n        this.animatedPositionX.setValue(this.positionX);\n        this.positionY = 0;\n        this.animatedPositionY.setValue(this.positionY);\n    };\n    ImageViewer.prototype.render = function () {\n        var animateConf = {\n            transform: [\n                {\n                    scale: this.animatedScale,\n                },\n                {\n                    translateX: this.animatedPositionX,\n                },\n                {\n                    translateY: this.animatedPositionY,\n                },\n            ],\n        };\n        var parentStyles = react_native_1.StyleSheet.flatten(this.props.style);\n        return (<react_native_1.View style={__assign(__assign(__assign({}, image_zoom_style_1.default.container), parentStyles), { width: this.props.cropWidth, height: this.props.cropHeight })} {...this.imagePanResponder.panHandlers}>\n        <react_native_1.Animated.View style={animateConf} renderToHardwareTextureAndroid={this.props.useHardwareTextureAndroid}>\n          <react_native_1.View onLayout={this.handleLayout.bind(this)} style={{\n            width: this.props.imageWidth,\n            height: this.props.imageHeight,\n        }}>\n            {this.props.children}\n          </react_native_1.View>\n        </react_native_1.Animated.View>\n      </react_native_1.View>);\n    };\n    ImageViewer.defaultProps = new image_zoom_type_1.ImageZoomProps();\n    return ImageViewer;\n}(React.Component));\nexports.default = ImageViewer;\n//# sourceMappingURL=image-zoom.component.js.map"]},"metadata":{},"sourceType":"script"}