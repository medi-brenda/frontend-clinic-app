{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\node_modules\\\\react-native-signature-canvas\\\\index.js\";\n\nimport React, { useState, useMemo, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport htmlContent from \"./h5/html\";\nimport injectedSignaturePad from \"./h5/js/signature_pad\";\nimport injectedApplication from \"./h5/js/app\";\nimport { WebView } from \"react-native-webview\";\nvar styles = StyleSheet.create({\n  webBg: {\n    width: \"100%\",\n    backgroundColor: \"#FFF\",\n    flex: 1\n  },\n  loadingOverlayContainer: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nvar SignatureView = forwardRef(function (_ref, ref) {\n  var _ref$webStyle = _ref.webStyle,\n      webStyle = _ref$webStyle === void 0 ? \"\" : _ref$webStyle,\n      _ref$onOK = _ref.onOK,\n      onOK = _ref$onOK === void 0 ? function () {} : _ref$onOK,\n      _ref$onEmpty = _ref.onEmpty,\n      onEmpty = _ref$onEmpty === void 0 ? function () {} : _ref$onEmpty,\n      _ref$onClear = _ref.onClear,\n      onClear = _ref$onClear === void 0 ? function () {} : _ref$onClear,\n      _ref$onBegin = _ref.onBegin,\n      onBegin = _ref$onBegin === void 0 ? function () {} : _ref$onBegin,\n      _ref$onEnd = _ref.onEnd,\n      onEnd = _ref$onEnd === void 0 ? function () {} : _ref$onEnd,\n      _ref$descriptionText = _ref.descriptionText,\n      descriptionText = _ref$descriptionText === void 0 ? \"Sign above\" : _ref$descriptionText,\n      _ref$clearText = _ref.clearText,\n      clearText = _ref$clearText === void 0 ? \"Clear\" : _ref$clearText,\n      _ref$confirmText = _ref.confirmText,\n      confirmText = _ref$confirmText === void 0 ? \"Confirm\" : _ref$confirmText,\n      _ref$customHtml = _ref.customHtml,\n      customHtml = _ref$customHtml === void 0 ? null : _ref$customHtml,\n      _ref$autoClear = _ref.autoClear,\n      autoClear = _ref$autoClear === void 0 ? false : _ref$autoClear,\n      _ref$trimWhitespace = _ref.trimWhitespace,\n      trimWhitespace = _ref$trimWhitespace === void 0 ? false : _ref$trimWhitespace,\n      _ref$rotated = _ref.rotated,\n      rotated = _ref$rotated === void 0 ? false : _ref$rotated,\n      _ref$imageType = _ref.imageType,\n      imageType = _ref$imageType === void 0 ? \"\" : _ref$imageType,\n      _ref$dataURL = _ref.dataURL,\n      dataURL = _ref$dataURL === void 0 ? \"\" : _ref$dataURL,\n      _ref$penColor = _ref.penColor,\n      penColor = _ref$penColor === void 0 ? \"\" : _ref$penColor,\n      _ref$backgroundColor = _ref.backgroundColor,\n      backgroundColor = _ref$backgroundColor === void 0 ? \"\" : _ref$backgroundColor,\n      _ref$dotSize = _ref.dotSize,\n      dotSize = _ref$dotSize === void 0 ? 0 : _ref$dotSize,\n      _ref$minWidth = _ref.minWidth,\n      minWidth = _ref$minWidth === void 0 ? 0.5 : _ref$minWidth,\n      _ref$androidHardwareA = _ref.androidHardwareAccelerationDisabled,\n      androidHardwareAccelerationDisabled = _ref$androidHardwareA === void 0 ? false : _ref$androidHardwareA;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var webViewRef = useRef();\n  var source = useMemo(function () {\n    var injectedJavaScript = injectedSignaturePad + injectedApplication;\n    var htmlContentValue = customHtml ? customHtml : htmlContent;\n    injectedJavaScript = injectedJavaScript.replace(/<%autoClear%>/g, autoClear);\n    injectedJavaScript = injectedJavaScript.replace(/<%trimWhitespace%>/g, trimWhitespace);\n    injectedJavaScript = injectedJavaScript.replace(/<%imageType%>/g, imageType);\n    injectedJavaScript = injectedJavaScript.replace(/<%dataURL%>/g, dataURL);\n    injectedJavaScript = injectedJavaScript.replace(/<%penColor%>/g, penColor);\n    injectedJavaScript = injectedJavaScript.replace(/<%backgroundColor%>/g, backgroundColor);\n    injectedJavaScript = injectedJavaScript.replace(/<%dotSize%>/g, dotSize);\n    injectedJavaScript = injectedJavaScript.replace(/<%minWidth%>/g, minWidth);\n    var html = htmlContentValue(injectedJavaScript);\n    html = html.replace(/<%style%>/g, webStyle);\n    html = html.replace(/<%description%>/g, descriptionText);\n    html = html.replace(/<%confirm%>/g, confirmText);\n    html = html.replace(/<%clear%>/g, clearText);\n    html = html.replace(/<%orientation%>/g, rotated);\n    return {\n      html: html\n    };\n  }, [customHtml, autoClear, trimWhitespace, rotated, imageType, webStyle, descriptionText, confirmText, clearText, dataURL]);\n\n  var getSignature = function getSignature(e) {\n    switch (e.nativeEvent.data) {\n      case \"BEGIN\":\n        onBegin();\n        break;\n\n      case \"END\":\n        onEnd();\n        break;\n\n      case \"EMPTY\":\n        onEmpty();\n        break;\n\n      case \"CLEAR\":\n        onClear();\n        break;\n\n      default:\n        onOK(e.nativeEvent.data);\n    }\n  };\n\n  useImperativeHandle(ref, function () {\n    return {\n      readSignature: function readSignature() {\n        if (webViewRef.current) {\n          webViewRef.current.injectJavaScript(\"readSignature();true;\");\n        }\n      },\n      clearSignature: function clearSignature() {\n        if (webViewRef.current) {\n          webViewRef.current.injectJavaScript(\"clearSignature();true;\");\n        }\n      }\n    };\n  }, [webViewRef]);\n\n  var renderError = function renderError(e) {\n    var nativeEvent = e.nativeEvent;\n    console.warn(\"WebView error: \", nativeEvent);\n  };\n\n  return React.createElement(View, {\n    style: styles.webBg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, React.createElement(WebView, {\n    bounces: false,\n    androidHardwareAccelerationDisabled: androidHardwareAccelerationDisabled,\n    ref: webViewRef,\n    useWebKit: true,\n    source: source,\n    onMessage: getSignature,\n    javaScriptEnabled: true,\n    onError: renderError,\n    onLoadEnd: function onLoadEnd() {\n      return setLoading(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), loading && React.createElement(View, {\n    style: styles.loadingOverlayContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, React.createElement(ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })));\n});\nexport default SignatureView;","map":{"version":3,"names":["React","useState","useMemo","useRef","forwardRef","useImperativeHandle","htmlContent","injectedSignaturePad","injectedApplication","WebView","styles","StyleSheet","create","webBg","width","backgroundColor","flex","loadingOverlayContainer","position","top","bottom","left","right","alignItems","justifyContent","SignatureView","ref","webStyle","onOK","onEmpty","onClear","onBegin","onEnd","descriptionText","clearText","confirmText","customHtml","autoClear","trimWhitespace","rotated","imageType","dataURL","penColor","dotSize","minWidth","androidHardwareAccelerationDisabled","loading","setLoading","webViewRef","source","injectedJavaScript","htmlContentValue","replace","html","getSignature","e","nativeEvent","data","readSignature","current","injectJavaScript","clearSignature","renderError","console","warn"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/node_modules/react-native-signature-canvas/index.js"],"sourcesContent":["import React, { useState, useMemo, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport { View, StyleSheet, ActivityIndicator } from \"react-native\";\n\nimport htmlContent from \"./h5/html\";\nimport injectedSignaturePad from \"./h5/js/signature_pad\";\nimport injectedApplication from \"./h5/js/app\";\n\nimport { WebView } from \"react-native-webview\";\n\nconst styles = StyleSheet.create({\n  webBg: {\n    width: \"100%\",\n    backgroundColor: \"#FFF\",\n    flex: 1\n  },\n  loadingOverlayContainer: { position: \"absolute\", top: 0, bottom: 0, left: 0, right: 0, alignItems: \"center\", justifyContent: \"center\" },\n});\n\nconst SignatureView = forwardRef(({\n  webStyle = \"\",\n  onOK = () => { },\n  onEmpty = () => { },\n  onClear = () => { },\n  onBegin = () => { },\n  onEnd = () => { },\n  descriptionText = \"Sign above\",\n  clearText = \"Clear\",\n  confirmText = \"Confirm\",\n  customHtml = null,\n  autoClear = false,\n  trimWhitespace = false,\n  rotated = false,\n  imageType = \"\",\n  dataURL = \"\",\n  penColor = \"\",\n  backgroundColor = \"\",\n  dotSize = 0,\n  minWidth = 0.5,\n  androidHardwareAccelerationDisabled = false,\n}, ref) => {\n  const [loading, setLoading] = useState(true);\n  const webViewRef = useRef();\n  const source = useMemo(() => {\n    let injectedJavaScript = injectedSignaturePad + injectedApplication;\n    const htmlContentValue = customHtml ? customHtml : htmlContent;\n    injectedJavaScript = injectedJavaScript.replace(/<%autoClear%>/g, autoClear);\n    injectedJavaScript = injectedJavaScript.replace(/<%trimWhitespace%>/g, trimWhitespace);\n    injectedJavaScript = injectedJavaScript.replace(/<%imageType%>/g, imageType);\n    injectedJavaScript = injectedJavaScript.replace(/<%dataURL%>/g, dataURL);\n    injectedJavaScript = injectedJavaScript.replace(/<%penColor%>/g, penColor);\n    injectedJavaScript = injectedJavaScript.replace(/<%backgroundColor%>/g, backgroundColor);\n    injectedJavaScript = injectedJavaScript.replace(/<%dotSize%>/g, dotSize);\n    injectedJavaScript = injectedJavaScript.replace(/<%minWidth%>/g, minWidth);\n    \n    let html = htmlContentValue(injectedJavaScript);\n    html = html.replace(/<%style%>/g, webStyle);\n    html = html.replace(/<%description%>/g, descriptionText);\n    html = html.replace(/<%confirm%>/g, confirmText);\n    html = html.replace(/<%clear%>/g, clearText);\n    html = html.replace(/<%orientation%>/g, rotated);\n\n    return { html };\n  }, [customHtml, autoClear, trimWhitespace, rotated, imageType, webStyle, descriptionText, confirmText, clearText, dataURL])\n\n  const getSignature = e => {\n    switch (e.nativeEvent.data) {\n      case \"BEGIN\":\n        onBegin();\n        break;\n      case \"END\":\n        onEnd();\n        break;\n      case \"EMPTY\":\n        onEmpty();\n        break;\n      case \"CLEAR\":\n        onClear();\n        break;\n      default:\n        onOK(e.nativeEvent.data);\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    readSignature: () => {\n      if (webViewRef.current) {\n        webViewRef.current.injectJavaScript(\"readSignature();true;\");\n      }\n    },\n    clearSignature: () => {\n      if (webViewRef.current) {\n        webViewRef.current.injectJavaScript(\"clearSignature();true;\");\n      }\n    }\n  }), [webViewRef]);\n\n  const renderError = e => {\n    const { nativeEvent } = e;\n    console.warn(\"WebView error: \", nativeEvent);\n  };\n\n  return (\n    <View style={styles.webBg}>\n      <WebView\n        bounces={false}\n        androidHardwareAccelerationDisabled={androidHardwareAccelerationDisabled}\n        ref={webViewRef}\n        useWebKit={true}\n        source={source}\n        onMessage={getSignature}\n        javaScriptEnabled={true}\n        onError={renderError}\n        onLoadEnd={() => setLoading(false)}\n      />\n      {loading && <View style={styles.loadingOverlayContainer}>\n        <ActivityIndicator />\n      </View>}\n    </View>\n  );\n})\n\nexport default SignatureView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}