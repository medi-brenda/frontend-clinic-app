{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\src\\\\pages\\\\selectDiagnosis\\\\index.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from '@react-navigation/native';\nimport { observer } from 'mobx-react';\nimport { Body, Card, CardItem, Container, Text, View } from 'native-base';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport ListRow from \"../../components/listRow\";\nimport SearchInput from \"../../components/searchInput\";\nimport { getDiagnosis } from \"../../actions/config\";\nimport TitleBar from \"../../components/titleBar\";\nimport { useStores } from \"../../stores\";\nimport ErrorPage from \"../error\";\nimport Loading from \"../loading\";\nimport { translate } from \"../../utils/string\";\nimport MCCButton from \"../../components/mccButton\";\nimport { goSelectExtraMed } from \"../../actions/app\";\nimport * as _ from 'lodash';\nimport PhoneCall from \"../../components/phoneCall\";\nimport { initFavoriteDiagnosis, toggleFavoriteDiagnosis } from \"../../actions/app\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport Modal from \"./modal\";\nimport { findInsurer } from \"../../utils/common\";\nvar SelectDiagnosisPage = observer(function () {\n  var stores = useStores();\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n,\n      t = _useTranslation.t;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      favoriteDiagnosis = _useState8[0],\n      setFavoriteDiagnosis = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      refreshed = _useState10[0],\n      setRefreshed = _useState10[1];\n\n  var _stores$configStore = stores.configStore,\n      diagnosis = _stores$configStore.diagnosis,\n      insurers = _stores$configStore.insurers;\n  var pendingItem = stores.dataStore.pendingItem;\n\n  var _useState11 = useState(stores.configStore.diagnosis),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentDiagnosis = _useState12[0],\n      setCurrentDiagnosis = _useState12[1];\n\n  var isIcd10 = function isIcd10() {\n    var insurer = findInsurer(insurers, pendingItem.insurerId);\n    return _.get(insurer, 'icd', 9) === 10;\n  };\n\n  var usePrevious = function usePrevious(value) {\n    var ref = useRef();\n    useEffect(function () {\n      ref.current = value;\n    });\n    return ref.current;\n  };\n\n  var prevAmount = usePrevious(diagnosis);\n  var prevFavoriteDiagnosis = usePrevious(favoriteDiagnosis);\n  var newFavoriteDiagnosis = stores.appStore.newFavoriteDiagnosis;\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isToggleFavoriteLoading = _useState14[0],\n      setIsToggleFavoriteLoading = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      modalVisible = _useState16[0],\n      setModalVisible = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      modalText = _useState18[0],\n      setModalText = _useState18[1];\n\n  useEffect(function () {\n    onSearch();\n  }, []);\n  useEffect(function () {\n    if (diagnosis && prevAmount !== diagnosis || newFavoriteDiagnosis && prevFavoriteDiagnosis !== newFavoriteDiagnosis) {\n      init();\n    }\n  }, [diagnosis, newFavoriteDiagnosis]);\n\n  var init = function init() {\n    var errorMsgFavoriteDiagnosis, intArray, temp, result;\n    return _regeneratorRuntime.async(function init$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(initFavoriteDiagnosis({\n              stores: stores,\n              navigation: navigation,\n              i18n: i18n,\n              platform: Platform.OS\n            }));\n\n          case 3:\n            errorMsgFavoriteDiagnosis = _context.sent;\n\n            if (errorMsgFavoriteDiagnosis) {\n              setError(errorMsgFavoriteDiagnosis);\n            }\n\n            intArray = [];\n            temp = [];\n            result = [];\n\n            if (newFavoriteDiagnosis !== null) {\n              if (!newFavoriteDiagnosis.includes(',')) {\n                intArray.push(parseInt(newFavoriteDiagnosis));\n              } else {\n                intArray = newFavoriteDiagnosis.split(',').map(function (item) {\n                  return parseInt(item, 10);\n                });\n              }\n\n              temp = _.cloneDeep(diagnosis);\n              temp.forEach(function (element) {\n                if (intArray.includes(element.id)) {\n                  element['isFavorite'] = true;\n                } else {\n                  element['isFavorite'] = false;\n                }\n              });\n              result = sortFavorite(temp);\n            } else {\n              temp = _.cloneDeep(diagnosis);\n              temp.forEach(function (element) {\n                element['isFavorite'] = false;\n              });\n              result = temp;\n            }\n\n            setFavoriteDiagnosis(intArray);\n            setCurrentDiagnosis(result);\n            setLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSearch = function onSearch(value) {\n    var errMsg;\n    return _regeneratorRuntime.async(function onSearch$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!loading) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            setLoading(true);\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(getDiagnosis({\n              stores: stores,\n              search: value || '',\n              i18n: i18n\n            }));\n\n          case 5:\n            errMsg = _context2.sent;\n\n            if (errMsg) {\n              setError(errMsg);\n            }\n\n            return _context2.abrupt(\"return\", setLoading(false));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSubmitSearch = function onSubmitSearch(value) {\n    onSearch(value);\n  };\n\n  var onRemoveSelectedDiagnosis = function onRemoveSelectedDiagnosis(item) {\n    setSelected(selected.filter(function (d) {\n      return d !== item;\n    }));\n  };\n\n  var onAddSelectedDiagnosis = function onAddSelectedDiagnosis(item) {\n    if (selected.length > 1) {\n      return Alert.alert(t('Common.Error'), t('Modify.WarnAtMostTwoDiagnosis'));\n    }\n\n    selected.push(item);\n    setSelected(selected);\n    setRefreshed(!refreshed);\n  };\n\n  var onNextStep = function onNextStep() {\n    var errorMsg = goSelectExtraMed({\n      stores: stores,\n      navigation: navigation,\n      diagnosis: selected\n    });\n\n    if (errorMsg) {\n      Alert.alert(t('Common.Error'), t(errorMsg));\n    }\n  };\n\n  var toggleFavoriteItems = function toggleFavoriteItems(item) {\n    var temp, index, resp, tempCurrentDiagnosis, tempResult, tempSelectedCurrentDiagnosis, tempSelectedResult, result, _resp, _tempCurrentDiagnosis, _tempResult, _tempSelectedCurrentDiagnosis, _tempSelectedResult, _result;\n\n    return _regeneratorRuntime.async(function toggleFavoriteItems$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            temp = _.cloneDeep(favoriteDiagnosis);\n\n            if (!favoriteDiagnosis.includes(item.id)) {\n              _context3.next = 22;\n              break;\n            }\n\n            index = temp.indexOf(item.id);\n            temp.splice(index, 1);\n            setIsToggleFavoriteLoading(true);\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(toggleFavoriteDiagnosis({\n              stores: stores,\n              navigation: navigation,\n              i18n: i18n,\n              platform: Platform.OS,\n              diagnosisId: item.id.toString(),\n              type: '0'\n            }).catch(function (error) {\n              Alert.alert(t('Common.Error'), t(error));\n            }));\n\n          case 7:\n            resp = _context3.sent;\n            setIsToggleFavoriteLoading(false);\n            tempCurrentDiagnosis = _.cloneDeep(currentDiagnosis);\n            tempResult = [];\n            tempCurrentDiagnosis.forEach(function (e) {\n              if (e.id === item.id) {\n                e.isFavorite = false;\n                tempResult.push(e);\n              } else {\n                tempResult.push(e);\n              }\n            });\n            tempSelectedCurrentDiagnosis = _.cloneDeep(selected);\n            tempSelectedResult = [];\n            tempSelectedCurrentDiagnosis.forEach(function (e) {\n              if (e.id === item.id) {\n                e.isFavorite = false;\n                tempSelectedResult.push(e);\n              } else {\n                tempSelectedResult.push(e);\n              }\n            });\n            result = sortFavorite(tempResult);\n            setCurrentDiagnosis(result);\n            setSelected(tempSelectedResult);\n            setModalVisible(true);\n            setModalText(t('Diagnosis.removeFavoriteSuccess'));\n            _context3.next = 39;\n            break;\n\n          case 22:\n            temp.push(item.id);\n            setIsToggleFavoriteLoading(true);\n            _context3.next = 26;\n            return _regeneratorRuntime.awrap(toggleFavoriteDiagnosis({\n              stores: stores,\n              navigation: navigation,\n              i18n: i18n,\n              platform: Platform.OS,\n              diagnosisId: item.id.toString(),\n              type: '1'\n            }).catch(function (error) {\n              Alert.alert(t('Common.Error'), t(error));\n            }));\n\n          case 26:\n            _resp = _context3.sent;\n            setIsToggleFavoriteLoading(false);\n            _tempCurrentDiagnosis = _.cloneDeep(currentDiagnosis);\n            _tempResult = [];\n\n            _tempCurrentDiagnosis.forEach(function (e) {\n              if (e.id === item.id) {\n                e.isFavorite = true;\n\n                _tempResult.push(e);\n              } else {\n                _tempResult.push(e);\n              }\n            });\n\n            _tempSelectedCurrentDiagnosis = _.cloneDeep(selected);\n            _tempSelectedResult = [];\n\n            _tempSelectedCurrentDiagnosis.forEach(function (e) {\n              if (e.id === item.id) {\n                e.isFavorite = true;\n\n                _tempSelectedResult.push(e);\n              } else {\n                _tempSelectedResult.push(e);\n              }\n            });\n\n            _result = sortFavorite(_tempResult);\n            setCurrentDiagnosis(_result);\n            setSelected(_tempSelectedResult);\n            setModalVisible(true);\n            setModalText(t('Diagnosis.addFavoriteSuccess'));\n\n          case 39:\n            setFavoriteDiagnosis(temp);\n\n          case 40:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var sortFavorite = function sortFavorite(diagnosisList) {\n    return diagnosisList.sort(function (a, b) {\n      if (a.isFavorite && !b.isFavorite) {\n        return -1;\n      } else if (!a.isFavorite && b.isFavorite) {\n        return 1;\n      }\n\n      return 0;\n    });\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, React.createElement(TitleBar, {\n    title: t(\"Diagnosis.Step1Title\"),\n    onBack: function onBack() {\n      navigation.goBack();\n    },\n    children: React.createElement(SearchInput, {\n      disabled: loading,\n      placeholder: t('Modify.ST30'),\n      onSubmit: onSubmitSearch,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }), error ? React.createElement(ErrorPage, {\n    title: error,\n    onRetry: onSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }\n  }) : loading ? React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 31\n    }\n  }) : React.createElement(React.Fragment, null, React.createElement(Spinner, {\n    visible: isToggleFavoriteLoading,\n    textContent: t('Common.Loading'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 29\n    }\n  }), isIcd10() && React.createElement(View, {\n    style: styleSheet.favouriteReminderWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 46\n    }\n  }, React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 37\n    }\n  }, React.createElement(CardItem, {\n    style: styleSheet.favouriteReminderCallout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 37\n    }\n  }, React.createElement(Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 45\n    }\n  }, t('Diagnosis.favouriteReminder')))))), React.createElement(Modal, {\n    show: modalVisible,\n    title: modalText,\n    onDismiss: function onDismiss() {\n      setModalVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    style: styleSheet.selectedHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: styleSheet.selectedHeaderImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 33\n    }\n  }, React.createElement(Image, {\n    style: styleSheet.favoriteIcon,\n    source: require(\"../..//assets/images/star-activated.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 37\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 37\n    }\n  }, t('Diagnosis.favorite'))), selected.length ? React.createElement(View, {\n    style: styleSheet.selectedHeaderTextContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styleSheet.selectedHeaderText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 45\n    }\n  }, t('Modify.ST2'))) : React.createElement(View, {\n    style: styleSheet.selectedHeaderTextContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 38\n    }\n  }), React.createElement(View, {\n    style: styleSheet.selectedHeaderChooseDiagnosis,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 37\n    }\n  }, t('Diagnosis.selectDiagnosis')))), selected.length ? React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 37\n    }\n  }, React.createElement(FlatList, {\n    style: styleSheet.selected,\n    scrollEnabled: false,\n    data: selected,\n    keyExtractor: function keyExtractor(item, index) {\n      return \"selected-dialognosis-\" + item.code;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListRow, {\n        item: item,\n        onPress: onRemoveSelectedDiagnosis,\n        formatText: function formatText(item) {\n          return item.code + \" - \" + translate(item, i18n);\n        },\n        leftIcon: item.isFavorite ? 'activated' : 'unactivated',\n        rightIcon: \"md-checkmark\",\n        rightStyle: {\n          color: '#fc8651'\n        },\n        addFavorite: function addFavorite() {\n          return toggleFavoriteItems(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 49\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 41\n    }\n  })) : null, React.createElement(FlatList, {\n    data: currentDiagnosis.filter(function (d) {\n      return !selected.find(function (s) {\n        return s.code === d.code;\n      });\n    }),\n    keyExtractor: function keyExtractor(item, index) {\n      return \"diagnosis-\" + index;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ListRow, {\n        item: item,\n        onPress: onAddSelectedDiagnosis,\n        formatText: function formatText(item) {\n          return item.code + \" - \" + translate(item, i18n);\n        },\n        rightIcon: \"add\",\n        leftIcon: item.isFavorite ? 'activated' : 'unactivated',\n        addFavorite: function addFavorite() {\n          return toggleFavoriteItems(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 37\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    style: styleSheet.action,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 29\n    }\n  }, React.createElement(MCCButton, {\n    onPress: onNextStep,\n    text: t('Modify.ST3'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 33\n    }\n  }))), React.createElement(PhoneCall, {\n    style: styleSheet.hotline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  }));\n});\nvar styleSheet = StyleSheet.create({\n  action: {\n    paddingVertical: 5\n  },\n  selected: {\n    borderColor: '#ff8566',\n    borderTopWidth: 3,\n    borderBottomWidth: 3\n  },\n  selectedHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    borderColor: \"rgba(0,0,0,0.25)\",\n    borderBottomWidth: 1\n  },\n  hotline: {\n    bottom: 80\n  },\n  favoriteIcon: {\n    width: 30,\n    height: 30\n  },\n  selectedHeaderImage: {\n    flex: 6,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  selectedHeaderTextContainer: {\n    marginTop: 5,\n    flex: 6\n  },\n  selectedHeaderChooseDiagnosis: {\n    flex: 4,\n    marginLeft: 5\n  },\n  selectedHeaderText: {\n    width: '60%'\n  },\n  favouriteReminderWrapper: {\n    paddingHorizontal: 5,\n    paddingVertical: 5\n  },\n  favouriteReminderCallout: {\n    borderLeftColor: \"#e91e63\",\n    borderLeftWidth: 10\n  }\n});\nexport default SelectDiagnosisPage;","map":{"version":3,"names":["useNavigation","observer","Body","Card","CardItem","Container","Text","View","React","useEffect","useRef","useState","useTranslation","FlatList","ListRow","SearchInput","getDiagnosis","TitleBar","useStores","ErrorPage","Loading","translate","MCCButton","goSelectExtraMed","_","PhoneCall","initFavoriteDiagnosis","toggleFavoriteDiagnosis","Spinner","Modal","findInsurer","SelectDiagnosisPage","stores","i18n","t","navigation","error","setError","loading","setLoading","selected","setSelected","favoriteDiagnosis","setFavoriteDiagnosis","refreshed","setRefreshed","configStore","diagnosis","insurers","pendingItem","dataStore","currentDiagnosis","setCurrentDiagnosis","isIcd10","insurer","insurerId","get","usePrevious","value","ref","current","prevAmount","prevFavoriteDiagnosis","newFavoriteDiagnosis","appStore","isToggleFavoriteLoading","setIsToggleFavoriteLoading","modalVisible","setModalVisible","modalText","setModalText","onSearch","init","platform","Platform","OS","errorMsgFavoriteDiagnosis","intArray","temp","result","includes","push","parseInt","split","map","item","cloneDeep","forEach","element","id","sortFavorite","search","errMsg","onSubmitSearch","onRemoveSelectedDiagnosis","filter","d","onAddSelectedDiagnosis","length","Alert","alert","onNextStep","errorMsg","toggleFavoriteItems","index","indexOf","splice","diagnosisId","toString","type","catch","resp","tempCurrentDiagnosis","tempResult","e","isFavorite","tempSelectedCurrentDiagnosis","tempSelectedResult","diagnosisList","sort","a","b","goBack","styleSheet","favouriteReminderWrapper","favouriteReminderCallout","selectedHeader","selectedHeaderImage","favoriteIcon","require","selectedHeaderTextContainer","selectedHeaderText","selectedHeaderChooseDiagnosis","code","color","find","s","action","hotline","StyleSheet","create","paddingVertical","borderColor","borderTopWidth","borderBottomWidth","flexDirection","alignItems","paddingHorizontal","bottom","width","height","flex","marginTop","marginLeft","borderLeftColor","borderLeftWidth"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/selectDiagnosis/index.tsx"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport { observer } from 'mobx-react';\r\nimport { Body, Card, CardItem, Container, Text, View } from 'native-base';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Alert, StyleSheet, Image, Platform } from 'react-native';\r\nimport { FlatList } from 'react-native-gesture-handler';\r\nimport ListRow from '../../components/listRow';\r\nimport SearchInput from '../../components/searchInput';\r\nimport { getDiagnosis } from '../../actions/config';\r\nimport TitleBar from '../../components/titleBar';\r\nimport { Option } from '../../models/option';\r\nimport { useStores } from '../../stores';\r\nimport ErrorPage from '../error';\r\nimport Loading from '../loading';\r\nimport { translate } from '../../utils/string';\r\nimport MCCButton from '../../components/mccButton';\r\nimport { goSelectExtraMed, initAboutUs } from '../../actions/app';\r\nimport { Diagnosis } from '../../models/diagnosis';\r\nimport * as _ from 'lodash';\r\nimport PhoneCall from \"../../components/phoneCall\";\r\nimport { initFavoriteDiagnosis, toggleFavoriteDiagnosis } from '../../actions/app';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport Modal from './modal';\r\nimport { findInsurer } from '../../utils/common';\r\nimport { countBy } from 'lodash';\r\n\r\nconst SelectDiagnosisPage = observer(() => {\r\n    const stores = useStores();\r\n    const { i18n, t } = useTranslation();\r\n    const navigation = useNavigation();\r\n\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState<Diagnosis[]>([]);\r\n    const [favoriteDiagnosis, setFavoriteDiagnosis] = useState<any[]>([]);\r\n    const [refreshed, setRefreshed] = useState(false);\r\n    const { diagnosis, insurers } = stores.configStore;\r\n    const { pendingItem } = stores.dataStore;\r\n    const [currentDiagnosis, setCurrentDiagnosis] = useState(stores.configStore.diagnosis);\r\n\r\n    const isIcd10 = () => {\r\n        const insurer = findInsurer(insurers, pendingItem.insurerId);\r\n        return _.get(insurer, 'icd', 9) === 10;\r\n    }\r\n\r\n\r\n    const usePrevious = (value: any) => {\r\n        const ref = useRef();\r\n        useEffect(() => {\r\n          ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    const prevAmount = usePrevious(diagnosis);\r\n    const prevFavoriteDiagnosis = usePrevious(favoriteDiagnosis);\r\n    \r\n    const {newFavoriteDiagnosis} = stores.appStore;\r\n\r\n    const [isToggleFavoriteLoading, setIsToggleFavoriteLoading] = useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [modalText, setModalText] = useState('');\r\n\r\n    useEffect(() => {\r\n        onSearch();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(\r\n            (diagnosis && prevAmount !== diagnosis) || \r\n            (newFavoriteDiagnosis && prevFavoriteDiagnosis !== newFavoriteDiagnosis)\r\n        ) {\r\n            init();\r\n        }\r\n    }, [diagnosis, newFavoriteDiagnosis]);\r\n\r\n    const init = async () => {\r\n        setLoading(true);\r\n        const errorMsgFavoriteDiagnosis = await initFavoriteDiagnosis({ stores, navigation, i18n, platform: Platform.OS });\r\n\r\n        if (errorMsgFavoriteDiagnosis) {\r\n            setError(errorMsgFavoriteDiagnosis);\r\n        }\r\n\r\n        let intArray:any = [];\r\n        let temp:any = [];\r\n        let result:any = [];\r\n        if(newFavoriteDiagnosis !== null){\r\n            if(!newFavoriteDiagnosis.includes(',')){\r\n                intArray.push(parseInt(newFavoriteDiagnosis))\r\n            }\r\n            else{\r\n                intArray = newFavoriteDiagnosis.split(',')\r\n                    .map((item) => parseInt(item, 10));\r\n            }\r\n            \r\n            temp = _.cloneDeep(diagnosis);\r\n            temp.forEach((element:Diagnosis) => {\r\n                if(intArray.includes(element.id)){\r\n                    element['isFavorite'] = true;\r\n                }\r\n                else{\r\n                    element['isFavorite'] = false;\r\n                }\r\n            });\r\n            result = sortFavorite(temp);\r\n        }\r\n        else{\r\n            temp = _.cloneDeep(diagnosis);\r\n            temp.forEach((element:Diagnosis) => {\r\n                element['isFavorite'] = false;\r\n            });\r\n            result = temp;\r\n        }\r\n        setFavoriteDiagnosis(intArray);\r\n        setCurrentDiagnosis(result);\r\n        setLoading(false);\r\n    }\r\n\r\n    const onSearch = async (value?: string) => {\r\n        if (loading) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const errMsg = await getDiagnosis({\r\n            stores,\r\n            search: value || '',\r\n            i18n\r\n        });\r\n \r\n        if (errMsg) {\r\n            setError(errMsg);\r\n        }\r\n\r\n        return setLoading(false);\r\n    }\r\n\r\n    const onSubmitSearch = (value: string) => {\r\n        onSearch(value);\r\n    }\r\n\r\n    const onRemoveSelectedDiagnosis = (item: Diagnosis) => {\r\n        setSelected(selected.filter(d => d !== item));\r\n    }\r\n\r\n    const onAddSelectedDiagnosis = (item: Diagnosis) => {\r\n        if (selected.length > 1) {\r\n            return Alert.alert(\r\n                t('Common.Error'),\r\n                t('Modify.WarnAtMostTwoDiagnosis')\r\n            )\r\n        }\r\n        selected.push(item);\r\n        setSelected(selected);\r\n        setRefreshed(!refreshed);\r\n    }\r\n\r\n\r\n\r\n    const onNextStep = () => {\r\n        const errorMsg = goSelectExtraMed({\r\n            stores,\r\n            navigation,\r\n            diagnosis: selected\r\n        });\r\n\r\n        if (errorMsg) {\r\n            Alert.alert(\r\n                t('Common.Error'),\r\n                t(errorMsg)\r\n            );\r\n        }\r\n    }\r\n\r\n    const toggleFavoriteItems = async (item: any) => {\r\n        const temp = _.cloneDeep(favoriteDiagnosis);\r\n        if(favoriteDiagnosis.includes(item.id)){\r\n            const index = temp.indexOf(item.id); \r\n            temp.splice(index, 1);\r\n            setIsToggleFavoriteLoading(true);\r\n            const resp = await toggleFavoriteDiagnosis({ stores, navigation, i18n, platform: Platform.OS, diagnosisId: item.id.toString(), type: '0' }).catch(error => {\r\n                Alert.alert(\r\n                    t('Common.Error'),\r\n                    t(error)\r\n                );\r\n            })\r\n            setIsToggleFavoriteLoading(false);\r\n\r\n            const tempCurrentDiagnosis = _.cloneDeep(currentDiagnosis);\r\n            const tempResult:any = [];\r\n            tempCurrentDiagnosis.forEach(e => {\r\n                if(e.id === item.id){\r\n                    e.isFavorite = false;\r\n                    tempResult.push(e);\r\n                }\r\n                else{\r\n                    tempResult.push(e);\r\n                }\r\n            })\r\n            const tempSelectedCurrentDiagnosis = _.cloneDeep(selected);\r\n            const tempSelectedResult:any = [];\r\n            tempSelectedCurrentDiagnosis.forEach(e => {\r\n                if(e.id === item.id){\r\n                    e.isFavorite = false;\r\n                    tempSelectedResult.push(e);\r\n                }\r\n                else{\r\n                    tempSelectedResult.push(e);\r\n                }\r\n            });\r\n            const result = sortFavorite(tempResult);\r\n            setCurrentDiagnosis(result);\r\n            setSelected(tempSelectedResult);\r\n            setModalVisible(true);\r\n            setModalText(t('Diagnosis.removeFavoriteSuccess'));\r\n        }\r\n        else{\r\n            temp.push(item.id);\r\n            setIsToggleFavoriteLoading(true);\r\n            const resp = await toggleFavoriteDiagnosis({ stores, navigation, i18n, platform: Platform.OS, diagnosisId: item.id.toString(), type: '1' }).catch(error => {\r\n                Alert.alert(\r\n                    t('Common.Error'),\r\n                    t(error)\r\n                );\r\n            });\r\n            setIsToggleFavoriteLoading(false);\r\n\r\n            const tempCurrentDiagnosis = _.cloneDeep(currentDiagnosis);\r\n            const tempResult:any = [];\r\n            tempCurrentDiagnosis.forEach(e => {\r\n                if(e.id === item.id){\r\n                    e.isFavorite = true;\r\n                    tempResult.push(e);\r\n                }\r\n                else{\r\n                    tempResult.push(e);\r\n                }\r\n            });\r\n            const tempSelectedCurrentDiagnosis = _.cloneDeep(selected);\r\n            const tempSelectedResult:any = [];\r\n            tempSelectedCurrentDiagnosis.forEach(e => {\r\n                if(e.id === item.id){\r\n                    e.isFavorite = true;\r\n                    tempSelectedResult.push(e);\r\n                }\r\n                else{\r\n                    tempSelectedResult.push(e);\r\n                }\r\n            });\r\n            const result = sortFavorite(tempResult);\r\n            setCurrentDiagnosis(result);\r\n            setSelected(tempSelectedResult);\r\n            setModalVisible(true);\r\n            setModalText(t('Diagnosis.addFavoriteSuccess'));\r\n        }\r\n        \r\n        setFavoriteDiagnosis(temp);\r\n    }\r\n\r\n    const sortFavorite = (diagnosisList: Diagnosis[]) => {\r\n        return diagnosisList.sort((a: Diagnosis, b: Diagnosis) => {\r\n            if (a.isFavorite && !b.isFavorite) {\r\n                return -1;\r\n            }\r\n            else if (!a.isFavorite && b.isFavorite) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            <TitleBar\r\n                title={t(`Diagnosis.Step1Title`)}\r\n                onBack={() => {\r\n                    navigation.goBack();\r\n                }}\r\n                children={\r\n                    <SearchInput\r\n                        disabled={loading}\r\n                        placeholder={t('Modify.ST30')}\r\n                        onSubmit={onSubmitSearch}\r\n                    />\r\n                }\r\n            />\r\n            {\r\n                error ?\r\n                    <ErrorPage title={error} onRetry={onSearch} /> :\r\n                    loading ? <Loading /> :\r\n                        <>\r\n                            <Spinner\r\n                                visible={isToggleFavoriteLoading}\r\n                                textContent={t('Common.Loading')}\r\n                            />\r\n\r\n                            {\r\n                                isIcd10() && <View  style={styleSheet.favouriteReminderWrapper}>\r\n                                    <Card>\r\n                                    <CardItem style={styleSheet.favouriteReminderCallout}>\r\n                                        <Body>\r\n                                            <Text>\r\n                                                {t('Diagnosis.favouriteReminder')}\r\n                                            </Text>\r\n                                        </Body>\r\n                                    </CardItem>\r\n                                </Card>\r\n                                </View>\r\n                            }\r\n\r\n                            <Modal show={modalVisible} title={modalText} onDismiss={() => { setModalVisible(false); }} />\r\n                            <View style={styleSheet.selectedHeader}>\r\n                                <View style={styleSheet.selectedHeaderImage}>\r\n                                    <Image style={styleSheet.favoriteIcon} source={require('../..//assets/images/star-activated.png')}/>\r\n                                    <Text>{t('Diagnosis.favorite')}</Text>\r\n                                </View>\r\n                                \r\n                                {\r\n                                    selected.length ?\r\n                                        <View style={styleSheet.selectedHeaderTextContainer}>\r\n                                            <Text style={styleSheet.selectedHeaderText}>{t('Modify.ST2')}</Text>\r\n                                        </View>\r\n                                    :<View style={styleSheet.selectedHeaderTextContainer}></View>\r\n                                }\r\n\r\n\r\n                                <View style={styleSheet.selectedHeaderChooseDiagnosis}>\r\n                                    <Text>{t('Diagnosis.selectDiagnosis')}</Text>\r\n                                </View>\r\n                                \r\n                            </View>\r\n                            {\r\n                                selected.length ? (\r\n                                    <View>\r\n                                        <FlatList\r\n                                            style={styleSheet.selected}\r\n                                            scrollEnabled={false}\r\n                                            data={selected}\r\n                                            keyExtractor={(item, index) => `selected-dialognosis-${item.code}`}\r\n                                            renderItem={({ item }) => (\r\n                                                <ListRow\r\n                                                    item={item}\r\n                                                    onPress={onRemoveSelectedDiagnosis}\r\n                                                    formatText={(item) => `${item.code} - ${translate(item, i18n)}`}\r\n                                                    leftIcon={item.isFavorite?'activated':'unactivated'}\r\n                                                    rightIcon='md-checkmark'\r\n                                                    rightStyle={{ color: '#fc8651' }}\r\n                                                    addFavorite={()=>toggleFavoriteItems(item)}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </View>\r\n                                ) : null\r\n                            }\r\n                            <FlatList\r\n                                data={currentDiagnosis.filter(d => !selected.find(s => s.code === d.code))}\r\n                                keyExtractor={(item, index) => `diagnosis-${index}`}\r\n                                renderItem={({ item }:any) => {                                    \r\n                                    return (\r\n                                    <ListRow\r\n                                        item={item}\r\n                                        onPress={onAddSelectedDiagnosis}\r\n                                        formatText={(item) => `${item.code} - ${translate(item, i18n)}`}\r\n                                        rightIcon='add'\r\n                                        leftIcon={item.isFavorite?'activated':'unactivated'}\r\n                                        addFavorite={()=>toggleFavoriteItems(item)}\r\n                                    />\r\n                                )}}\r\n                            />\r\n                            <View style={styleSheet.action}>\r\n                                <MCCButton\r\n                                    onPress={onNextStep}\r\n                                    text={t('Modify.ST3')}\r\n                                />\r\n                            </View>\r\n                        </>\r\n            }\r\n\r\n        <PhoneCall style={styleSheet.hotline}/>\r\n        </Container>\r\n    )\r\n});\r\n\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    action: {\r\n        paddingVertical: 5\r\n    },\r\n    selected: {\r\n        borderColor: '#ff8566',\r\n        borderTopWidth: 3,\r\n        borderBottomWidth: 3,\r\n    },\r\n    selectedHeader: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 10,\r\n        borderColor: \"rgba(0,0,0,0.25)\",\r\n        borderBottomWidth: 1,\r\n    },\r\n    hotline:{\r\n        bottom: 80\r\n    },\r\n    favoriteIcon: {\r\n        width: 30,\r\n        height: 30,\r\n    },\r\n    selectedHeaderImage: {\r\n        flex: 6,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    selectedHeaderTextContainer: {\r\n        marginTop: 5,\r\n        flex: 6,\r\n    },\r\n    selectedHeaderChooseDiagnosis: {\r\n        flex: 4,\r\n        marginLeft: 5,\r\n    },\r\n    selectedHeaderText: {\r\n        width: '60%'\r\n    },\r\n    favouriteReminderWrapper: {\r\n        paddingHorizontal:5,\r\n        paddingVertical:5\r\n    },\r\n    favouriteReminderCallout: {\r\n        borderLeftColor: \"#e91e63\",\r\n        borderLeftWidth: 10,\r\n    }\r\n});\r\n\r\nexport default SelectDiagnosisPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}