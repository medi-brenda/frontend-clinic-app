{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { request } from \"../utils/request\";\n\nvar getUrl = function getUrl(verifyType) {\n  switch (verifyType) {\n    case 2:\n      return 'refund_via_card';\n\n    default:\n      return 'refund_QRCode';\n  }\n};\n\nexport var refund = function refund(_ref) {\n  var clinicId, verifyType, voucher, password, i18n, token, resp;\n  return _regeneratorRuntime.async(function refund$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          clinicId = _ref.clinicId, verifyType = _ref.verifyType, voucher = _ref.voucher, password = _ref.password, i18n = _ref.i18n, token = _ref.token;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(request({\n            url: getUrl(verifyType),\n            data: {\n              clinic_id: Number(clinicId),\n              voucher: voucher,\n              op_password: password\n            },\n            token: token,\n            i18n: i18n\n          }));\n\n        case 3:\n          resp = _context.sent;\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"names":["request","getUrl","verifyType","refund","clinicId","voucher","password","i18n","token","url","data","clinic_id","Number","op_password","resp"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/services/refund.ts"],"sourcesContent":["import { i18n } from \"i18next\";\r\nimport { request } from \"../utils/request\";\r\n\r\ntype Refund = {\r\n    clinicId: string,\r\n    verifyType: number,\r\n    voucher: string;\r\n    password: string,\r\n    i18n: i18n,\r\n    token: string\r\n}\r\n\r\nconst getUrl = (verifyType: number) => {\r\n    switch (verifyType) {\r\n        case 2:\r\n            return 'refund_via_card';\r\n        default:\r\n            return 'refund_QRCode';\r\n    }\r\n}\r\n\r\nexport const refund = async ({ clinicId, verifyType, voucher, password, i18n, token }: Refund) => {\r\n    const resp = await request({\r\n        url: getUrl(verifyType),\r\n        data: {\r\n            clinic_id: Number(clinicId),\r\n            voucher,\r\n            op_password: password\r\n        },\r\n        token,\r\n        i18n\r\n    });\r\n}"],"mappings":";AACA,SAASA,OAAT;;AAWA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,UAAD,EAAwB;EACnC,QAAQA,UAAR;IACI,KAAK,CAAL;MACI,OAAO,iBAAP;;IACJ;MACI,OAAO,eAAP;EAJR;AAMH,CAPD;;AASA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS;EAAA;EAAA;IAAA;MAAA;QAAA;UAASC,QAAT,QAASA,QAAT,EAAmBF,UAAnB,QAAmBA,UAAnB,EAA+BG,OAA/B,QAA+BA,OAA/B,EAAwCC,QAAxC,QAAwCA,QAAxC,EAAkDC,IAAlD,QAAkDA,IAAlD,EAAwDC,KAAxD,QAAwDA,KAAxD;UAAA;UAAA,iCACCR,OAAO,CAAC;YACvBS,GAAG,EAAER,MAAM,CAACC,UAAD,CADY;YAEvBQ,IAAI,EAAE;cACFC,SAAS,EAAEC,MAAM,CAACR,QAAD,CADf;cAEFC,OAAO,EAAPA,OAFE;cAGFQ,WAAW,EAAEP;YAHX,CAFiB;YAOvBE,KAAK,EAALA,KAPuB;YAQvBD,IAAI,EAAJA;UARuB,CAAD,CADR;;QAAA;UACZO,IADY;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAf"},"metadata":{},"sourceType":"module"}