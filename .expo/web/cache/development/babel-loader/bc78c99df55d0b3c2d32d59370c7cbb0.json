{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\src\\\\components\\\\datePicker\\\\index.tsx\";\n\nimport { View, Text } from 'native-base';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TouchableOpacity, TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport moment from 'moment';\n\nvar DatePicker = function DatePicker(_ref) {\n  var hour = _ref.hour,\n      minute = _ref.minute,\n      onChange = _ref.onChange,\n      onDismiss = _ref.onDismiss;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var defaultValue = moment().utcOffset(0);\n  defaultValue.set({\n    hour: hour,\n    minute: minute\n  });\n\n  var _useState = useState(defaultValue.toDate()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var handleChange = function handleChange(value) {\n    var temp = moment(value);\n    onDismiss();\n    onChange({\n      minute: temp.minute(),\n      hour: temp.hour()\n    });\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    console.warn(\"A date has been picked: \", date);\n    handleChange(date);\n    onDismiss();\n  };\n\n  if (Platform.OS === 'ios') {\n    return React.createElement(React.Fragment, null, React.createElement(TouchableWithoutFeedback, {\n      onPress: onDismiss,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styleSheet.touchable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: styleSheet.iosPicker,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styleSheet.iosTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, t('Common.SelectTime')), React.createElement(DateTimePickerModal, {\n      isVisible: true,\n      display: \"spinner\",\n      mode: \"time\",\n      date: date,\n      onConfirm: function onConfirm(date) {\n        console.log(date);\n        date && handleConfirm(date);\n      },\n      onCancel: onDismiss,\n      minuteInterval: 30,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      style: styleSheet.iosActions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styleSheet.iosActionTouchable,\n      onPress: onDismiss,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"blue\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, t('Common.Cancel'))), React.createElement(TouchableOpacity, {\n      style: styleSheet.iosActionTouchable,\n      onPress: handleConfirm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"blue\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, t('Common.Confirm'))))));\n  } else {\n    return React.createElement(DateTimePickerModal, {\n      isVisible: true,\n      mode: \"time\",\n      date: date,\n      minuteInterval: 30,\n      onConfirm: function onConfirm(date) {\n        console.log(date);\n        date && handleConfirm(date);\n      },\n      onCancel: onDismiss,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    });\n  }\n};\n\nvar styleSheet = StyleSheet.create({\n  touchable: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"rgba(0,0,0,0.5)\"\n  },\n  iosPicker: {\n    position: \"absolute\",\n    width: \"80%\",\n    height: \"50%\",\n    left: \"10%\",\n    top: \"25%\",\n    backgroundColor: \"white\",\n    justifyContent: \"space-between\",\n    borderRadius: 10\n  },\n  iosTitle: {\n    fontSize: 30,\n    textAlign: \"center\",\n    marginTop: 10\n  },\n  iosActions: {\n    justifyContent: \"space-around\",\n    flexDirection: \"row\",\n    marginBottom: 5\n  },\n  iosActionTouchable: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default DatePicker;","map":{"version":3,"names":["View","Text","React","useState","useTranslation","TouchableOpacity","TouchableWithoutFeedback","DateTimePickerModal","moment","DatePicker","hour","minute","onChange","onDismiss","t","defaultValue","utcOffset","set","toDate","date","setDate","handleChange","value","temp","handleConfirm","console","warn","Platform","OS","styleSheet","touchable","iosPicker","iosTitle","log","iosActions","iosActionTouchable","color","StyleSheet","create","position","width","height","backgroundColor","left","top","justifyContent","borderRadius","fontSize","textAlign","marginTop","flexDirection","marginBottom","flex","alignItems"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/components/datePicker/index.tsx"],"sourcesContent":["import { View, Text } from 'native-base';\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Platform, StyleSheet } from 'react-native';\r\nimport { TouchableOpacity, TouchableWithoutFeedback } from 'react-native-gesture-handler';\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport moment from 'moment';\r\n\r\nexport type DatePickerResp = {\r\n    hour: number,\r\n    minute: number\r\n}\r\n\r\ntype DatePickerProp = {\r\n    hour: number,\r\n    minute: number,\r\n    onChange: (resp: DatePickerResp) => void,\r\n    onDismiss: () => void\r\n}\r\n\r\nconst DatePicker = ({ hour, minute, onChange, onDismiss }: DatePickerProp) => {\r\n    const { t } = useTranslation();\r\n    const defaultValue = moment().utcOffset(0);\r\n    defaultValue.set({ hour, minute });\r\n    const [date, setDate] = useState(defaultValue.toDate());\r\n\r\n    const handleChange = (value?: Date) => {\r\n        const temp = moment(value);\r\n        onDismiss();\r\n        onChange({\r\n            minute: temp.minute(),\r\n            hour: temp.hour()\r\n        });\r\n    }\r\n/*\r\n    const handleConfirm = () => {\r\n        handleChange(date);\r\n    }\r\n*/\r\n\r\n/*visibility handled by workingHour\r\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n    const showDatePicker = () => {\r\n        setDatePickerVisibility(true);\r\n    };\r\n    const hideDatePicker = () => {\r\n        setDatePickerVisibility(false);\r\n    };\r\n*/\r\n    const handleConfirm = (date:Date) => {\r\n        console.warn(\"A date has been picked: \", date);\r\n        handleChange(date);\r\n        onDismiss();\r\n    };\r\n\r\n\r\n    if (Platform.OS === 'ios') {\r\n        return (\r\n            <>\r\n                <TouchableWithoutFeedback onPress={onDismiss}>\r\n                    <View style={styleSheet.touchable} />\r\n                </TouchableWithoutFeedback>\r\n                <View style={styleSheet.iosPicker}>\r\n                    <Text style={styleSheet.iosTitle}>{t('Common.SelectTime')}</Text>\r\n                    <DateTimePickerModal\r\n                        isVisible={true}\r\n                        display=\"spinner\"\r\n                        mode=\"time\"\r\n                        date={date}\r\n                        onConfirm={(date:Date) => {\r\n                            console.log(date);\r\n                            date && handleConfirm(date);\r\n                        }}\r\n                        onCancel={onDismiss}\r\n                        minuteInterval={30}\r\n                    />\r\n                    <View style={styleSheet.iosActions}>\r\n\r\n                        <TouchableOpacity\r\n                            style={styleSheet.iosActionTouchable}\r\n                            onPress={onDismiss}\r\n                        >\r\n                            <Text style={{ color: \"blue\" }}>{t('Common.Cancel')}</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity\r\n                            style={styleSheet.iosActionTouchable}\r\n                            onPress={handleConfirm}\r\n                        >\r\n                            <Text style={{ color: \"blue\" }}>{t('Common.Confirm')}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <DateTimePickerModal\r\n                isVisible={true}\r\n                mode='time'\r\n                date={date}\r\n                minuteInterval={30}\r\n                onConfirm={(date:Date) => {\r\n                    console.log(date);\r\n                    date && handleConfirm(date);\r\n                }}\r\n                onCancel={onDismiss}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    touchable: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: \"rgba(0,0,0,0.5)\"\r\n    },\r\n    iosPicker: {\r\n        position: \"absolute\",\r\n        width: \"80%\",\r\n        height: \"50%\",\r\n        left: \"10%\",\r\n        top: \"25%\",\r\n        backgroundColor: \"white\",\r\n        justifyContent: \"space-between\",\r\n        borderRadius: 10\r\n    },\r\n    iosTitle: {\r\n        fontSize: 30,\r\n        textAlign: \"center\",\r\n        marginTop: 10,\r\n    },\r\n    iosActions: {\r\n        justifyContent: \"space-around\",\r\n        flexDirection: \"row\",\r\n        marginBottom: 5,\r\n    },\r\n    iosActionTouchable: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    }\r\n\r\n})\r\n\r\nexport default DatePicker"],"mappings":"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"},"metadata":{},"sourceType":"module"}