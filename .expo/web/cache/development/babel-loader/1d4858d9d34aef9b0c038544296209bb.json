{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\src\\\\pages\\\\selectPendingList\\\\index.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Container, Text, View } from 'native-base';\nimport { useStores } from \"../../stores\";\nimport { getAllDoctors, getBenefits, getPendingListItems } from \"../../actions/config\";\nimport TitleBar from \"../../components/titleBar\";\nimport ErrorPage from \"../error\";\nimport Loading from \"../loading\";\nimport RenderPendingList from \"./renderList\";\nimport { observer } from \"mobx-react\";\nimport PhoneCall from \"../../components/phoneCall\";\nvar SelectPendingListPage = observer(function () {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var stores = useStores();\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refreshing = _useState6[0],\n      setRefreshing = _useState6[1];\n\n  var pendingItems = stores.dataStore.pendingItems;\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var onRefresh = function onRefresh() {\n    var errorMsg;\n    return _regeneratorRuntime.async(function onRefresh$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setRefreshing(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getPendingListItems({\n              stores: stores,\n              i18n: i18n\n            }));\n\n          case 3:\n            errorMsg = _context.sent;\n\n            if (errorMsg) {\n              Alert.alert(t('Common.Error'), errorMsg, [{\n                text: t('Common.Confirm'),\n                onPress: function onPress() {\n                  setRefreshing(false);\n                }\n              }]);\n            } else {\n              setRefreshing(false);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getData = function getData() {\n    var pendingListErrorMsg, getBenefitsErrorMsg, getDoctorListErrorMsg, errorMsg;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoading(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getPendingListItems({\n              stores: stores,\n              i18n: i18n\n            }));\n\n          case 3:\n            pendingListErrorMsg = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(getBenefits({\n              stores: stores\n            }));\n\n          case 6:\n            getBenefitsErrorMsg = _context2.sent;\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(getAllDoctors({\n              stores: stores\n            }));\n\n          case 9:\n            getDoctorListErrorMsg = _context2.sent;\n            errorMsg = pendingListErrorMsg || getDoctorListErrorMsg || getBenefitsErrorMsg;\n            setLoading(false);\n\n            if (errorMsg) {\n              setError(errorMsg);\n            }\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(TitleBar, {\n    title: t('Modify.SelectPendingItem'),\n    onBack: function onBack() {\n      navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'Home'\n        }]\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, t('Modify.PendingItemHeader'))), error ? React.createElement(ErrorPage, {\n    title: error,\n    onRetry: getData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }) : loading ? React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }\n  }) : React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, React.createElement(RenderPendingList, {\n    pendingListItems: pendingItems,\n    onRefresh: onRefresh,\n    refreshing: refreshing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), React.createElement(PhoneCall, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  })));\n});\nvar styles = StyleSheet.create({\n  header: {\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  headerText: {\n    fontWeight: '700'\n  }\n});\nexport default SelectPendingListPage;","map":{"version":3,"names":["React","useEffect","useState","useNavigation","useTranslation","Container","Text","View","useStores","getAllDoctors","getBenefits","getPendingListItems","TitleBar","ErrorPage","Loading","RenderPendingList","observer","PhoneCall","SelectPendingListPage","t","i18n","stores","navigation","error","setError","loading","setLoading","refreshing","setRefreshing","pendingItems","dataStore","getData","onRefresh","errorMsg","Alert","alert","text","onPress","pendingListErrorMsg","getBenefitsErrorMsg","getDoctorListErrorMsg","reset","index","routes","name","styles","header","headerText","StyleSheet","create","height","alignItems","justifyContent","fontWeight"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/selectPendingList/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Alert, StyleSheet } from 'react-native';\r\nimport { Container, Text, View } from 'native-base';\r\nimport { useStores } from '../../stores';\r\nimport {getAllDoctors, getBenefits, getDoctors, getPendingListItems} from '../../actions/config';\r\nimport TitleBar from '../../components/titleBar';\r\nimport ErrorPage from '../error';\r\nimport Loading from '../loading';\r\nimport RenderPendingList from './renderList';\r\nimport {observer} from \"mobx-react\";\r\nimport PhoneCall from \"../../components/phoneCall\";\r\n\r\nconst SelectPendingListPage = observer(() => {\r\n  const {\r\n    t,\r\n    i18n,\r\n  } = useTranslation();\r\n  const stores = useStores();\r\n  const navigation = useNavigation();\r\n\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const { pendingItems } = stores.dataStore;\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const onRefresh = async () => {\r\n    setRefreshing(true);\r\n    const errorMsg = await getPendingListItems({\r\n      stores,\r\n      i18n,\r\n    });\r\n    if (errorMsg) {\r\n      Alert.alert(\r\n        t('Common.Error'),\r\n        errorMsg,\r\n        [\r\n          {\r\n            text: t('Common.Confirm'),\r\n            onPress: () => {\r\n              setRefreshing(false);\r\n            },\r\n          },\r\n        ],\r\n      );\r\n    } else {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    const pendingListErrorMsg = await getPendingListItems({\r\n      stores,\r\n      i18n,\r\n    });\r\n\r\n    const getBenefitsErrorMsg= await getBenefits({stores});\r\n    const getDoctorListErrorMsg= await getAllDoctors({ stores});\r\n\r\n\r\n    const errorMsg=pendingListErrorMsg||getDoctorListErrorMsg||getBenefitsErrorMsg;\r\n    setLoading(false);\r\n    if (errorMsg) {\r\n      setError(errorMsg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <TitleBar\r\n        title={t('Modify.SelectPendingItem')}\r\n        onBack={() => {\r\n          navigation.reset({\r\n            index: 0,\r\n            routes: [{ name: 'Home' }],\r\n          });\r\n        }}\r\n      />\r\n\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerText}>\r\n          {\r\n            t('Modify.PendingItemHeader')\r\n          }\r\n        </Text>\r\n      </View>\r\n\r\n\r\n\r\n\r\n      {\r\n        error\r\n          ? <ErrorPage title={error} onRetry={getData} />\r\n          : loading ? <Loading />\r\n            : (\r\n              <React.Fragment>\r\n                <RenderPendingList\r\n                  pendingListItems={pendingItems}\r\n                  onRefresh={onRefresh}\r\n                  refreshing={refreshing}\r\n                />\r\n\r\n                <PhoneCall/>\r\n              </React.Fragment>\r\n            )\r\n      }\r\n\r\n    </Container>\r\n  );\r\n});\r\n\r\nconst styles=StyleSheet.create({\r\n  header:{\r\n    height:50,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n  },\r\n  headerText:{\r\n    fontWeight:'700'\r\n  }\r\n})\r\nexport default SelectPendingListPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}