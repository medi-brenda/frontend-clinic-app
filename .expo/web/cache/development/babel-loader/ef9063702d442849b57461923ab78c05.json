{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\src\\\\pages\\\\selectPendingList\\\\renderList.tsx\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { Text, View } from \"native-base\";\nimport React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PendingListItem from \"../../components/pendingItem\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useStores } from \"../../stores\";\nimport { goNextAfterSelectingPendingItem } from \"../../actions/app\";\n\nvar RenderPendingList = function RenderPendingList(_ref) {\n  var pendingListItems = _ref.pendingListItems,\n      onRefresh = _ref.onRefresh,\n      refreshing = _ref.refreshing;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var stores = useStores();\n  var navigation = useNavigation();\n\n  var goQrOrCardPaymentFlow = function goQrOrCardPaymentFlow(pendingItem) {\n    return goNextAfterSelectingPendingItem({\n      stores: stores,\n      navigation: navigation,\n      pendingItem: pendingItem\n    });\n  };\n\n  if (!pendingListItems.length) {\n    return React.createElement(ScrollView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styleSheet.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styleSheet.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, t('Modify.NoPendingItem'))));\n  }\n\n  return React.createElement(FlatList, {\n    style: styleSheet.list,\n    data: pendingListItems,\n    keyExtractor: function keyExtractor(item) {\n      return \"pendingList-\" + item.id;\n    },\n    onRefresh: onRefresh,\n    refreshing: refreshing,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(PendingListItem, {\n        onPress: goQrOrCardPaymentFlow,\n        pendingItem: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  });\n};\n\nvar styleSheet = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: Dimensions.get('screen').height * 0.7\n  },\n  text: {\n    fontSize: 30\n  },\n  list: {\n    paddingHorizontal: 13\n  }\n});\nexport default RenderPendingList;","map":{"version":3,"names":["useTranslation","ScrollView","Text","View","React","PendingListItem","useNavigation","useStores","goNextAfterSelectingPendingItem","RenderPendingList","pendingListItems","onRefresh","refreshing","t","stores","navigation","goQrOrCardPaymentFlow","pendingItem","length","styleSheet","container","text","list","item","id","StyleSheet","create","flexDirection","justifyContent","alignItems","height","Dimensions","get","fontSize","paddingHorizontal"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/selectPendingList/renderList.tsx"],"sourcesContent":["import {PendingItem} from \"../../models/pendingItem\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {ScrollView} from \"react-native-gesture-handler\";\r\nimport {Text, View} from \"native-base\";\r\nimport React from \"react\";\r\nimport {Dimensions, FlatList, StyleSheet} from \"react-native\";\r\nimport PendingListItem from \"../../components/pendingItem\";\r\nimport {useNavigation} from \"@react-navigation/native\";\r\nimport {useStores} from \"../../stores\";\r\nimport {goNextAfterSelectingPendingItem} from '../../actions/app';\r\n\r\ntype RenderPendingListProp = {\r\n    pendingListItems: PendingItem[],\r\n    onRefresh: () => void,\r\n    refreshing: boolean\r\n};\r\n\r\n\r\nconst RenderPendingList = ({pendingListItems, onRefresh, refreshing}: RenderPendingListProp) => {\r\n    const {t} = useTranslation();\r\n    const stores = useStores();\r\n    const navigation = useNavigation();\r\n\r\n\r\n    const goQrOrCardPaymentFlow = (pendingItem: PendingItem) => {\r\n        return goNextAfterSelectingPendingItem({stores, navigation, pendingItem});\r\n    }\r\n\r\n    if (!pendingListItems.length) {\r\n        return (\r\n            <ScrollView>\r\n                <View style={styleSheet.container}>\r\n                    <Text style={styleSheet.text}>\r\n                        {t('Modify.NoPendingItem')}\r\n                    </Text>\r\n                </View>\r\n            </ScrollView>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <FlatList\r\n            style={styleSheet.list}\r\n            data={pendingListItems}\r\n            keyExtractor={(item) => `pendingList-${item.id}`}\r\n            onRefresh={onRefresh}\r\n            refreshing={refreshing}\r\n            renderItem={({item}) => {\r\n                return (\r\n                    <PendingListItem\r\n                        onPress={goQrOrCardPaymentFlow}\r\n                        pendingItem={item}\r\n                    />\r\n                )\r\n            }}\r\n        />\r\n    )\r\n};\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: Dimensions.get('screen').height * 0.7,\r\n    },\r\n    text: {\r\n        fontSize: 30\r\n    },\r\n    list: {\r\n        paddingHorizontal: 13\r\n    }\r\n});\r\n\r\nexport default RenderPendingList;\r\n"],"mappings":";;;AACA,SAAQA,cAAR,QAA6B,eAA7B;AACA,SAAQC,UAAR,QAAyB,8BAAzB;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,eAAP;AACA,SAAQC,aAAR,QAA4B,0BAA5B;AACA,SAAQC,SAAR;AACA,SAAQC,+BAAR;;AASA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAsE;EAAA,IAApEC,gBAAoE,QAApEA,gBAAoE;EAAA,IAAlDC,SAAkD,QAAlDA,SAAkD;EAAA,IAAvCC,UAAuC,QAAvCA,UAAuC;;EAC5F,sBAAYZ,cAAc,EAA1B;EAAA,IAAOa,CAAP,mBAAOA,CAAP;;EACA,IAAMC,MAAM,GAAGP,SAAS,EAAxB;EACA,IAAMQ,UAAU,GAAGT,aAAa,EAAhC;;EAGA,IAAMU,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,WAAD,EAA8B;IACxD,OAAOT,+BAA+B,CAAC;MAACM,MAAM,EAANA,MAAD;MAASC,UAAU,EAAVA,UAAT;MAAqBE,WAAW,EAAXA;IAArB,CAAD,CAAtC;EACH,CAFD;;EAIA,IAAI,CAACP,gBAAgB,CAACQ,MAAtB,EAA8B;IAC1B,OACI,oBAAC,UAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACI,oBAAC,IAAD;MAAM,KAAK,EAAEC,UAAU,CAACC,SAAxB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACI,oBAAC,IAAD;MAAM,KAAK,EAAED,UAAU,CAACE,IAAxB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACKR,CAAC,CAAC,sBAAD,CADN,CADJ,CADJ,CADJ;EASH;;EAED,OACI,oBAAC,QAAD;IACI,KAAK,EAAEM,UAAU,CAACG,IADtB;IAEI,IAAI,EAAEZ,gBAFV;IAGI,YAAY,EAAE,sBAACa,IAAD;MAAA,wBAAyBA,IAAI,CAACC,EAA9B;IAAA,CAHlB;IAII,SAAS,EAAEb,SAJf;IAKI,UAAU,EAAEC,UALhB;IAMI,UAAU,EAAE,2BAAY;MAAA,IAAVW,IAAU,SAAVA,IAAU;MACpB,OACI,oBAAC,eAAD;QACI,OAAO,EAAEP,qBADb;QAEI,WAAW,EAAEO,IAFjB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADJ;IAMH,CAbL;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ;AAiBH,CAvCD;;AAyCA,IAAMJ,UAAU,GAAGM,UAAU,CAACC,MAAX,CAAkB;EACjCN,SAAS,EAAE;IACPO,aAAa,EAAE,QADR;IAEPC,cAAc,EAAE,QAFT;IAGPC,UAAU,EAAE,QAHL;IAIPC,MAAM,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,MAAzB,GAAkC;EAJnC,CADsB;EAOjCT,IAAI,EAAE;IACFY,QAAQ,EAAE;EADR,CAP2B;EAUjCX,IAAI,EAAE;IACFY,iBAAiB,EAAE;EADjB;AAV2B,CAAlB,CAAnB;AAeA,eAAezB,iBAAf"},"metadata":{},"sourceType":"module"}