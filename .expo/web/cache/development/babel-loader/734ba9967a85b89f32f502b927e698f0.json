{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\src\\\\pages\\\\record\\\\index.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nimport { observer } from 'mobx-react';\nimport { Container } from 'native-base';\nimport React, { useState, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { initRecords } from \"../../actions/app\";\nimport TitleBar from \"../../components/titleBar\";\nimport { useStores } from \"../../stores\";\nimport ErrorPage from \"../error\";\nimport Loading from \"../loading\";\nimport * as Notifications from 'expo-notifications';\nvar RecordPage = observer(function () {\n  var stores = useStores();\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n,\n      t = _useTranslation.t;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inited = _useState4[0],\n      setInited = _useState4[1];\n\n  var notificationListener = useRef();\n  var responseListener = useRef();\n\n  var handlerNotificationReceived = function handlerNotificationReceived(notification) {\n    if (notification.origin === 'selected') {}\n  };\n\n  useFocusEffect(function () {\n    if (inited) {\n      return;\n    }\n\n    init();\n  });\n\n  var init = function init() {\n    var errorMsg;\n    return _regeneratorRuntime.async(function init$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setInited(true);\n            setError('');\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(initRecords({\n              stores: stores,\n              navigation: navigation,\n              i18n: i18n\n            }));\n\n          case 4:\n            errorMsg = _context.sent;\n\n            if (errorMsg) {\n              setError(errorMsg);\n            }\n\n            responseListener.current = Notifications.addNotificationResponseReceivedListener(function (response) {\n              var page = response.notification.request.content.data.page;\n              navigation.navigate(\"Home\", {\n                screen: page\n              });\n            });\n            notificationListener.current = Notifications.addNotificationReceivedListener(handlerNotificationReceived);\n            return _context.abrupt(\"return\", function () {\n              Notifications.removeNotificationSubscription(responseListener);\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(TitleBar, {\n    title: t('Common.Records'),\n    onBack: function onBack() {\n      navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'Home'\n        }]\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), error ? React.createElement(ErrorPage, {\n    title: error,\n    onRetry: init,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }) : React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }));\n});\nexport default RecordPage;","map":{"version":3,"names":["useFocusEffect","useNavigation","observer","Container","React","useState","useRef","useTranslation","initRecords","TitleBar","useStores","ErrorPage","Loading","Notifications","RecordPage","stores","i18n","t","navigation","error","setError","inited","setInited","notificationListener","responseListener","handlerNotificationReceived","notification","origin","init","errorMsg","current","addNotificationResponseReceivedListener","response","page","request","content","data","navigate","screen","addNotificationReceivedListener","removeNotificationSubscription","reset","index","routes","name"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/record/index.tsx"],"sourcesContent":["import { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { observer } from 'mobx-react';\r\nimport { Container } from 'native-base';\r\nimport React, { useState, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { initRecords } from '../../actions/app';\r\nimport TitleBar from '../../components/titleBar';\r\nimport { useStores } from '../../stores';\r\nimport ErrorPage from '../error';\r\nimport Loading from '../loading';\r\nimport * as Notifications from 'expo-notifications';\r\n\r\nconst RecordPage = observer(() => {\r\n    const stores = useStores();\r\n    const { i18n, t } = useTranslation();\r\n    const navigation = useNavigation();\r\n\r\n    const [error, setError] = useState('');\r\n    const [inited, setInited] = useState(false);\r\n\r\n    const notificationListener: any = useRef<any>();\r\n    const responseListener: any = useRef<any>();\r\n\r\n    const handlerNotificationReceived = (notification:any) => {\r\n        if(notification.origin === 'selected'){\r\n        }\r\n    };\r\n    \r\n    useFocusEffect(() => {\r\n        if (inited) {\r\n            return;\r\n        }\r\n\r\n        init();\r\n    });\r\n\r\n    const init = async () => {\r\n        setInited(true);\r\n        setError('');\r\n        const errorMsg = await initRecords({ stores, navigation, i18n });\r\n        if (errorMsg) {\r\n            setError(errorMsg);\r\n        }\r\n\r\n        responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\r\n            const page:any = response.notification.request.content.data.page;\r\n            navigation.navigate(\"Home\", {screen: page});\r\n        });\r\n\r\n        notificationListener.current = Notifications.addNotificationReceivedListener(handlerNotificationReceived);\r\n\r\n        return () => {\r\n            Notifications.removeNotificationSubscription(responseListener);\r\n        };\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <TitleBar\r\n                title={t('Common.Records')}\r\n                onBack={() => {\r\n                    navigation.reset({\r\n                        index: 0,\r\n                        routes: [{ name: 'Home' }]\r\n                    });\r\n                }}\r\n            />\r\n            {\r\n                error ?\r\n                    <ErrorPage title={error} onRetry={init} /> :\r\n                    <Loading />\r\n            }\r\n        </Container>\r\n    )\r\n});\r\n\r\nexport default RecordPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}