{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\src\\\\pages\\\\selectDoctors\\\\index.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from '@react-navigation/native';\nimport { observer } from 'mobx-react';\nimport { Container } from 'native-base';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport { goSelectMethod } from \"../../actions/app\";\nimport { getDoctorsByClinicInsurerBenefit } from \"../../actions/config\";\nimport List from \"../../components/list\";\nimport TitleBar from \"../../components/titleBar\";\nimport i18n from \"../../i18n\";\nimport { useStores } from \"../../stores\";\nimport { translate } from \"../../utils/string\";\nimport ErrorPage from \"../error\";\nimport Loading from \"../loading\";\nimport PhoneCall from \"../../components/phoneCall\";\nvar SelectDoctorPage = observer(function () {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var navigation = useNavigation();\n  var stores = useStores();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      inited = _useState2[0],\n      setInited = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      spinner = _useState6[0],\n      setSpinner = _useState6[1];\n\n  var currentTab = stores.appStore.currentTab;\n  var doctors = stores.configStore.doctors;\n  useEffect(function () {\n    init();\n  }, []);\n\n  var init = function init() {\n    var errMsg;\n    return _regeneratorRuntime.async(function init$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getDoctorsByClinicInsurerBenefit({\n              stores: stores\n            }));\n\n          case 2:\n            errMsg = _context.sent;\n\n            if (!errMsg) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setError(errMsg));\n\n          case 5:\n            return _context.abrupt(\"return\", setInited(true));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onItemSelect = function onItemSelect(item) {\n    var errorMsg;\n    return _regeneratorRuntime.async(function onItemSelect$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setSpinner(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(goSelectMethod({\n              stores: stores,\n              doctorId: item.code,\n              navigation: navigation,\n              i18n: i18n\n            }));\n\n          case 3:\n            errorMsg = _context2.sent;\n\n            if (errorMsg) {\n              Alert.alert(t('Common.Error'), errorMsg, [{\n                text: t('Common.Confirm'),\n                onPress: function onPress() {\n                  setSpinner(false);\n                }\n              }]);\n            } else {\n              setSpinner(false);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(TitleBar, {\n    title: t(currentTab + \".SelectDoctor\"),\n    onBack: function onBack() {\n      navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), React.createElement(Spinner, {\n    visible: spinner,\n    color: \"red\",\n    size: \"large\",\n    overlayColor: \"rgba(0, 0, 0, 0.25)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), error ? React.createElement(ErrorPage, {\n    title: error,\n    onRetry: init,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }) : !inited ? React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 31\n    }\n  }) : React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styleSheet.breadcrumb,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, t(currentTab + \".Selected\") + ': ' + stores.dataStore.values.insurerName + ' / ' + stores.dataStore.values.benefitName), React.createElement(List, {\n    data: doctors,\n    icon: \"ios-arrow-forward\",\n    onPress: onItemSelect,\n    formatText: function formatText(item) {\n      return translate(item, i18n);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  })), React.createElement(PhoneCall, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }));\n});\nvar styleSheet = StyleSheet.create({\n  breadcrumb: {\n    marginLeft: 20,\n    marginTop: 5,\n    color: \"#777777\"\n  }\n});\nexport default SelectDoctorPage;","map":{"version":3,"names":["useNavigation","observer","Container","React","useEffect","useState","useTranslation","Spinner","goSelectMethod","getDoctorsByClinicInsurerBenefit","List","TitleBar","i18n","useStores","translate","ErrorPage","Loading","PhoneCall","SelectDoctorPage","t","navigation","stores","inited","setInited","error","setError","spinner","setSpinner","currentTab","appStore","doctors","configStore","init","errMsg","onItemSelect","item","doctorId","code","errorMsg","Alert","alert","text","onPress","goBack","styleSheet","breadcrumb","dataStore","values","insurerName","benefitName","StyleSheet","create","marginLeft","marginTop","color"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/selectDoctors/index.tsx"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport { observer } from 'mobx-react';\r\nimport { Container } from 'native-base';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Text, Alert, StyleSheet } from 'react-native';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport { goSelectMethod } from '../../actions/app';\r\nimport { getDoctorsByClinicInsurerBenefit } from '../../actions/config';\r\nimport List from '../../components/list';\r\nimport TitleBar from '../../components/titleBar';\r\nimport i18n from '../../i18n';\r\nimport { Option } from '../../models/option';\r\nimport { useStores } from '../../stores';\r\nimport { translate } from '../../utils/string';\r\nimport ErrorPage from '../error';\r\nimport Loading from '../loading';\r\nimport PhoneCall from \"../../components/phoneCall\";\r\nimport styles from '../../styles';\r\n\r\nconst SelectDoctorPage = observer(() => {\r\n    const { t } = useTranslation();\r\n    const navigation = useNavigation();\r\n    const stores = useStores();\r\n\r\n    const [inited, setInited] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [spinner, setSpinner] = useState(false);\r\n\r\n    const { currentTab } = stores.appStore;\r\n    const { doctors } = stores.configStore;\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const init = async () => {\r\n        const errMsg = await getDoctorsByClinicInsurerBenefit({ stores });\r\n        if (errMsg) {\r\n            return setError(errMsg);\r\n        }\r\n        return setInited(true);\r\n    }\r\n\r\n    const onItemSelect = async (item: Option) => {\r\n        setSpinner(true);\r\n        const errorMsg = await goSelectMethod({\r\n            stores,\r\n            doctorId: item.code,\r\n            navigation,\r\n            i18n\r\n        });\r\n\r\n        if (errorMsg) {\r\n            Alert.alert(\r\n                t('Common.Error'),\r\n                errorMsg,\r\n                [{\r\n                    text: t('Common.Confirm'),\r\n                    onPress: () => {\r\n                        setSpinner(false);\r\n                    }\r\n                }]\r\n            );\r\n        }\r\n        else {\r\n            setSpinner(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <TitleBar\r\n                title={t(`${currentTab}.SelectDoctor`)}\r\n                onBack={() => {\r\n                    navigation.goBack();\r\n                }}\r\n            />\r\n            <Spinner\r\n                visible={spinner}\r\n                color={\"red\"}\r\n                size={\"large\"}\r\n                overlayColor={\"rgba(0, 0, 0, 0.25)\"}\r\n            />\r\n            {\r\n                error ?\r\n                    <ErrorPage title={error} onRetry={init} /> :\r\n                    !inited ? <Loading /> :\r\n                    <>\r\n                        <Text style={styleSheet.breadcrumb}>{t(`${currentTab}.Selected`)+': '+stores.dataStore.values.insurerName + ' / '+stores.dataStore.values.benefitName }</Text>\r\n                        <List\r\n                            data={doctors}\r\n                            icon='ios-arrow-forward'\r\n                            onPress={onItemSelect}\r\n                            formatText={(item) => translate(item, i18n)}\r\n                        />\r\n                    </>\r\n            }\r\n\r\n            <PhoneCall/>\r\n        </Container>\r\n    )\r\n});\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    breadcrumb:{\r\n        marginLeft: 20,\r\n        marginTop: 5,\r\n        color: \"#777777\"\r\n    }\r\n});\r\n\r\nexport default SelectDoctorPage;\r\n"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,eAA/B;;;;AAEA,OAAOC,OAAP,MAAoB,sCAApB;AACA,SAASC,cAAT;AACA,SAASC,gCAAT;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,OAAOC,IAAP;AAEA,SAASC,SAAT;AACA,SAASC,SAAT;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP;AAGA,IAAMC,gBAAgB,GAAGjB,QAAQ,CAAC,YAAM;EACpC,sBAAcK,cAAc,EAA5B;EAAA,IAAQa,CAAR,mBAAQA,CAAR;;EACA,IAAMC,UAAU,GAAGpB,aAAa,EAAhC;EACA,IAAMqB,MAAM,GAAGR,SAAS,EAAxB;;EAEA,gBAA4BR,QAAQ,CAAC,KAAD,CAApC;EAAA;EAAA,IAAOiB,MAAP;EAAA,IAAeC,SAAf;;EACA,iBAA0BlB,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOmB,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAA8BpB,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOqB,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,IAAQC,UAAR,GAAuBP,MAAM,CAACQ,QAA9B,CAAQD,UAAR;EACA,IAAQE,OAAR,GAAoBT,MAAM,CAACU,WAA3B,CAAQD,OAAR;EAEA1B,SAAS,CAAC,YAAM;IACZ4B,IAAI;EACP,CAFQ,EAEN,EAFM,CAAT;;EAIA,IAAMA,IAAI,GAAG,SAAPA,IAAO;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACYvB,gCAAgC,CAAC;cAAEY,MAAM,EAANA;YAAF,CAAD,CAD5C;;UAAA;YACHY,MADG;;YAAA,KAELA,MAFK;cAAA;cAAA;YAAA;;YAAA,iCAGER,QAAQ,CAACQ,MAAD,CAHV;;UAAA;YAAA,iCAKFV,SAAS,CAAC,IAAD,CALP;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAb;;EAQA,IAAMW,YAAY,GAAG,SAAfA,YAAe,CAAOC,IAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YACjBR,UAAU,CAAC,IAAD,CAAV;YADiB;YAAA,iCAEMnB,cAAc,CAAC;cAClCa,MAAM,EAANA,MADkC;cAElCe,QAAQ,EAAED,IAAI,CAACE,IAFmB;cAGlCjB,UAAU,EAAVA,UAHkC;cAIlCR,IAAI,EAAJA;YAJkC,CAAD,CAFpB;;UAAA;YAEX0B,QAFW;;YASjB,IAAIA,QAAJ,EAAc;cACVC,KAAK,CAACC,KAAN,CACIrB,CAAC,CAAC,cAAD,CADL,EAEImB,QAFJ,EAGI,CAAC;gBACGG,IAAI,EAAEtB,CAAC,CAAC,gBAAD,CADV;gBAEGuB,OAAO,EAAE,mBAAM;kBACXf,UAAU,CAAC,KAAD,CAAV;gBACH;cAJJ,CAAD,CAHJ;YAUH,CAXD,MAYK;cACDA,UAAU,CAAC,KAAD,CAAV;YACH;;UAvBgB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAArB;;EA0BA,OACI,oBAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,oBAAC,QAAD;IACI,KAAK,EAAER,CAAC,CAAIS,UAAJ,mBADZ;IAEI,MAAM,EAAE,kBAAM;MACVR,UAAU,CAACuB,MAAX;IACH,CAJL;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,EAOI,oBAAC,OAAD;IACI,OAAO,EAAEjB,OADb;IAEI,KAAK,EAAE,KAFX;IAGI,IAAI,EAAE,OAHV;IAII,YAAY,EAAE,qBAJlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPJ,EAcQF,KAAK,GACD,oBAAC,SAAD;IAAW,KAAK,EAAEA,KAAlB;IAAyB,OAAO,EAAEQ,IAAlC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADC,GAED,CAACV,MAAD,GAAU,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAV,GACA,0CACI,oBAAC,IAAD;IAAM,KAAK,EAAEsB,UAAU,CAACC,UAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAqC1B,CAAC,CAAIS,UAAJ,eAAD,GAA4B,IAA5B,GAAiCP,MAAM,CAACyB,SAAP,CAAiBC,MAAjB,CAAwBC,WAAzD,GAAuE,KAAvE,GAA6E3B,MAAM,CAACyB,SAAP,CAAiBC,MAAjB,CAAwBE,WAA1I,CADJ,EAEI,oBAAC,IAAD;IACI,IAAI,EAAEnB,OADV;IAEI,IAAI,EAAC,mBAFT;IAGI,OAAO,EAAEI,YAHb;IAII,UAAU,EAAE,oBAACC,IAAD;MAAA,OAAUrB,SAAS,CAACqB,IAAD,EAAOvB,IAAP,CAAnB;IAAA,CAJhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CAjBZ,EA4BI,oBAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EA5BJ,CADJ;AAgCH,CAlFgC,CAAjC;AAoFA,IAAMgC,UAAU,GAAGM,UAAU,CAACC,MAAX,CAAkB;EACjCN,UAAU,EAAC;IACPO,UAAU,EAAE,EADL;IAEPC,SAAS,EAAE,CAFJ;IAGPC,KAAK,EAAE;EAHA;AADsB,CAAlB,CAAnB;AAQA,eAAepC,gBAAf"},"metadata":{},"sourceType":"module"}