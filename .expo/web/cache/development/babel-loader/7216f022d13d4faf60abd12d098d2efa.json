{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar image_viewer_style_1 = require(\"./image-viewer.style\");\n\nvar Props = function () {\n  function Props() {\n    this.show = false;\n    this.imageUrls = [];\n    this.flipThreshold = 80;\n    this.maxOverflow = 300;\n    this.index = 0;\n    this.failImageSource = undefined;\n    this.backgroundColor = 'black';\n    this.footerContainerStyle = {};\n    this.menuContext = {\n      saveToLocal: 'save to the album',\n      cancel: 'cancel'\n    };\n    this.saveToLocalByLongPress = true;\n    this.enableImageZoom = true;\n    this.style = {};\n    this.enableSwipeDown = false;\n    this.enablePreload = false;\n    this.pageAnimateTime = 100;\n    this.useNativeDriver = false;\n\n    this.onLongPress = function () {};\n\n    this.onClick = function () {};\n\n    this.onDoubleClick = function () {};\n\n    this.onSave = function () {};\n\n    this.onMove = function () {};\n\n    this.renderHeader = function () {\n      return null;\n    };\n\n    this.renderFooter = function () {\n      return null;\n    };\n\n    this.renderIndicator = function (currentIndex, allSize) {\n      return React.createElement(react_native_1.View, {\n        style: image_viewer_style_1.simpleStyle.count\n      }, React.createElement(react_native_1.Text, {\n        style: image_viewer_style_1.simpleStyle.countText\n      }, currentIndex + '/' + allSize));\n    };\n\n    this.renderImage = function (props) {\n      return React.createElement(react_native_1.Image, props);\n    };\n\n    this.renderArrowLeft = function () {\n      return null;\n    };\n\n    this.renderArrowRight = function () {\n      return null;\n    };\n\n    this.onShowModal = function () {};\n\n    this.onCancel = function () {};\n\n    this.onSwipeDown = function () {};\n\n    this.loadingRender = function () {\n      return null;\n    };\n\n    this.onSaveToCamera = function () {};\n\n    this.onChange = function () {};\n  }\n\n  return Props;\n}();\n\nexports.Props = Props;\n\nvar State = function () {\n  function State() {\n    this.show = false;\n    this.currentShowIndex = 0;\n    this.prevIndexProp = 0;\n    this.imageLoaded = false;\n    this.imageSizes = [];\n    this.isShowMenu = false;\n  }\n\n  return State;\n}();\n\nexports.State = State;","map":{"version":3,"sources":["../src/image-viewer.type.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AAEA,IAAA,oBAAA,GAAA,OAAA,wBAAA;;AAUA,IAAA,KAAA,GAAA,YAAA;EAAA,SAAA,KAAA,GAAA;IAIS,KAAA,IAAA,GAAiB,KAAjB;IAKA,KAAA,SAAA,GAA0B,EAA1B;IAKA,KAAA,aAAA,GAAyB,EAAzB;IAKA,KAAA,WAAA,GAAuB,GAAvB;IAKA,KAAA,KAAA,GAAiB,CAAjB;IAKA,KAAA,eAAA,GAA+B,SAA/B;IAKA,KAAA,eAAA,GAA2B,OAA3B;IAKA,KAAA,oBAAA,GAAgC,EAAhC;IAKA,KAAA,WAAA,GAAoB;MAAE,WAAW,EAAE,mBAAf;MAAoC,MAAM,EAAE;IAA5C,CAApB;IAKA,KAAA,sBAAA,GAAmC,IAAnC;IAKA,KAAA,eAAA,GAA4B,IAA5B;IAEA,KAAA,KAAA,GAAoB,EAApB;IAMA,KAAA,eAAA,GAA4B,KAA5B;IAmBA,KAAA,aAAA,GAA0B,KAA1B;IAKA,KAAA,eAAA,GAA2B,GAA3B;IAMA,KAAA,eAAA,GAA4B,KAA5B;;IAKA,KAAA,WAAA,GAA6C,YAAA,CAEnD,CAFM;;IAOA,KAAA,OAAA,GAAmE,YAAA,CAEzE,CAFM;;IAOA,KAAA,aAAA,GAA8C,YAAA,CAEpD,CAFM;;IAQA,KAAA,MAAA,GAAiC,YAAA,CAEvC,CAFM;;IAIA,KAAA,MAAA,GAAwC,YAAA,CAE9C,CAFM;;IAOA,KAAA,YAAA,GAAoE,YAAA;MACzE,OAAO,IAAP;IACD,CAFM;;IAOA,KAAA,YAAA,GAAmE,YAAA;MACxE,OAAO,IAAP;IACD,CAFM;;IAOA,KAAA,eAAA,GAAyF,UAC9F,YAD8F,EAE9F,OAF8F,EAE9E;MAEhB,OAAO,KAAK,CAAC,aAAN,CACL,cAAA,CAAA,IADK,EAEL;QAAE,KAAK,EAAE,oBAAA,CAAA,WAAA,CAAY;MAArB,CAFK,EAGL,KAAK,CAAC,aAAN,CAAoB,cAAA,CAAA,IAApB,EAA0B;QAAE,KAAK,EAAE,oBAAA,CAAA,WAAA,CAAY;MAArB,CAA1B,EAA4D,YAAY,GAAG,GAAf,GAAqB,OAAjF,CAHK,CAAP;IAKD,CATM;;IAcA,KAAA,WAAA,GAAwD,UAAC,KAAD,EAAW;MACxE,OAAO,KAAK,CAAC,aAAN,CAAoB,cAAA,CAAA,KAApB,EAA2B,KAA3B,CAAP;IACD,CAFM;;IAOA,KAAA,eAAA,GAAkD,YAAA;MACvD,OAAO,IAAP;IACD,CAFM;;IAOA,KAAA,gBAAA,GAAmD,YAAA;MACxD,OAAO,IAAP;IACD,CAFM;;IAOA,KAAA,WAAA,GAAwC,YAAA,CAE9C,CAFM;;IAOA,KAAA,QAAA,GAAwB,YAAA,CAE9B,CAFM;;IAOA,KAAA,WAAA,GAA2B,YAAA,CAEjC,CAFM;;IAOA,KAAA,aAAA,GAAgD,YAAA;MACrD,OAAO,IAAP;IACD,CAFM;;IAOA,KAAA,cAAA,GAA4C,YAAA,CAElD,CAFM;;IAOA,KAAA,QAAA,GAAsC,YAAA,CAE5C,CAFM;EAKR;;EAAD,OAAA,KAAA;AAAC,CA3ND,EAAA;;AAAa,OAAA,CAAA,KAAA,GAAA,KAAA;;AA6Nb,IAAA,KAAA,GAAA,YAAA;EAAA,SAAA,KAAA,GAAA;IAIS,KAAA,IAAA,GAAiB,KAAjB;IAKA,KAAA,gBAAA,GAA4B,CAA5B;IAKA,KAAA,aAAA,GAAyB,CAAzB;IAKA,KAAA,WAAA,GAAwB,KAAxB;IAKA,KAAA,UAAA,GAA4B,EAA5B;IAKA,KAAA,UAAA,GAAuB,KAAvB;EACR;;EAAD,OAAA,KAAA;AAAC,CA9BD,EAAA;;AAAa,OAAA,CAAA,KAAA,GAAA,KAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar react_native_1 = require(\"react-native\");\nvar image_viewer_style_1 = require(\"./image-viewer.style\");\nvar Props = /** @class */ (function () {\n    function Props() {\n        /**\n         * 是否显示\n         */\n        this.show = false;\n        /**\n         * 图片数组\n         */\n        this.imageUrls = [];\n        /**\n         * 滑动到下一页的X阈值\n         */\n        this.flipThreshold = 80;\n        /**\n         * 当前页能滑到下一页X位置最大值\n         */\n        this.maxOverflow = 300;\n        /**\n         * 初始显示第几张图\n         */\n        this.index = 0;\n        /**\n         * 加载失败的图\n         */\n        this.failImageSource = undefined;\n        /**\n         * 背景颜色\n         */\n        this.backgroundColor = 'black';\n        /**\n         * style props for the footer container\n         */\n        this.footerContainerStyle = {};\n        /**\n         * Menu Context Values\n         */\n        this.menuContext = { saveToLocal: 'save to the album', cancel: 'cancel' };\n        /**\n         * 是否开启长按保存到本地的功能\n         */\n        this.saveToLocalByLongPress = true;\n        /**\n         * 是否允许缩放图片\n         */\n        this.enableImageZoom = true;\n        this.style = {};\n        /**\n         * Enable swipe down to close image viewer.\n         * When swipe down, will trigger onCancel.\n         */\n        this.enableSwipeDown = false;\n        /**\n         * 是否预加载图片\n         */\n        this.enablePreload = false;\n        /**\n         * 翻页时的动画时间\n         */\n        this.pageAnimateTime = 100;\n        /**\n         * 是否启用原生动画驱动\n         * Whether to use the native code to perform animations.\n         */\n        this.useNativeDriver = false;\n        /**\n         * 长按图片的回调\n         */\n        this.onLongPress = function () {\n            //\n        };\n        /**\n         * 单击回调\n         */\n        this.onClick = function () {\n            //\n        };\n        /**\n         * 双击回调\n         */\n        this.onDoubleClick = function () {\n            //\n        };\n        /**\n         * 图片保存到本地方法，如果写了这个方法，就不会调取系统默认方法\n         * 针对安卓不支持 saveToCameraRoll 远程图片，可以在安卓调用此回调，调用安卓原生接口\n         */\n        this.onSave = function () {\n            //\n        };\n        this.onMove = function () {\n            //\n        };\n        /**\n         * 自定义头部\n         */\n        this.renderHeader = function () {\n            return null;\n        };\n        /**\n         * 自定义尾部\n         */\n        this.renderFooter = function () {\n            return null;\n        };\n        /**\n         * 自定义计时器\n         */\n        this.renderIndicator = function (currentIndex, allSize) {\n            return React.createElement(react_native_1.View, { style: image_viewer_style_1.simpleStyle.count }, React.createElement(react_native_1.Text, { style: image_viewer_style_1.simpleStyle.countText }, currentIndex + '/' + allSize));\n        };\n        /**\n         * Render image component\n         */\n        this.renderImage = function (props) {\n            return React.createElement(react_native_1.Image, props);\n        };\n        /**\n         * 自定义左翻页按钮\n         */\n        this.renderArrowLeft = function () {\n            return null;\n        };\n        /**\n         * 自定义右翻页按钮\n         */\n        this.renderArrowRight = function () {\n            return null;\n        };\n        /**\n         * 弹出大图的回调\n         */\n        this.onShowModal = function () {\n            //\n        };\n        /**\n         * 取消看图的回调\n         */\n        this.onCancel = function () {\n            //\n        };\n        /**\n         * function that fires when user swipes down\n         */\n        this.onSwipeDown = function () {\n            //\n        };\n        /**\n         * 渲染loading元素\n         */\n        this.loadingRender = function () {\n            return null;\n        };\n        /**\n         * 保存到相册的回调\n         */\n        this.onSaveToCamera = function () {\n            //\n        };\n        /**\n         * 当图片切换时触发\n         */\n        this.onChange = function () {\n            //\n        };\n    }\n    return Props;\n}());\nexports.Props = Props;\nvar State = /** @class */ (function () {\n    function State() {\n        /**\n         * 是否显示\n         */\n        this.show = false;\n        /**\n         * 当前显示第几个\n         */\n        this.currentShowIndex = 0;\n        /**\n         * Used to detect if parent component applied new index prop\n         */\n        this.prevIndexProp = 0;\n        /**\n         * 图片拉取是否完毕了\n         */\n        this.imageLoaded = false;\n        /**\n         * 图片长宽列表\n         */\n        this.imageSizes = [];\n        /**\n         * 是否出现功能菜单\n         */\n        this.isShowMenu = false;\n    }\n    return State;\n}());\nexports.State = State;\n//# sourceMappingURL=image-viewer.type.js.map"]},"metadata":{},"sourceType":"script"}