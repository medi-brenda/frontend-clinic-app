{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"I:\\\\Workspace\\\\mediWS\\\\mccWS\\\\frontend-clinic-app\\\\src\\\\pages\\\\register\\\\serviceHour.tsx\";\n\nimport { observer } from 'mobx-react';\nimport { Container, Switch, Text, View } from 'native-base';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport TitleBar from \"../../components/titleBar\";\nimport { useStores } from \"../../stores\";\nimport * as _ from 'lodash';\nimport WorkingHourComponent from \"./workingHour\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { saveServiceHours } from \"../../actions/auth\";\nimport { useNavigation } from '@react-navigation/native';\nvar ServiceHour = observer(function () {\n  var stores = useStores();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(_.cloneDeep(stores.authStore.schedules)),\n      _useState2 = _slicedToArray(_useState, 1),\n      schedules = _useState2[0];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refresh = _useState4[0],\n      setRefresh = _useState4[1];\n\n  var onWorkingHourChange = function onWorkingHourChange() {\n    setRefresh(!refresh);\n  };\n\n  var onSave = function onSave() {\n    saveServiceHours({\n      stores: stores,\n      data: schedules,\n      navigation: navigation\n    });\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(TitleBar, {\n    title: t('Register.Title'),\n    onNext: onSave,\n    onNextTitle: t('Common.Save'),\n    noReturn: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(ScrollView, {\n    style: {\n      marginTop: 8,\n      paddingHorizontal: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, _.map(schedules, function (schedule, index) {\n    return React.createElement(View, {\n      key: \"schedules-\" + index,\n      style: styleSheet.scheduleContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, React.createElement(View, {\n      style: styleSheet.status,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styleSheet.index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    }, t(\"ServiceTimes.\" + index)), React.createElement(Switch, {\n      style: styleSheet.switch,\n      value: !schedule.closed,\n      onValueChange: function onValueChange() {\n        schedule.closed = !schedule.closed;\n        onWorkingHourChange();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }), React.createElement(Text, {\n      style: {\n        fontSize: 18\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }, schedule.closed ? t('Clinic.Closed') : t('Clinic.Open'))), schedule.closed ? React.createElement(View, {\n      style: {\n        marginTop: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }\n    }) : React.createElement(React.Fragment, null, React.createElement(View, {\n      style: {\n        flex: 1,\n        alignSelf: 'stretch',\n        flexDirection: 'row',\n        marginBottom: 2\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 2,\n        alignSelf: 'stretch',\n        flexDirection: 'column',\n        marginBottom: 2\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 49\n      }\n    }, _.map(schedule.workingHours, function (workingHour, index) {\n      return React.createElement(WorkingHourComponent, {\n        key: \"working-hour-\" + index,\n        value: workingHour,\n        index: Number(index),\n        onChange: function onChange(value) {\n          onWorkingHourChange();\n        },\n        onRemove: function onRemove() {\n          schedule.workingHours.splice(index, 1);\n          onWorkingHourChange();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 61\n        }\n      });\n    }))), React.createElement(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'row'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 45\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        marginTop: 10,\n        marginLeft: 5\n      },\n      onPress: function onPress(e) {\n        schedule.workingHours.push({\n          from: {\n            h: 10,\n            m: 0\n          },\n          to: {\n            h: 18,\n            m: 30\n          }\n        });\n        onWorkingHourChange();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 49\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 53\n      }\n    }, t('Clinic.AddServiceHour'))))));\n  }))));\n});\nvar styleSheet = StyleSheet.create({\n  scheduleContainer: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  status: {\n    flex: 1,\n    flexDirection: 'row',\n    marginTop: 20,\n    alignItems: 'center'\n  },\n  index: {\n    flex: 1,\n    fontSize: 18\n  },\n  switch: {\n    right: 60,\n    position: 'absolute'\n  }\n});\nexport default ServiceHour;","map":{"version":3,"names":["observer","Container","Switch","Text","View","React","useState","useTranslation","ScrollView","TouchableOpacity","TitleBar","useStores","_","WorkingHourComponent","saveServiceHours","useNavigation","ServiceHour","stores","t","navigation","cloneDeep","authStore","schedules","refresh","setRefresh","onWorkingHourChange","onSave","data","marginTop","paddingHorizontal","flex","map","schedule","index","styleSheet","scheduleContainer","status","switch","closed","fontSize","alignSelf","flexDirection","marginBottom","workingHours","workingHour","Number","value","splice","marginLeft","e","push","from","h","m","to","color","StyleSheet","create","alignItems","right","position"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/register/serviceHour.tsx"],"sourcesContent":["import { observer } from 'mobx-react';\r\nimport { Container, Item, Label, Switch, Text, View } from 'native-base';\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\r\nimport TitleBar from '../../components/titleBar';\r\nimport { useStores } from '../../stores';\r\nimport * as _ from 'lodash';\r\nimport WorkingHourComponent from './workingHour';\r\nimport { StyleSheet } from 'react-native';\r\nimport { saveServiceHours } from '../../actions/auth';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst ServiceHour = observer(() => {\r\n    const stores = useStores();\r\n    const { t } = useTranslation();\r\n    const navigation = useNavigation();\r\n\r\n\r\n    const [schedules] = useState(_.cloneDeep(stores.authStore.schedules));\r\n    const [refresh, setRefresh] = useState(false);\r\n\r\n    const onWorkingHourChange = () => {\r\n        setRefresh(!refresh);\r\n    }\r\n\r\n\r\n    const onSave = () => {\r\n        saveServiceHours({\r\n            stores,\r\n            data: schedules,\r\n            navigation\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <TitleBar\r\n                title={t('Register.Title')}\r\n                onNext={onSave}\r\n                onNextTitle={t('Common.Save')}\r\n                noReturn={true}\r\n            />\r\n            <ScrollView\r\n                style={{\r\n                    marginTop: 8,\r\n                    paddingHorizontal: 25,\r\n                }}\r\n            >\r\n                <View style={{ flex: 1 }}>\r\n                    {\r\n                        _.map(schedules, (schedule, index) => (\r\n                            <View key={`schedules-${index}`} style={styleSheet.scheduleContainer}>\r\n                                <View style={styleSheet.status}>\r\n                                    <Text style={styleSheet.index}>\r\n                                        {t(`ServiceTimes.${index}`)}\r\n                                    </Text>\r\n                                    <Switch\r\n                                        style={styleSheet.switch}\r\n                                        value={!schedule.closed}\r\n                                        onValueChange={() => {\r\n                                            schedule.closed = !schedule.closed;\r\n                                            onWorkingHourChange();\r\n                                        }}\r\n                                    />\r\n\r\n                                    <Text style={{ fontSize: 18 }}>\r\n                                        {schedule.closed ? t('Clinic.Closed') : t('Clinic.Open')}\r\n                                    </Text>\r\n                                </View>\r\n\r\n                                {schedule.closed ? (\r\n                                    <View style={{ marginTop: 15 }} />\r\n                                ) : (\r\n                                        <>\r\n                                            <View\r\n                                                style={{\r\n                                                    flex: 1,\r\n                                                    alignSelf: 'stretch',\r\n                                                    flexDirection: 'row',\r\n                                                    marginBottom: 2,\r\n                                                }}\r\n                                            >\r\n                                                <View\r\n                                                    style={{\r\n                                                        flex: 2,\r\n                                                        alignSelf: 'stretch',\r\n                                                        flexDirection: 'column',\r\n                                                        marginBottom: 2,\r\n                                                    }}\r\n                                                >\r\n                                                    {\r\n                                                        _.map(schedule.workingHours, (workingHour, index) => (\r\n                                                            <WorkingHourComponent\r\n                                                                key={`working-hour-${index}`}\r\n                                                                value={workingHour}\r\n                                                                index={Number(index)}\r\n                                                                onChange={(value) => {\r\n                                                                    onWorkingHourChange();\r\n                                                                }}\r\n                                                                onRemove={() => {\r\n                                                                    schedule.workingHours.splice(index, 1);\r\n                                                                    onWorkingHourChange();\r\n                                                                }}\r\n                                                            />\r\n                                                        ))\r\n                                                    }\r\n                                                </View>\r\n                                            </View>\r\n                                            <View\r\n                                                style={{\r\n                                                    flex: 1,\r\n                                                    flexDirection: 'row',\r\n                                                }}\r\n                                            >\r\n                                                <TouchableOpacity\r\n                                                    style={{\r\n                                                        marginTop: 10,\r\n                                                        marginLeft: 5,\r\n                                                    }}\r\n                                                    onPress={(e) => {\r\n                                                        schedule.workingHours.push({\r\n                                                            from: { h: 10, m: 0 },\r\n                                                            to: { h: 18, m: 30 }\r\n                                                        });\r\n                                                        onWorkingHourChange();\r\n                                                    }}\r\n                                                >\r\n                                                    <Text style={{ color: 'red' }}>\r\n                                                        {t('Clinic.AddServiceHour')}\r\n                                                    </Text>\r\n                                                </TouchableOpacity>\r\n                                            </View>\r\n                                        </>\r\n                                    )}\r\n                            </View>\r\n\r\n                        ))\r\n                    }\r\n                </View>\r\n            </ScrollView>\r\n        </Container>\r\n    )\r\n});\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    scheduleContainer: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n    },\r\n    status: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        marginTop: 20,\r\n        alignItems: 'center',\r\n    },\r\n    index: {\r\n        flex: 1,\r\n        fontSize: 18\r\n    },\r\n    switch: {\r\n        right: 60,\r\n        position: 'absolute',\r\n    }\r\n})\r\n\r\nexport default ServiceHour;"],"mappings":"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"},"metadata":{},"sourceType":"module"}