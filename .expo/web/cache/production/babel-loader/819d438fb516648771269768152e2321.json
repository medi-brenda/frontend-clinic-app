{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useState}from'react';import{useTranslation}from'react-i18next';import Modal from\"react-native-web/dist/exports/Modal\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Alert from\"react-native-web/dist/exports/Alert\";import Linking from\"react-native-web/dist/exports/Linking\";import Platform from\"react-native-web/dist/exports/Platform\";import{ScrollView}from'react-native-gesture-handler';import MCCButton from\"../../components/mccButton\";import{useStores}from\"../../stores\";import Swiper from'react-native-swiper';import*as _ from'lodash';import Spinner from'react-native-loading-spinner-overlay';import{restartApp,updateApp}from\"../../actions/app\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var dimension=Dimensions.get('window');var ReminderModal=function ReminderModal(_ref){var show=_ref.show,onDismiss=_ref.onDismiss;var stores=useStores();var _useTranslation=useTranslation(),i18n=_useTranslation.i18n,t=_useTranslation.t;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),index=_useState2[0],setIndex=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),spinner=_useState4[0],setSpinner=_useState4[1];var reminders=stores.appStore.reminders;var changeSlider=function changeSlider(index){setIndex(index);};var onUpdate=function _callee(){var errorMsg;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setSpinner(true);_context.next=3;return _regeneratorRuntime.awrap(updateApp({i18n:i18n}));case 3:errorMsg=_context.sent;if(errorMsg){Alert.alert(t('Common.Error'),errorMsg,[{text:t('Common.Confirm'),onPress:function onPress(){setSpinner(false);}}]);}else{Alert.alert(t('Common.Success'),t('App.SystemUpdateSuccess'),[{text:t('Common.Confirm'),onPress:function onPress(){setSpinner(false);restartApp();}}]);}case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);};var onInstall=function _callee2(){return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:Linking.openURL(Platform.OS==='android'?'market://details?id=com.mediconcen.clinic':'itms-apps://itunes.apple.com/us/app/apple-store/id1520154033?mt=8');case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);};return _jsxs(_Fragment,{children:[_jsx(Spinner,{visible:spinner,color:'red',size:'large',overlayColor:'rgba(0, 0, 0, 0.25)'}),_jsx(Modal,{animationType:\"fade\",transparent:true,visible:show,children:_jsx(View,{style:styleSheet.modalContainer,children:_jsxs(View,{style:styleSheet.modalContent,children:[_jsx(View,{style:styleSheet.swiperContainer,children:_jsx(Swiper,{loop:false,activeDotColor:\"#ffffff\",onIndexChanged:changeSlider,index:stores.authStore.selectedSlide,children:reminders.map(function(reminder){var _ref2;return _jsx(View,{style:styleSheet.modalContent,children:_jsxs(View,{style:styleSheet.padding,children:[_jsx(Text,{style:styleSheet.reminderTitle,children:i18n.language==='en'?reminder==null?void 0:reminder.titleEn:reminder==null?void 0:reminder.titleChi}),_jsx(ScrollView,{contentContainerStyle:styleSheet.reminderScollView,children:(_ref2=i18n.language==='en'?reminder==null?void 0:reminder.descriptionEn:reminder==null?void 0:reminder.descriptionChi)==null?void 0:_ref2.split('\\\\n').map(function(description,index){return _jsx(Text,{style:styleSheet.reminderContent,children:description},\"reminder-\"+(reminder==null?void 0:reminder.id)+\"-\"+index);})})]})});})})}),_jsxs(View,{style:styleSheet.actionsContainer,children:[_.get(reminders,\"[\"+index+\"].id\")==='updated'?_jsx(View,{style:styleSheet.action,children:_jsx(MCCButton,{text:t('Common.Upgrade'),onPress:function onPress(){onDismiss();setTimeout(onUpdate,300);}})}):undefined,_.get(reminders,\"[\"+index+\"].id\")==='install'?_jsx(View,{style:styleSheet.action,children:_jsx(MCCButton,{text:t('Common.Upgrade'),onPress:onInstall})}):undefined,_jsx(View,{style:styleSheet.action,children:_jsx(MCCButton,{text:t('Common.Confirm'),onPress:onDismiss})})]})]})})})]});};var styleSheet=StyleSheet.create({modalContainer:{flex:1,backgroundColor:'rgba(0, 0, 0, 0.7)',justifyContent:'center',alignItems:'center'},modalContent:{width:dimension.width*0.8,height:dimension.height*0.5,borderRadius:10,padding:0,overflow:'hidden',backgroundColor:'#FFF'},padding:{padding:20,flexDirection:'column'},swiperContainer:{flex:1},reminderTitle:{fontSize:18,textAlign:'center',marginBottom:15,backgroundColor:'#FFF'},reminderScollView:{justifyContent:'center',alignItems:'center'},reminderContent:{width:'100%',fontSize:14},actionsContainer:{flexDirection:'row',padding:10,paddingTop:0},action:{flex:1}});export default ReminderModal;","map":{"version":3,"names":["React","useState","useTranslation","ScrollView","MCCButton","useStores","Swiper","_","Spinner","restartApp","updateApp","dimension","Dimensions","get","ReminderModal","show","onDismiss","stores","i18n","t","index","setIndex","spinner","setSpinner","reminders","appStore","changeSlider","onUpdate","errorMsg","Alert","alert","text","onPress","onInstall","Linking","openURL","Platform","OS","styleSheet","modalContainer","modalContent","swiperContainer","authStore","selectedSlide","map","reminder","padding","reminderTitle","language","titleEn","titleChi","reminderScollView","descriptionEn","descriptionChi","split","description","reminderContent","id","actionsContainer","action","setTimeout","undefined","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","width","height","borderRadius","overflow","flexDirection","fontSize","textAlign","marginBottom","paddingTop"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/home/reminderModal.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Modal, StyleSheet, Text, View, Dimensions, Alert, Linking, Platform } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport MCCButton from '../../components/mccButton';\r\nimport { useStores } from '../../stores';\r\nimport Swiper from 'react-native-swiper';\r\nimport * as _ from 'lodash';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport { restartApp, updateApp } from '../../actions/app';\r\nconst dimension = Dimensions.get('window');\r\n\r\ntype ReminderModalType = {\r\n    show: boolean,\r\n    onDismiss: () => void\r\n}\r\n\r\nconst ReminderModal = ({ show, onDismiss }: ReminderModalType) => {\r\n    const stores = useStores();\r\n    const { i18n, t } = useTranslation();\r\n\r\n    const [index, setIndex] = useState(0);\r\n    const [spinner, setSpinner] = useState(false);\r\n\r\n    const { reminders } = stores.appStore;\r\n\r\n    const changeSlider = (index: number) => {\r\n        setIndex(index);\r\n    }\r\n\r\n    const onUpdate = async () => {\r\n        setSpinner(true);\r\n        const errorMsg = await updateApp({ i18n });\r\n        if (errorMsg) {\r\n            Alert.alert(\r\n                t('Common.Error'),\r\n                errorMsg,\r\n                [\r\n                    {\r\n                        text: t('Common.Confirm'),\r\n                        onPress: () => {\r\n                            setSpinner(false);\r\n                        }\r\n                    }\r\n                ]\r\n            )\r\n        }\r\n        else {\r\n            Alert.alert(\r\n                t('Common.Success'),\r\n                t('App.SystemUpdateSuccess'),\r\n                [\r\n                    {\r\n                        text: t('Common.Confirm'),\r\n                        onPress: () => {\r\n                            setSpinner(false);\r\n                            restartApp();\r\n                        }\r\n                    }\r\n                ]\r\n            )\r\n        }\r\n    }\r\n\r\n    const onInstall = async () => {\r\n        Linking.openURL(\r\n            Platform.OS === 'android' ?\r\n                'market://details?id=com.mediconcen.clinic' :\r\n                'itms-apps://itunes.apple.com/us/app/apple-store/id1520154033?mt=8'\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner\r\n                visible={spinner}\r\n                color={'red'}\r\n                size={'large'}\r\n                overlayColor={'rgba(0, 0, 0, 0.25)'}\r\n            />\r\n            <Modal\r\n                animationType='fade'\r\n                transparent={true}\r\n                visible={show}\r\n            >\r\n                <View style={styleSheet.modalContainer}>\r\n                    <View style={styleSheet.modalContent}>\r\n                        <View style={styleSheet.swiperContainer}>\r\n                            <Swiper\r\n                                loop={false}\r\n                                activeDotColor='#ffffff'\r\n                                onIndexChanged={changeSlider}\r\n                                index={stores.authStore.selectedSlide}\r\n                            >\r\n                                {\r\n                                    reminders.map(reminder => (\r\n\r\n                                        <View style={styleSheet.modalContent}>\r\n                                            <View style={styleSheet.padding}>\r\n                                                <Text style={styleSheet.reminderTitle}>\r\n                                                    {i18n.language === 'en' ? reminder?.titleEn : reminder?.titleChi}\r\n                                                </Text>\r\n\r\n                                                <ScrollView contentContainerStyle={styleSheet.reminderScollView}>\r\n                                                    {(i18n.language === 'en' ? reminder?.descriptionEn : reminder?.descriptionChi)\r\n                                                        ?.split('\\\\n').map((description: string, index: number) => {\r\n                                                            return (\r\n                                                                <Text\r\n                                                                    key={`reminder-${reminder?.id}-${index}`}\r\n                                                                    style={styleSheet.reminderContent}\r\n                                                                >\r\n                                                                    {description}\r\n                                                                </Text>\r\n                                                            );\r\n                                                        })}\r\n                                                </ScrollView>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    ))\r\n                                }\r\n                            </Swiper>\r\n                        </View>\r\n                        <View style={styleSheet.actionsContainer}>\r\n                            {\r\n                                _.get(reminders, `[${index}].id`) === 'updated' ? (\r\n                                    <View style={styleSheet.action}>\r\n                                        <MCCButton\r\n                                            text={t('Common.Upgrade')}\r\n                                            onPress={() => {\r\n                                                onDismiss();\r\n                                                setTimeout(onUpdate, 300);\r\n                                            }}\r\n                                        />\r\n                                    </View>\r\n                                ) : undefined\r\n                            }\r\n                            {\r\n                                _.get(reminders, `[${index}].id`) === 'install' ? (\r\n                                    <View style={styleSheet.action}>\r\n                                        <MCCButton\r\n                                            text={t('Common.Upgrade')}\r\n                                            onPress={onInstall}\r\n                                        />\r\n                                    </View>\r\n                                ) : undefined\r\n                            }\r\n                            <View style={styleSheet.action}>\r\n                                <MCCButton\r\n                                    text={t('Common.Confirm')}\r\n                                    onPress={onDismiss}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    modalContainer: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    modalContent: {\r\n        width: dimension.width * 0.8,\r\n        height: dimension.height * 0.5,\r\n        borderRadius: 10,\r\n        padding: 0,\r\n        overflow: 'hidden',\r\n        backgroundColor: '#FFF'\r\n    },\r\n    padding: {\r\n        padding: 20,\r\n        flexDirection: 'column'\r\n    },\r\n    swiperContainer: {\r\n        flex: 1\r\n    },\r\n    reminderTitle: {\r\n        fontSize: 18,\r\n        textAlign: 'center',\r\n        marginBottom: 15,\r\n        backgroundColor: '#FFF'\r\n    },\r\n    reminderScollView: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    reminderContent: {\r\n        width: '100%',\r\n        fontSize: 14,\r\n    },\r\n    actionsContainer: {\r\n        flexDirection: 'row',\r\n        padding: 10,\r\n        paddingTop: 0\r\n    },\r\n    action: {\r\n        flex: 1,\r\n    }\r\n});\r\n\r\nexport default ReminderModal;"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,eAA/B,C,kdAEA,OAASC,UAAT,KAA2B,8BAA3B,CACA,MAAOC,CAAAA,SAAP,kCACA,OAASC,SAAT,oBACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,QAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sCAApB,CACA,OAASC,UAAT,CAAqBC,SAArB,yB,6IACA,GAAMC,CAAAA,SAAS,CAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAlB,CAOA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA4C,IAAzCC,CAAAA,IAAyC,MAAzCA,IAAyC,CAAnCC,SAAmC,MAAnCA,SAAmC,CAC9D,GAAMC,CAAAA,MAAM,CAAGZ,SAAS,EAAxB,CACA,oBAAoBH,cAAc,EAAlC,CAAQgB,IAAR,iBAAQA,IAAR,CAAcC,CAAd,iBAAcA,CAAd,CAEA,cAA0BlB,QAAQ,CAAC,CAAD,CAAlC,wCAAOmB,KAAP,eAAcC,QAAd,eACA,eAA8BpB,QAAQ,CAAC,KAAD,CAAtC,yCAAOqB,OAAP,eAAgBC,UAAhB,eAEA,GAAQC,CAAAA,SAAR,CAAsBP,MAAM,CAACQ,QAA7B,CAAQD,SAAR,CAEA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACN,KAAD,CAAmB,CACpCC,QAAQ,CAACD,KAAD,CAAR,CACH,CAFD,CAIA,GAAMO,CAAAA,QAAQ,CAAG,iJACbJ,UAAU,CAAC,IAAD,CAAV,CADa,iDAEUb,SAAS,CAAC,CAAEQ,IAAI,CAAJA,IAAF,CAAD,CAFnB,SAEPU,QAFO,eAGb,GAAIA,QAAJ,CAAc,CACVC,KAAK,CAACC,KAAN,CACIX,CAAC,CAAC,cAAD,CADL,CAEIS,QAFJ,CAGI,CACI,CACIG,IAAI,CAAEZ,CAAC,CAAC,gBAAD,CADX,CAEIa,OAAO,CAAE,kBAAM,CACXT,UAAU,CAAC,KAAD,CAAV,CACH,CAJL,CADJ,CAHJ,EAYH,CAbD,IAcK,CACDM,KAAK,CAACC,KAAN,CACIX,CAAC,CAAC,gBAAD,CADL,CAEIA,CAAC,CAAC,yBAAD,CAFL,CAGI,CACI,CACIY,IAAI,CAAEZ,CAAC,CAAC,gBAAD,CADX,CAEIa,OAAO,CAAE,kBAAM,CACXT,UAAU,CAAC,KAAD,CAAV,CACAd,UAAU,GACb,CALL,CADJ,CAHJ,EAaH,CA/BY,qEAAjB,CAkCA,GAAMwB,CAAAA,SAAS,CAAG,yIACdC,OAAO,CAACC,OAAR,CACIC,QAAQ,CAACC,EAAT,GAAgB,SAAhB,CACI,2CADJ,CAEI,mEAHR,EADc,sEAAlB,CAQA,MACI,4BACI,KAAC,OAAD,EACI,OAAO,CAAEf,OADb,CAEI,KAAK,CAAE,KAFX,CAGI,IAAI,CAAE,OAHV,CAII,YAAY,CAAE,qBAJlB,EADJ,CAOI,KAAC,KAAD,EACI,aAAa,CAAC,MADlB,CAEI,WAAW,CAAE,IAFjB,CAGI,OAAO,CAAEP,IAHb,UAKI,KAAC,IAAD,EAAM,KAAK,CAAEuB,UAAU,CAACC,cAAxB,UACI,MAAC,IAAD,EAAM,KAAK,CAAED,UAAU,CAACE,YAAxB,WACI,KAAC,IAAD,EAAM,KAAK,CAAEF,UAAU,CAACG,eAAxB,UACI,KAAC,MAAD,EACI,IAAI,CAAE,KADV,CAEI,cAAc,CAAC,SAFnB,CAGI,cAAc,CAAEf,YAHpB,CAII,KAAK,CAAET,MAAM,CAACyB,SAAP,CAAiBC,aAJ5B,UAOQnB,SAAS,CAACoB,GAAV,CAAc,SAAAC,QAAQ,kBAElB,MAAC,IAAD,EAAM,KAAK,CAAEP,UAAU,CAACE,YAAxB,UACI,MAAC,IAAD,EAAM,KAAK,CAAEF,UAAU,CAACQ,OAAxB,WACI,KAAC,IAAD,EAAM,KAAK,CAAER,UAAU,CAACS,aAAxB,UACK7B,IAAI,CAAC8B,QAAL,GAAkB,IAAlB,CAAyBH,QAAzB,cAAyBA,QAAQ,CAAEI,OAAnC,CAA6CJ,QAA7C,cAA6CA,QAAQ,CAAEK,QAD5D,EADJ,CAKI,KAAC,UAAD,EAAY,qBAAqB,CAAEZ,UAAU,CAACa,iBAA9C,iBACMjC,IAAI,CAAC8B,QAAL,GAAkB,IAAlB,CAAyBH,QAAzB,cAAyBA,QAAQ,CAAEO,aAAnC,CAAmDP,QAAnD,cAAmDA,QAAQ,CAAEQ,cADnE,eACK,MACKC,KADL,CACW,KADX,EACkBV,GADlB,CACsB,SAACW,WAAD,CAAsBnC,KAAtB,CAAwC,CACvD,MACI,MAAC,IAAD,EAEI,KAAK,CAAEkB,UAAU,CAACkB,eAFtB,UAIKD,WAJL,eACqBV,QADrB,cACqBA,QAAQ,CAAEY,EAD/B,MACqCrC,KADrC,CADJ,CAQH,CAVJ,CADL,EALJ,GADJ,EAFkB,EAAtB,CAPR,EADJ,EADJ,CAqCI,MAAC,IAAD,EAAM,KAAK,CAAEkB,UAAU,CAACoB,gBAAxB,WAEQnD,CAAC,CAACM,GAAF,CAAMW,SAAN,KAAqBJ,KAArB,WAAsC,SAAtC,CACI,KAAC,IAAD,EAAM,KAAK,CAAEkB,UAAU,CAACqB,MAAxB,UACI,KAAC,SAAD,EACI,IAAI,CAAExC,CAAC,CAAC,gBAAD,CADX,CAEI,OAAO,CAAE,kBAAM,CACXH,SAAS,GACT4C,UAAU,CAACjC,QAAD,CAAW,GAAX,CAAV,CACH,CALL,EADJ,EADJ,CAUIkC,SAZZ,CAeQtD,CAAC,CAACM,GAAF,CAAMW,SAAN,KAAqBJ,KAArB,WAAsC,SAAtC,CACI,KAAC,IAAD,EAAM,KAAK,CAAEkB,UAAU,CAACqB,MAAxB,UACI,KAAC,SAAD,EACI,IAAI,CAAExC,CAAC,CAAC,gBAAD,CADX,CAEI,OAAO,CAAEc,SAFb,EADJ,EADJ,CAOI4B,SAtBZ,CAwBI,KAAC,IAAD,EAAM,KAAK,CAAEvB,UAAU,CAACqB,MAAxB,UACI,KAAC,SAAD,EACI,IAAI,CAAExC,CAAC,CAAC,gBAAD,CADX,CAEI,OAAO,CAAEH,SAFb,EADJ,EAxBJ,GArCJ,GADJ,EALJ,EAPJ,GADJ,CAuFH,CA9ID,CAgJA,GAAMsB,CAAAA,UAAU,CAAGwB,UAAU,CAACC,MAAX,CAAkB,CACjCxB,cAAc,CAAE,CACZyB,IAAI,CAAE,CADM,CAEZC,eAAe,CAAE,oBAFL,CAGZC,cAAc,CAAE,QAHJ,CAIZC,UAAU,CAAE,QAJA,CADiB,CAOjC3B,YAAY,CAAE,CACV4B,KAAK,CAAEzD,SAAS,CAACyD,KAAV,CAAkB,GADf,CAEVC,MAAM,CAAE1D,SAAS,CAAC0D,MAAV,CAAmB,GAFjB,CAGVC,YAAY,CAAE,EAHJ,CAIVxB,OAAO,CAAE,CAJC,CAKVyB,QAAQ,CAAE,QALA,CAMVN,eAAe,CAAE,MANP,CAPmB,CAejCnB,OAAO,CAAE,CACLA,OAAO,CAAE,EADJ,CAEL0B,aAAa,CAAE,QAFV,CAfwB,CAmBjC/B,eAAe,CAAE,CACbuB,IAAI,CAAE,CADO,CAnBgB,CAsBjCjB,aAAa,CAAE,CACX0B,QAAQ,CAAE,EADC,CAEXC,SAAS,CAAE,QAFA,CAGXC,YAAY,CAAE,EAHH,CAIXV,eAAe,CAAE,MAJN,CAtBkB,CA4BjCd,iBAAiB,CAAE,CACfe,cAAc,CAAE,QADD,CAEfC,UAAU,CAAE,QAFG,CA5Bc,CAgCjCX,eAAe,CAAE,CACbY,KAAK,CAAE,MADM,CAEbK,QAAQ,CAAE,EAFG,CAhCgB,CAoCjCf,gBAAgB,CAAE,CACdc,aAAa,CAAE,KADD,CAEd1B,OAAO,CAAE,EAFK,CAGd8B,UAAU,CAAE,CAHE,CApCe,CAyCjCjB,MAAM,CAAE,CACJK,IAAI,CAAE,CADF,CAzCyB,CAAlB,CAAnB,CA8CA,cAAelD,CAAAA,aAAf"},"metadata":{},"sourceType":"module"}