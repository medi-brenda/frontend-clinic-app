{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{createPermissionHook,Platform,UnavailabilityError}from'expo-modules-core';import NotificationPermissionsModule from\"./NotificationPermissionsModule\";export function getPermissionsAsync(){return _regeneratorRuntime.async(function getPermissionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(NotificationPermissionsModule.getPermissionsAsync){_context.next=2;break;}throw new UnavailabilityError('Notifications','getPermissionsAsync');case 2:_context.next=4;return _regeneratorRuntime.awrap(NotificationPermissionsModule.getPermissionsAsync());case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);}export function requestPermissionsAsync(permissions){var requestedPermissions,requestedPlatformPermissions;return _regeneratorRuntime.async(function requestPermissionsAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(NotificationPermissionsModule.requestPermissionsAsync){_context2.next=2;break;}throw new UnavailabilityError('Notifications','requestPermissionsAsync');case 2:requestedPermissions=permissions!=null?permissions:{ios:{allowAlert:true,allowBadge:true,allowSound:true}};requestedPlatformPermissions=requestedPermissions[Platform.OS];_context2.next=6;return _regeneratorRuntime.awrap(NotificationPermissionsModule.requestPermissionsAsync(requestedPlatformPermissions));case 6:return _context2.abrupt(\"return\",_context2.sent);case 7:case\"end\":return _context2.stop();}}},null,null,null,Promise);}export var usePermissions=createPermissionHook({requestMethod:requestPermissionsAsync,getMethod:getPermissionsAsync});","map":{"version":3,"sources":["../src/NotificationPermissions.ts"],"names":[],"mappings":"4DAAA,OAAS,oBAAT,CAA+B,QAA/B,CAAyC,mBAAzC,KAAoE,mBAApE,CAMA,MAAO,CAAA,6BAAP,uCAEA,MAAO,SAAe,CAAA,mBAAf,mIACA,6BAA6B,CAAC,mBAD9B,8BAEG,IAAI,CAAA,mBAAJ,CAAwB,eAAxB,CAAyC,qBAAzC,CAFH,yDAKQ,6BAA6B,CAAC,mBAA9B,EALR,6HAQP,MAAO,SAAe,CAAA,uBAAf,CAAuC,WAAvC,+LACA,6BAA6B,CAAC,uBAD9B,+BAEG,IAAI,CAAA,mBAAJ,CAAwB,eAAxB,CAAyC,yBAAzC,CAFH,QAKC,oBALD,CAKwB,WALxB,OAKwB,WALxB,CAKuC,CAC1C,GAAG,CAAE,CACH,UAAU,CAAE,IADT,CAEH,UAAU,CAAE,IAFT,CAGH,UAAU,CAAE,IAHT,CADqC,CALvC,CAYC,4BAZD,CAYgC,oBAAoB,CAAC,QAAQ,CAAC,EAAV,CAZpD,mDAaQ,6BAA6B,CAAC,uBAA9B,CAAsD,4BAAtD,CAbR,gIA0BP,MAAO,IAAM,CAAA,cAAc,CAAG,oBAAoB,CAGhD,CACA,aAAa,CAAE,uBADf,CAEA,SAAS,CAAE,mBAFX,CAHgD,CAA3C","sourcesContent":["import { createPermissionHook, Platform, UnavailabilityError } from 'expo-modules-core';\n\nimport {\n  NotificationPermissionsRequest,\n  NotificationPermissionsStatus,\n} from './NotificationPermissions.types';\nimport NotificationPermissionsModule from './NotificationPermissionsModule';\n\nexport async function getPermissionsAsync() {\n  if (!NotificationPermissionsModule.getPermissionsAsync) {\n    throw new UnavailabilityError('Notifications', 'getPermissionsAsync');\n  }\n\n  return await NotificationPermissionsModule.getPermissionsAsync();\n}\n\nexport async function requestPermissionsAsync(permissions?: NotificationPermissionsRequest) {\n  if (!NotificationPermissionsModule.requestPermissionsAsync) {\n    throw new UnavailabilityError('Notifications', 'requestPermissionsAsync');\n  }\n\n  const requestedPermissions = permissions ?? {\n    ios: {\n      allowAlert: true,\n      allowBadge: true,\n      allowSound: true,\n    },\n  };\n  const requestedPlatformPermissions = requestedPermissions[Platform.OS];\n  return await NotificationPermissionsModule.requestPermissionsAsync(requestedPlatformPermissions);\n}\n\n// @needsAudit\n/**\n * Check or request permissions to send and receive push notifications.\n * This uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = Notifications.usePermissions();\n * ```\n */\nexport const usePermissions = createPermissionHook<\n  NotificationPermissionsStatus,\n  NotificationPermissionsRequest\n>({\n  requestMethod: requestPermissionsAsync,\n  getMethod: getPermissionsAsync,\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}