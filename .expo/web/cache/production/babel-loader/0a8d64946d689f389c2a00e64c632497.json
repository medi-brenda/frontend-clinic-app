{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{useNavigation}from'@react-navigation/native';import{observer}from'mobx-react';import{Container,View}from'native-base';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{ScrollView}from'react-native-gesture-handler';import{initClinicProfile}from\"../../actions/app\";import ReadOnlyField from\"../../components/readOnlyField/infex\";import TitleBar from\"../../components/titleBar\";import{useStores}from\"../../stores\";import ErrorPage from\"../error\";import Loading from\"../loading\";import PhoneCall from\"../../components/phoneCall\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ClinicProfilePage=observer(function(){var _useTranslation=useTranslation(),i18n=_useTranslation.i18n,t=_useTranslation.t;var stores=useStores();var navigation=useNavigation();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var clinic=stores.dataStore.clinic;useEffect(function(){init();},[]);var init=function _callee(){var errorMsg;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.next=3;return _regeneratorRuntime.awrap(initClinicProfile({stores:stores,navigation:navigation,i18n:i18n}));case 3:errorMsg=_context.sent;setLoading(false);if(errorMsg){setError(errorMsg);}case 6:case\"end\":return _context.stop();}}},null,null,null,Promise);};var isEng=i18n.language==='en';return _jsxs(Container,{children:[_jsx(TitleBar,{title:t('Profile.ST0'),onBack:function onBack(){navigation.goBack();}}),_jsx(ScrollView,{children:loading?_jsx(Loading,{}):error?_jsx(ErrorPage,{title:error,onRetry:init}):_jsxs(View,{style:styleSheet.container,children:[_jsx(ReadOnlyField,{title:t('Profile.ST11'),value:clinic.clinicNameEn}),_jsx(ReadOnlyField,{title:t('Profile.ST12'),value:clinic.clinicNameChi}),_jsx(ReadOnlyField,{title:t('Profile.ST13'),value:clinic.addressEn}),_jsx(ReadOnlyField,{title:t('Profile.ST14'),value:clinic.addressChi}),_jsx(ReadOnlyField,{title:t('Profile.ST15'),value:isEng?clinic.districtNameEn:clinic.districtNameChi}),_jsx(ReadOnlyField,{title:t('Profile.ST16'),value:isEng?clinic.regionNameEn:clinic.regionNameChi}),_jsx(ReadOnlyField,{title:t('Profile.ST17'),value:clinic.phone}),_jsx(ReadOnlyField,{title:t('Profile.ST18'),value:clinic.phone2}),_jsx(ReadOnlyField,{title:t('Profile.ST19'),value:clinic.fax}),_jsx(ReadOnlyField,{title:t('Profile.ST20'),value:clinic.schedules,type:\"schedule\"})]})}),_jsx(PhoneCall,{})]});});var styleSheet=StyleSheet.create({container:{paddingLeft:20,paddingRight:20},divider:{backgroundColor:\"grey\"}});export default ClinicProfilePage;","map":{"version":3,"names":["useNavigation","observer","Container","View","React","useEffect","useState","useTranslation","ScrollView","initClinicProfile","ReadOnlyField","TitleBar","useStores","ErrorPage","Loading","PhoneCall","ClinicProfilePage","i18n","t","stores","navigation","loading","setLoading","error","setError","clinic","dataStore","init","errorMsg","isEng","language","goBack","styleSheet","container","clinicNameEn","clinicNameChi","addressEn","addressChi","districtNameEn","districtNameChi","regionNameEn","regionNameChi","phone","phone2","fax","schedules","StyleSheet","create","paddingLeft","paddingRight","divider","backgroundColor"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/clinicProfile/index.tsx"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport { observer } from 'mobx-react';\r\nimport { Container, View } from 'native-base';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { StyleSheet } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { initClinicProfile } from '../../actions/app';\r\nimport ReadOnlyField from '../../components/readOnlyField/infex';\r\nimport TitleBar from '../../components/titleBar';\r\nimport { useStores } from '../../stores';\r\nimport ErrorPage from '../error';\r\nimport Loading from '../loading';\r\nimport PhoneCall from \"../../components/phoneCall\";\r\n\r\nconst ClinicProfilePage = observer(() => {\r\n    const { i18n, t } = useTranslation();\r\n    const stores = useStores();\r\n    const navigation = useNavigation();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const { clinic } = stores.dataStore;\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const init = async () => {\r\n        setLoading(true);\r\n        const errorMsg = await initClinicProfile({ stores, navigation, i18n });\r\n        setLoading(false);\r\n        if (errorMsg) {\r\n            setError(errorMsg)\r\n        }\r\n    }\r\n\r\n    const isEng = i18n.language === 'en';\r\n\r\n    return (\r\n        <Container>\r\n            <TitleBar\r\n                title={t('Profile.ST0')}\r\n                onBack={() => { navigation.goBack(); }}\r\n            />\r\n            <ScrollView>\r\n                {\r\n                    loading ? <Loading /> :\r\n                        error ? <ErrorPage title={error} onRetry={init} /> :\r\n                            <View style={styleSheet.container}>\r\n                                <ReadOnlyField\r\n                                    title={t('Profile.ST11')}\r\n                                    value={clinic.clinicNameEn}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('Profile.ST12')}\r\n                                    value={clinic.clinicNameChi}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('Profile.ST13')}\r\n                                    value={clinic.addressEn}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('Profile.ST14')}\r\n                                    value={clinic.addressChi}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('Profile.ST15')}\r\n                                    value={isEng ? clinic.districtNameEn : clinic.districtNameChi}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('Profile.ST16')}\r\n                                    value={isEng ? clinic.regionNameEn : clinic.regionNameChi}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('Profile.ST17')}\r\n                                    value={clinic.phone}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('Profile.ST18')}\r\n                                    value={clinic.phone2}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('Profile.ST19')}\r\n                                    value={clinic.fax}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('Profile.ST20')}\r\n                                    value={clinic.schedules}\r\n                                    type='schedule'\r\n                                />\r\n                            </View>\r\n                }\r\n\r\n            </ScrollView>\r\n\r\n            <PhoneCall/>\r\n        </Container>\r\n    )\r\n});\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    container: {\r\n        paddingLeft: 20,\r\n        paddingRight: 20\r\n    },\r\n    divider: {\r\n        backgroundColor: \"grey\"\r\n    }\r\n});\r\n\r\nexport default ClinicProfilePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}