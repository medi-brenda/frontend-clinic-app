{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useNavigation}from'@react-navigation/native';import{observer}from'mobx-react';import{Button,Container,Text,View}from'native-base';import React,{useState}from'react';import{useTranslation}from'react-i18next';import Alert from\"react-native-web/dist/exports/Alert\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{KeyboardAwareScrollView}from'react-native-keyboard-aware-scroll-view';import{ScrollView}from'react-native-gesture-handler';import FlatListPicker from\"../../components/flatListPicker\";import InputField from\"../../components/inputField\";import InputImage from\"../../components/inputImage\";import InputPicker from\"../../components/inputPicker\";import TitleBar from\"../../components/titleBar\";import InsurerFlatList from\"../../components/insurerFlatList\";import{useStores}from\"../../stores\";import styles from\"../../styles\";import{validateName,validateGender,validateMedicalServices,validateAuthority,validateDocCert,validateConsulatation}from\"../../utils/validate\";import ScheduleComponent from\"./schedules\";import{saveDoctor,selectServiceHour}from\"../../actions/auth\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DoctorDetail=observer(function(){var stores=useStores();var _useTranslation=useTranslation(),i18n=_useTranslation.i18n,t=_useTranslation.t;var doctor=stores.authStore.doctor;var _stores$configStore=stores.configStore,specialities=_stores$configStore.specialities,authorities=_stores$configStore.authorities;var _useState=useState(doctor),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),refresh=_useState4[0],setRefresh=_useState4[1];var navigation=useNavigation();var label=i18n.language==='en'?'nameEn':'nameChi';var onChange=function onChange(id,value){values[id]=value;setValues(values);setRefresh(!refresh);};var setServiceHours=function setServiceHours(){selectServiceHour({type:'doctor',stores:stores,navigation:navigation});};var onSave=function onSave(){var result=saveDoctor({stores:stores,data:values,navigation:navigation});if(!result){Alert.alert(t('Common.Error'),t('Register.InvalidInputs'));}};return _jsxs(Container,{style:styleSheet.container,children:[_jsx(TitleBar,{title:t('Register.Title'),onBack:navigation.goBack}),_jsx(View,{style:styleSheet.context,children:_jsx(KeyboardAwareScrollView,{contentContainerStyle:{flex:1,width:\"100%\",flexDirection:'column'},extraScrollHeight:0,enableOnAndroid:false,children:_jsxs(ScrollView,{style:{flex:1,paddingHorizontal:25},children:[_jsxs(Text,{style:styles.reg_topic_text,children:[\"3/4 \",t('Register.StepThreeTopic')]}),_jsx(InputField,{id:'nameEn',title:t('Register.DoctorNameEn'),validate:validateName,warning:t('Register.doctorNameNotValid'),icon:\"md-person\",values:values,onChange:onChange}),_jsx(InputField,{id:'nameChi',title:t('Register.DoctorNameCn'),validate:validateName,warning:t('Register.doctorNameNotValid'),icon:\"md-person\",values:values,onChange:onChange}),_jsx(InputPicker,{id:'gender',title:t('Register.Gender'),placeholder:t('Register.Gender'),defaultTitle:t('Register.genderHint'),warning:t('Register.genderHint'),options:[{code:'M',nameChi:t('Register.Male'),nameEn:t('Register.Male')},{code:'F',nameChi:t('Register.Female'),nameEn:t('Register.Female')}],validate:validateGender,values:values,onChange:onChange}),_jsx(FlatListPicker,{id:'medicalServices',values:values,title:t('Register.MedicalServices'),warning:t('Register.SelectMedicalService'),options:specialities,validate:validateMedicalServices,onChange:onChange}),_jsx(InputPicker,{id:'authority',title:t('Register.RegistrationAuthority'),placeholder:t('Register.AuthorityHint'),defaultTitle:t('Register.AuthorityHint'),warning:t('Register.AuthorityHint'),options:authorities,validate:validateAuthority,values:values,onChange:onChange}),_jsx(InputImage,{id:'docCert',title:t('Register.PracticingCertificate'),warning:t('Register.DoctorCertMissing'),values:values,validate:validateDocCert,onChange:onChange}),_jsx(InsurerFlatList,{id:'consultations',values:values,validate:validateConsulatation,onChange:onChange}),_jsx(ScheduleComponent,{values:doctor.schedules,onUpdate:setServiceHours}),_jsx(Button,{rounded:true,block:true,style:styles.button_auth,onPress:onSave,children:_jsx(Text,{children:t('Register.SaveCurrentDoctor')})})]})})})]});});var styleSheet=StyleSheet.create({container:{backgroundColor:'#fff'},context:{flex:1},keyboard:{flex:1,flexDirection:'column',justifyContent:'center'},scrollView:{flex:1,paddingHorizontal:25}});export default DoctorDetail;","map":{"version":3,"names":["useNavigation","observer","Button","Container","Text","View","React","useState","useTranslation","KeyboardAwareScrollView","ScrollView","FlatListPicker","InputField","InputImage","InputPicker","TitleBar","InsurerFlatList","useStores","styles","validateName","validateGender","validateMedicalServices","validateAuthority","validateDocCert","validateConsulatation","ScheduleComponent","saveDoctor","selectServiceHour","DoctorDetail","stores","i18n","t","doctor","authStore","configStore","specialities","authorities","values","setValues","refresh","setRefresh","navigation","label","language","onChange","id","value","setServiceHours","type","onSave","result","data","Alert","alert","styleSheet","container","goBack","context","flex","width","flexDirection","paddingHorizontal","reg_topic_text","code","nameChi","nameEn","schedules","button_auth","StyleSheet","create","backgroundColor","keyboard","justifyContent","scrollView"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/register/doctorDetail.tsx"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Container, Text, View } from 'native-base';\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Alert, Platform, StyleSheet } from 'react-native';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport FlatListPicker from '../../components/flatListPicker';\r\nimport InputField from '../../components/inputField';\r\nimport InputImage from '../../components/inputImage';\r\nimport InputPicker from '../../components/inputPicker';\r\nimport TitleBar from '../../components/titleBar';\r\nimport InsurerFlatList from '../../components/insurerFlatList';\r\nimport { useStores } from '../../stores';\r\nimport styles from '../../styles';\r\nimport { validateName, validateGender, validateMedicalServices, validateAuthority, validateDocCert, validateConsulatation } from '../../utils/validate';\r\nimport ScheduleComponent from './schedules';\r\nimport { saveDoctor, selectServiceHour } from '../../actions/auth';\r\n\r\nconst DoctorDetail = observer(() => {\r\n    const stores = useStores();\r\n    const { i18n, t } = useTranslation();\r\n    const { doctor } = stores.authStore;\r\n    const { specialities, authorities } = stores.configStore;\r\n    const [values, setValues] = useState<any>(doctor);\r\n    const [refresh, setRefresh] = useState(false);\r\n    const navigation = useNavigation();\r\n\r\n    const label = i18n.language === 'en' ? 'nameEn' : 'nameChi';\r\n\r\n    const onChange = (id: string, value: any) => {\r\n        values[id] = value;\r\n        setValues(values);\r\n        setRefresh(!refresh);\r\n    }\r\n\r\n    const setServiceHours = () => {\r\n        selectServiceHour({\r\n            type: 'doctor',\r\n            stores,\r\n            navigation\r\n        });\r\n    };\r\n\r\n    const onSave = () => {\r\n        const result = saveDoctor({\r\n            stores, \r\n            data: values,\r\n            navigation\r\n        });\r\n\r\n        if (!result) {\r\n            Alert.alert(t('Common.Error'), t('Register.InvalidInputs'));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container style={styleSheet.container}>\r\n            <TitleBar\r\n                title={t('Register.Title')}\r\n                onBack={navigation.goBack}\r\n            />\r\n            <View style={styleSheet.context}>\r\n                <KeyboardAwareScrollView contentContainerStyle={{flex: 1, width: \"100%\", flexDirection: 'column'}} extraScrollHeight={0} enableOnAndroid={false} > \r\n                    <ScrollView style={{ flex: 1, paddingHorizontal: 25 }}>\r\n                        <Text style={styles.reg_topic_text}>\r\n                            3/4 {t('Register.StepThreeTopic')}\r\n                        </Text>\r\n                        <InputField\r\n                            id={'nameEn'}\r\n                            title={t('Register.DoctorNameEn')}\r\n                            validate={validateName}\r\n                            warning={t('Register.doctorNameNotValid')}\r\n                            icon='md-person'\r\n                            values={values}\r\n                            onChange={onChange}\r\n                        />\r\n\r\n                        <InputField\r\n                            id={'nameChi'}\r\n                            title={t('Register.DoctorNameCn')}\r\n                            validate={validateName}\r\n                            warning={t('Register.doctorNameNotValid')}\r\n                            icon='md-person'\r\n                            values={values}\r\n                            onChange={onChange}\r\n                        />\r\n\r\n                        <InputPicker\r\n                            id={'gender'}\r\n                            title={t('Register.Gender')}\r\n                            placeholder={t('Register.Gender')}\r\n                            defaultTitle={t('Register.genderHint')}\r\n                            warning={t('Register.genderHint')}\r\n                            options={[\r\n                                {\r\n                                    code: 'M',\r\n                                    nameChi: t('Register.Male'),\r\n                                    nameEn: t('Register.Male'),\r\n                                },\r\n                                {\r\n                                    code: 'F',\r\n                                    nameChi: t('Register.Female'),\r\n                                    nameEn: t('Register.Female'),\r\n                                }\r\n                            ]}\r\n                            validate={validateGender}\r\n                            values={values}\r\n                            onChange={onChange}\r\n                        />\r\n\r\n                        <FlatListPicker\r\n                            id={'medicalServices'}\r\n                            values={values}\r\n                            title={t('Register.MedicalServices')}\r\n                            warning={t('Register.SelectMedicalService')}\r\n                            options={specialities}\r\n                            validate={validateMedicalServices}\r\n                            onChange={onChange}\r\n                        />\r\n\r\n                        <InputPicker\r\n                            id={'authority'}\r\n                            title={t('Register.RegistrationAuthority')}\r\n                            placeholder={t('Register.AuthorityHint')}\r\n                            defaultTitle={t('Register.AuthorityHint')}\r\n                            warning={t('Register.AuthorityHint')}\r\n                            options={authorities}\r\n                            validate={validateAuthority}\r\n                            values={values}\r\n                            onChange={onChange}\r\n                        />\r\n\r\n                        <InputImage\r\n                            id={'docCert'}\r\n                            title={t('Register.PracticingCertificate')}\r\n                            warning={t('Register.DoctorCertMissing')}\r\n                            values={values}\r\n                            validate={validateDocCert}\r\n                            onChange={onChange}\r\n                        />\r\n\r\n                        <InsurerFlatList\r\n                            id={'consultations'}\r\n                            values={values}\r\n                            validate={validateConsulatation}\r\n                            onChange={onChange}\r\n                        />\r\n                        <ScheduleComponent\r\n                            values={doctor.schedules}\r\n                            onUpdate={setServiceHours}\r\n                        />\r\n                        <Button\r\n                            rounded\r\n                            block\r\n                            style={styles.button_auth}\r\n                            onPress={onSave}\r\n                        >\r\n                            <Text>{t('Register.SaveCurrentDoctor')}</Text>\r\n                        </Button>\r\n                    </ScrollView>\r\n                </KeyboardAwareScrollView> \r\n            </View>\r\n        </Container>\r\n    )\r\n})\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#fff'\r\n    },\r\n    context: {\r\n        flex: 1\r\n    },\r\n    keyboard: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    },\r\n    scrollView: {\r\n        flex: 1,\r\n        paddingHorizontal: 25\r\n    }\r\n})\r\n\r\nexport default DoctorDetail;"],"mappings":"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"},"metadata":{},"sourceType":"module"}