{"ast":null,"code":"import*as _ from'lodash';export function newTransaction(transaction){return _.assign({doctorId:'',benefitCode:'',benefitName:'',copayment:'',insurerName:'',member:'',referenceLetter:'',token:'',payToken:'',diagnosis:[],extraMed:[],policyNumber:'',signature:'',insurerId:'',notice:'',patientId:'',patientName:'',cardType:'',copaymentFee:0,extraMedFee:0,extraMedFromNetwork:0,feeSum:0,voucher:'',doctorFee:0,transactionTime:'',serviceTypeEn:'',serviceTypeChi:'',memberKey:'',insurerDescription:{en:'',chi:''}},transaction);}","map":{"version":3,"names":["_","newTransaction","transaction","assign","doctorId","benefitCode","benefitName","copayment","insurerName","member","referenceLetter","token","payToken","diagnosis","extraMed","policyNumber","signature","insurerId","notice","patientId","patientName","cardType","copaymentFee","extraMedFee","extraMedFromNetwork","feeSum","voucher","doctorFee","transactionTime","serviceTypeEn","serviceTypeChi","memberKey","insurerDescription","en","chi"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/models/transaction.ts"],"sourcesContent":["import * as _ from 'lodash';\r\nimport { Diagnosis } from './diagnosis';\r\nimport { ExtraMed } from './extraMed';\r\nimport { InsurerDescription } from './InsurerDescription';\r\n\r\nexport type Transaction = {\r\n    doctorId: string,\r\n    benefitCode: string,\r\n    benefitName?: string,\r\n    copayment: string,\r\n    extraMedLimit?: number,\r\n    insurerName: string,\r\n    member: string,\r\n    referenceLetter: string,\r\n    token: string,\r\n    payToken?: string, // policy number for physical card\r\n    diagnosis: Diagnosis[]\r\n    extraMed: ExtraMed[],\r\n    policyNumber?: string,\r\n    signature?: string,\r\n    insurerId?: string,\r\n    notice?: string,\r\n    patientId?: string,\r\n    patientName?: string,\r\n    refLetter?: string,\r\n    cardType?: string,\r\n    copaymentFee?: number,\r\n    extraMedFee?: number,\r\n    extraMedFromNetwork?: number,\r\n    feeSum?: number,\r\n    voucher?: string,\r\n    doctorFee?: number,\r\n    transactionTime?: string,\r\n    serviceTypeEn?: string,\r\n    serviceTypeChi?: string,\r\n    memberKey?: string,\r\n    insurerDescription?: InsurerDescription\r\n}\r\n\r\nexport function newTransaction(transaction?: Partial<Transaction>): Transaction {\r\n    return _.assign({\r\n        doctorId: '',\r\n        benefitCode: '',\r\n        benefitName: '',\r\n        copayment: '',\r\n        insurerName: '',\r\n        member: '',\r\n        referenceLetter: '',\r\n        token: '',\r\n        payToken: '',\r\n        diagnosis: [],\r\n        extraMed: [],\r\n        policyNumber: '',\r\n        signature: '',\r\n        insurerId: '',        \r\n        notice: '',\r\n        patientId: '',\r\n        patientName: '',\r\n        cardType: '',\r\n        copaymentFee: 0,\r\n        extraMedFee: 0,\r\n        extraMedFromNetwork: 0,\r\n        feeSum: 0,\r\n        voucher: '',\r\n        doctorFee: 0,\r\n        transactionTime: '',\r\n        serviceTypeEn: '',\r\n        serviceTypeChi: '',\r\n        memberKey: '',\r\n        insurerDescription:{\r\n            en:'',\r\n            chi:''\r\n        }\r\n    }, transaction);\r\n}\r\n"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,CAAZ,KAAmB,QAAnB,CAuCA,MAAO,SAASC,CAAAA,cAAT,CAAwBC,WAAxB,CAAyE,CAC5E,MAAOF,CAAAA,CAAC,CAACG,MAAF,CAAS,CACZC,QAAQ,CAAE,EADE,CAEZC,WAAW,CAAE,EAFD,CAGZC,WAAW,CAAE,EAHD,CAIZC,SAAS,CAAE,EAJC,CAKZC,WAAW,CAAE,EALD,CAMZC,MAAM,CAAE,EANI,CAOZC,eAAe,CAAE,EAPL,CAQZC,KAAK,CAAE,EARK,CASZC,QAAQ,CAAE,EATE,CAUZC,SAAS,CAAE,EAVC,CAWZC,QAAQ,CAAE,EAXE,CAYZC,YAAY,CAAE,EAZF,CAaZC,SAAS,CAAE,EAbC,CAcZC,SAAS,CAAE,EAdC,CAeZC,MAAM,CAAE,EAfI,CAgBZC,SAAS,CAAE,EAhBC,CAiBZC,WAAW,CAAE,EAjBD,CAkBZC,QAAQ,CAAE,EAlBE,CAmBZC,YAAY,CAAE,CAnBF,CAoBZC,WAAW,CAAE,CApBD,CAqBZC,mBAAmB,CAAE,CArBT,CAsBZC,MAAM,CAAE,CAtBI,CAuBZC,OAAO,CAAE,EAvBG,CAwBZC,SAAS,CAAE,CAxBC,CAyBZC,eAAe,CAAE,EAzBL,CA0BZC,aAAa,CAAE,EA1BH,CA2BZC,cAAc,CAAE,EA3BJ,CA4BZC,SAAS,CAAE,EA5BC,CA6BZC,kBAAkB,CAAC,CACfC,EAAE,CAAC,EADY,CAEfC,GAAG,CAAC,EAFW,CA7BP,CAAT,CAiCJhC,WAjCI,CAAP,CAkCH"},"metadata":{},"sourceType":"module"}