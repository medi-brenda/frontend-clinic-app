{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{UnavailabilityError}from'expo-modules-core';import NotificationCategoriesModule from\"./NotificationCategoriesModule.native\";export default function setNotificationCategoryAsync(identifier,actions,options){return _regeneratorRuntime.async(function setNotificationCategoryAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(NotificationCategoriesModule.setNotificationCategoryAsync){_context.next=2;break;}throw new UnavailabilityError('Notifications','setNotificationCategoryAsync');case 2:_context.next=4;return _regeneratorRuntime.awrap(NotificationCategoriesModule.setNotificationCategoryAsync(identifier,actions,options));case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);}","map":{"version":3,"sources":["../src/setNotificationCategoryAsync.ts"],"names":[],"mappings":"4DAAA,OAAS,mBAAT,KAAoC,mBAApC,CAEA,MAAO,CAAA,4BAAP,6CAGA,cAAe,SAAe,CAAA,4BAAf,CACb,UADa,CAEb,OAFa,CAGb,OAHa,2IAcR,4BAA4B,CAAC,4BAdrB,8BAeL,IAAI,CAAA,mBAAJ,CAAwB,eAAxB,CAAyC,8BAAzC,CAfK,yDAkBA,4BAA4B,CAAC,4BAA7B,CACX,UADW,CAEX,OAFW,CAGX,OAHW,CAlBA","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationCategoriesModule from './NotificationCategoriesModule.native';\nimport { NotificationCategory, NotificationAction } from './Notifications.types';\n\nexport default async function setNotificationCategoryAsync(\n  identifier: string,\n  actions: NotificationAction[],\n  options?: {\n    previewPlaceholder?: string;\n    intentIdentifiers?: string[];\n    categorySummaryFormat?: string;\n    customDismissAction?: boolean;\n    allowInCarPlay?: boolean;\n    showTitle?: boolean;\n    showSubtitle?: boolean;\n    allowAnnouncement?: boolean;\n  }\n): Promise<NotificationCategory> {\n  if (!NotificationCategoriesModule.setNotificationCategoryAsync) {\n    throw new UnavailabilityError('Notifications', 'setNotificationCategoryAsync');\n  }\n\n  return await NotificationCategoriesModule.setNotificationCategoryAsync(\n    identifier,\n    actions,\n    options\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}