{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import Bugsnag from'@bugsnag/expo';import AsyncStorage from'@react-native-async-storage/async-storage';import Axios from'axios';import*as _ from'lodash';import Config from\"../utils/config\";var TIMEOUT=25000;var instance=Axios.create({baseURL:Config.nodeUrl,timeout:TIMEOUT});var phpInstance=Axios.create({baseURL:Config.phpUrl,timeout:TIMEOUT});var postRequest=function _callee(_ref){var url,data,token,isPublic,_ref$method,method,_await$instance$catch,resp;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=_ref.url,data=_ref.data,token=_ref.token,isPublic=_ref.isPublic,_ref$method=_ref.method,method=_ref$method===void 0?'post':_ref$method;_context.next=3;return _regeneratorRuntime.awrap(instance({url:url,method:method,data:isPublic?data:{data:data,token:token}}).catch(function(error){console.error('error calling api ',error);Bugsnag.notify(error,function(event){event.addMetadata('info',{token:token,url:\"\"+Config.nodeUrl+url,data:data});});throw error;}));case 3:_await$instance$catch=_context.sent;resp=_await$instance$catch.data;return _context.abrupt(\"return\",resp);case 6:case\"end\":return _context.stop();}}},null,null,null,Promise);};var getRequest=function _callee2(_ref2){var url,data,token,isPublic,_ref2$method,method,_ref2$queryString,queryString,_await$instance$catch2,resp;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:url=_ref2.url,data=_ref2.data,token=_ref2.token,isPublic=_ref2.isPublic,_ref2$method=_ref2.method,method=_ref2$method===void 0?'get':_ref2$method,_ref2$queryString=_ref2.queryString,queryString=_ref2$queryString===void 0?'':_ref2$queryString;_context2.next=3;return _regeneratorRuntime.awrap(instance({baseURL:\"\"+Config.nodeUrl,url:url+queryString,method:method,headers:{'Authorization':token}}).catch(function(error){Bugsnag.notify(error,function(event){event.addMetadata('info',{token:token,url:\"\"+Config.nodeUrl+url,data:data});});throw error;}));case 3:_await$instance$catch2=_context2.sent;resp=_await$instance$catch2.data;return _context2.abrupt(\"return\",resp);case 6:case\"end\":return _context2.stop();}}},null,null,null,Promise);};export var request=function _callee3(_ref3){var url,data,token,i18n,isPublic,_ref3$method,method,_ref3$queryString,queryString,resp,message;return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:url=_ref3.url,data=_ref3.data,token=_ref3.token,i18n=_ref3.i18n,isPublic=_ref3.isPublic,_ref3$method=_ref3.method,method=_ref3$method===void 0?'post':_ref3$method,_ref3$queryString=_ref3.queryString,queryString=_ref3$queryString===void 0?'':_ref3$queryString;resp=null;_context3.t0=method;_context3.next=_context3.t0==='post'?5:_context3.t0==='get'?9:13;break;case 5:_context3.next=7;return _regeneratorRuntime.awrap(postRequest({url:url,data:data,token:token,isPublic:isPublic,method:'post'}));case 7:resp=_context3.sent;return _context3.abrupt(\"break\",14);case 9:_context3.next=11;return _regeneratorRuntime.awrap(getRequest({url:url,data:data,token:token,isPublic:isPublic,method:'get',queryString:queryString}));case 11:resp=_context3.sent;return _context3.abrupt(\"break\",14);case 13:return _context3.abrupt(\"break\",14);case 14:if(!(!resp||resp.errCode!=='E-00000')){_context3.next=17;break;}message=_.get(resp,i18n.language==='en'?'msg_en':'msg_chi',i18n.t('Common.UnknownSystemError'));throw new Error(message+\"\\n\"+i18n.t('Error.MediconcenCode')+\": \"+_.get(resp,'errCode','N\\\\A')+\"\\n\"+i18n.t('Error.InsurerCode')+\": \"+_.get(resp,'responseCode','N\\\\A'));case 17:return _context3.abrupt(\"return\",resp.msg_remark);case 18:case\"end\":return _context3.stop();}}},null,null,null,Promise);};export var requestPhp=function _callee4(_ref4){var url,data,resp;return _regeneratorRuntime.async(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:url=_ref4.url,data=_ref4.data;_context4.next=3;return _regeneratorRuntime.awrap(phpInstance.post(url,JSON.stringify(data)).catch(function(error){Bugsnag.notify(error,function(event){event.addMetadata('info',{url:\"\"+Config.phpUrl+url,data:data});});throw error;}));case 3:resp=_context4.sent;if(!(!resp.data||resp.data.result!=='0000')){_context4.next=12;break;}if(!(resp.data&&url==='api/authenticateToken.php')){_context4.next=9;break;}return _context4.abrupt(\"return\",resp.data);case 9:if(!(resp.data&&url==='api/authenticate.php')){_context4.next=11;break;}throw new Error(resp.data.result);case 11:throw new Error('Common.UnknownSystemError');case 12:return _context4.abrupt(\"return\",resp.data);case 13:case\"end\":return _context4.stop();}}},null,null,null,Promise);};export var getAuthData=function _callee5(){var token,emptyResult,response;return _regeneratorRuntime.async(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));case 2:token=_context5.sent;emptyResult={token:'',clinicId:''};if(token){_context5.next=6;break;}return _context5.abrupt(\"return\",emptyResult);case 6:_context5.next=8;return _regeneratorRuntime.awrap(requestPhp({url:'api/authenticateToken.php',data:{token:token}}));case 8:response=_context5.sent;if(!(response.result!=='0000')){_context5.next=15;break;}_context5.next=12;return _regeneratorRuntime.awrap(AsyncStorage.removeItem('token'));case 12:_context5.next=14;return _regeneratorRuntime.awrap(AsyncStorage.removeItem('clinic_id'));case 14:return _context5.abrupt(\"return\",emptyResult);case 15:return _context5.abrupt(\"return\",{token:response.token,clinicId:response.clinic_id});case 16:case\"end\":return _context5.stop();}}},null,null,null,Promise);};","map":{"version":3,"names":["Bugsnag","AsyncStorage","Axios","_","Config","TIMEOUT","instance","create","baseURL","nodeUrl","timeout","phpInstance","phpUrl","postRequest","url","data","token","isPublic","method","catch","error","console","notify","event","addMetadata","resp","getRequest","queryString","headers","request","i18n","errCode","message","get","language","t","Error","msg_remark","requestPhp","post","JSON","stringify","result","getAuthData","getItem","emptyResult","clinicId","response","removeItem","clinic_id"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/utils/request.ts"],"sourcesContent":["import Bugsnag from '@bugsnag/expo';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'; \r\nimport Axios from 'axios';\r\nimport { i18n } from 'i18next';\r\nimport * as _ from 'lodash';\r\nimport Config from '../utils/config';\r\nconst TIMEOUT = 25000\r\n\r\nconst instance = Axios.create({\r\n    baseURL: Config.nodeUrl,\r\n    timeout: TIMEOUT\r\n});\r\n\r\nconst phpInstance = Axios.create({\r\n    baseURL: Config.phpUrl,\r\n    timeout: TIMEOUT\r\n});\r\n\r\ntype Request = {\r\n    url: string,\r\n    data?: any,\r\n    token?: string,\r\n    i18n: i18n,\r\n    method?: any,\r\n    isPublic?: boolean, // for some api without token,\r\n    queryString?: string,\r\n}\r\n\r\ntype PostRequest = {\r\n    url: string,\r\n    data?: any,\r\n    token?: string,\r\n    method?: any,\r\n    isPublic?: boolean, // for some api without token,\r\n}\r\n\r\ntype GetRequest = {\r\n    url: string,\r\n    data?: any,\r\n    token?: string,\r\n    method?: any,\r\n    isPublic?: boolean, // for some api without token,\r\n    queryString?: string,\r\n}\r\n\r\ntype RequestPhp = {\r\n    url: string,\r\n    data?: any\r\n}\r\n\r\ntype AuthData = {\r\n    token: string;\r\n    clinicId: string;\r\n}\r\n\r\nconst postRequest = async ({ url, data, token, isPublic, method = 'post' }: PostRequest) => {\r\n    const { data: resp } = await instance({\r\n        url: url,\r\n        method: method,\r\n        data: isPublic ? data : {\r\n            data,\r\n            token\r\n        }\r\n    }).catch(error => {\r\n        console.error('error calling api ',error);\r\n        Bugsnag.notify(error, (event) => {\r\n            event.addMetadata('info', {\r\n                token,\r\n                url: `${Config.nodeUrl}${url}`,\r\n                data\r\n            });\r\n        });\r\n        throw error;\r\n    });\r\n    return resp;\r\n}\r\n\r\nconst getRequest = async ({ url, data, token, isPublic, method = 'get', queryString = '' }: GetRequest) => {\r\n    const { data: resp } = await instance({\r\n        baseURL: `${Config.nodeUrl}`,\r\n        url: url+queryString,\r\n        method: method,\r\n        headers: {'Authorization': token},\r\n    }).catch(error => {\r\n        Bugsnag.notify(error, (event) => {\r\n            event.addMetadata('info', {\r\n                token,\r\n                url: `${Config.nodeUrl}${url}`,\r\n                data\r\n            });\r\n        });\r\n        throw error;\r\n    });\r\n    return resp;\r\n}\r\n\r\nexport const request = async ({ url, data, token, i18n, isPublic, method = 'post', queryString = '' }: Request) => {    \r\n    let resp = null;\r\n\r\n    switch (method)\r\n    {\r\n         case 'post':\r\n            resp = await postRequest({ url, data, token, isPublic, method: 'post'});\r\n            break;\r\n        case 'get':\r\n            resp = await getRequest({ url, data, token, isPublic, method: 'get', queryString});\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    if (!resp || resp.errCode !== 'E-00000') {\r\n        const message = _.get(\r\n            resp,\r\n            i18n.language === 'en' ? 'msg_en' : 'msg_chi',\r\n            i18n.t('Common.UnknownSystemError')\r\n        );\r\n        throw new Error(`${message}\\n${i18n.t('Error.MediconcenCode')}: ${_.get(resp, 'errCode', 'N\\\\A')}\\n${i18n.t('Error.InsurerCode')}: ${_.get(resp, 'responseCode', 'N\\\\A')}`);\r\n    }\r\n    return resp.msg_remark;\r\n}\r\n\r\nexport const requestPhp = async ({ url, data }: RequestPhp) => {\r\n\r\n    const resp = await phpInstance.post(\r\n        url,\r\n        JSON.stringify(data)\r\n    ).catch(error => {\r\n        \r\n        Bugsnag.notify(error, (event) => {\r\n            event.addMetadata('info', {\r\n                url: `${Config.phpUrl}${url}`,\r\n                data\r\n            });\r\n        });\r\n        throw error;\r\n    });\r\n\r\n    if (!resp.data || resp.data.result !== '0000') {\r\n        if (resp.data && url === 'api/authenticateToken.php') {\r\n            return resp.data;\r\n        }\r\n        else if (resp.data && url === 'api/authenticate.php') {\r\n            throw new Error(resp.data.result)\r\n        }\r\n        throw new Error('Common.UnknownSystemError');\r\n    }\r\n\r\n    return resp.data;\r\n}\r\n\r\nexport const getAuthData = async (): Promise<AuthData> => {\r\n    const token = await AsyncStorage.getItem('token');\r\n\r\n    const emptyResult: AuthData = {\r\n        token: '',\r\n        clinicId: ''\r\n    };\r\n\r\n\r\n    //return emptyResult;\r\n\r\n    if (!token) {\r\n        return emptyResult;\r\n    }\r\n\r\n    const response = await requestPhp({\r\n        url: 'api/authenticateToken.php',\r\n        data: {\r\n            token\r\n        }\r\n    });\r\n\r\n    if (response.result !== '0000') {\r\n        // dont remove first\r\n        await AsyncStorage.removeItem('token');\r\n        await AsyncStorage.removeItem('clinic_id');\r\n\r\n        return emptyResult;\r\n    }\r\n\r\n    return {\r\n        token: response.token,\r\n        clinicId: response.clinic_id\r\n    };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}