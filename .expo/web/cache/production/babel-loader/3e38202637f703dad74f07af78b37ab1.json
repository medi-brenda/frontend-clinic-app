{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{CodedError}from'expo-modules-core';import{v4 as uuidv4}from'uuid';var INSTALLATION_ID_KEY='EXPO_NOTIFICATIONS_INSTALLATION_ID';var REGISTRATION_INFO_KEY='EXPO_NOTIFICATIONS_REGISTRATION_INFO';var _getFallbackInstallationId=function getFallbackInstallationId(){var sessionInstallationId=uuidv4();_getFallbackInstallationId=function getFallbackInstallationId(){return sessionInstallationId;};};export default{getInstallationIdAsync:function getInstallationIdAsync(){var installationId;return _regeneratorRuntime.async(function getInstallationIdAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:try{installationId=localStorage.getItem(INSTALLATION_ID_KEY);if(!installationId||typeof installationId!=='string'){installationId=uuidv4();localStorage.setItem(INSTALLATION_ID_KEY,installationId);}}catch(_unused){installationId=_getFallbackInstallationId();}return _context.abrupt(\"return\",installationId);case 2:case\"end\":return _context.stop();}}},null,null,null,Promise);},getRegistrationInfoAsync:function getRegistrationInfoAsync(){return _regeneratorRuntime.async(function getRegistrationInfoAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",localStorage.getItem(REGISTRATION_INFO_KEY));case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);},setRegistrationInfoAsync:function setRegistrationInfoAsync(registrationInfo){return _regeneratorRuntime.async(function setRegistrationInfoAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;if(registrationInfo){localStorage.setItem(REGISTRATION_INFO_KEY,registrationInfo);}else{localStorage.removeItem(REGISTRATION_INFO_KEY);}_context3.next=7;break;case 4:_context3.prev=4;_context3.t0=_context3[\"catch\"](0);throw new CodedError('ERR_NOTIFICATIONS_STORAGE_ERROR',\"Could not modify localStorage to persist auto-registration information: \"+_context3.t0);case 7:case\"end\":return _context3.stop();}}},null,null,[[0,4]],Promise);},addListener:function addListener(){},removeListeners:function removeListeners(){}};","map":{"version":3,"sources":["../src/ServerRegistrationModule.web.ts"],"names":[],"mappings":"4DAAA,OAAS,UAAT,KAA2B,mBAA3B,CACA,OAAS,EAAE,GAAI,CAAA,MAAf,KAA6B,MAA7B,CAIA,GAAM,CAAA,mBAAmB,CAAG,oCAA5B,CACA,GAAM,CAAA,qBAAqB,CAAG,sCAA9B,CAGA,GAAI,CAAA,0BAAyB,CAAG,oCAAK,CACnC,GAAM,CAAA,qBAAqB,CAAG,MAAM,EAApC,CACA,0BAAyB,CAAG,2CAAM,CAAA,qBAAN,EAA5B,CACD,CAHD,CAKA,cAAe,CACb,sBAAsB,CAAE,qLAGtB,GAAI,CACF,cAAc,CAAG,YAAY,CAAC,OAAb,CAAqB,mBAArB,CAAjB,CACA,GAAI,CAAC,cAAD,EAAmB,MAAO,CAAA,cAAP,GAA0B,QAAjD,CAA2D,CACzD,cAAc,CAAG,MAAM,EAAvB,CACA,YAAY,CAAC,OAAb,CAAqB,mBAArB,CAA0C,cAA1C,EACD,CACF,CAAC,cAAM,CACN,cAAc,CAAG,0BAAyB,EAA1C,CACD,CAXqB,gCAaf,cAbe,uEADX,CAgBb,wBAAwB,CAAE,0MACjB,YAAY,CAAC,OAAb,CAAqB,qBAArB,CADiB,wEAhBb,CAmBb,wBAAwB,CAAE,kCAAO,gBAAP,wJAEtB,GAAI,gBAAJ,CAAsB,CACpB,YAAY,CAAC,OAAb,CAAqB,qBAArB,CAA4C,gBAA5C,EACD,CAFD,IAEO,CACL,YAAY,CAAC,UAAb,CAAwB,qBAAxB,EACD,CANqB,uFAQhB,IAAI,CAAA,UAAJ,CACJ,iCADI,yFARgB,0EAnBb,CAkCb,WAAW,CAAE,sBAAK,CAAG,CAlCR,CAmCb,eAAe,CAAE,0BAAK,CAAG,CAnCZ,CAAf","sourcesContent":["import { CodedError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { ServerRegistrationModule } from './ServerRegistrationModule.types';\n\nconst INSTALLATION_ID_KEY = 'EXPO_NOTIFICATIONS_INSTALLATION_ID';\nconst REGISTRATION_INFO_KEY = 'EXPO_NOTIFICATIONS_REGISTRATION_INFO';\n\n// Lazy fallback installationId per session initializer\nlet getFallbackInstallationId = () => {\n  const sessionInstallationId = uuidv4();\n  getFallbackInstallationId = () => sessionInstallationId;\n};\n\nexport default {\n  getInstallationIdAsync: async () => {\n    let installationId;\n\n    try {\n      installationId = localStorage.getItem(INSTALLATION_ID_KEY);\n      if (!installationId || typeof installationId !== 'string') {\n        installationId = uuidv4();\n        localStorage.setItem(INSTALLATION_ID_KEY, installationId);\n      }\n    } catch {\n      installationId = getFallbackInstallationId();\n    }\n\n    return installationId;\n  },\n  getRegistrationInfoAsync: async () => {\n    return localStorage.getItem(REGISTRATION_INFO_KEY);\n  },\n  setRegistrationInfoAsync: async (registrationInfo: string | null) => {\n    try {\n      if (registrationInfo) {\n        localStorage.setItem(REGISTRATION_INFO_KEY, registrationInfo);\n      } else {\n        localStorage.removeItem(REGISTRATION_INFO_KEY);\n      }\n    } catch (error) {\n      throw new CodedError(\n        'ERR_NOTIFICATIONS_STORAGE_ERROR',\n        `Could not modify localStorage to persist auto-registration information: ${error}`\n      );\n    }\n  },\n  // mock implementations\n  addListener: () => {},\n  removeListeners: () => {},\n} as ServerRegistrationModule;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}