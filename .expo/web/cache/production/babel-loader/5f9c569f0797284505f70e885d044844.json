{"ast":null,"code":"import*as React from'react';var UNINITIALIZED=typeof Symbol==='function'&&typeof Symbol()==='symbol'?Symbol():Object.freeze({});export default function useStable(getInitialValue){var ref=React.useRef(UNINITIALIZED);if(ref.current===UNINITIALIZED){ref.current=getInitialValue();}return ref.current;}","map":{"version":3,"names":["React","UNINITIALIZED","Symbol","Object","freeze","useStable","getInitialValue","ref","useRef","current"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/node_modules/react-native-web/src/modules/useStable/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n */\n\nimport * as React from 'react';\n\nconst UNINITIALIZED =\n  typeof Symbol === 'function' && typeof Symbol() === 'symbol' ? Symbol() : Object.freeze({});\n\nexport default function useStable<T>(getInitialValue: () => T): T {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = getInitialValue();\n  }\n  // $FlowFixMe (#64650789) Trouble refining types where `Symbol` is concerned.\n  return ref.current;\n}\n"],"mappings":"AASA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,GAAMC,CAAAA,aAAa,CACjB,MAAOC,CAAAA,MAAP,GAAkB,UAAlB,EAAgC,MAAOA,CAAAA,MAAM,EAAb,GAAoB,QAApD,CAA+DA,MAAM,EAArE,CAA0EC,MAAM,CAACC,MAAP,CAAc,EAAd,CAD5E,CAGA,cAAe,SAASC,CAAAA,SAAT,CAAsBC,eAAtB,CAAmD,CAChE,GAAMC,CAAAA,GAAG,CAAGP,KAAK,CAACQ,MAAN,CAAaP,aAAb,CAAZ,CACA,GAAIM,GAAG,CAACE,OAAJ,GAAgBR,aAApB,CAAmC,CACjCM,GAAG,CAACE,OAAJ,CAAcH,eAAe,EAA7B,CACD,CAED,MAAOC,CAAAA,GAAG,CAACE,OAAX,CACD"},"metadata":{},"sourceType":"module"}