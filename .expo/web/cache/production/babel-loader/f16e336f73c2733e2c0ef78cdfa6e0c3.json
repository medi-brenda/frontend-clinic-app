{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";var lastSetBadgeCount=0;var badgeModule={addListener:function addListener(){},removeListeners:function removeListeners(){},getBadgeCountAsync:function getBadgeCountAsync(){return _regeneratorRuntime.async(function getBadgeCountAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",lastSetBadgeCount);case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);},setBadgeCountAsync:function setBadgeCountAsync(badgeCount,options){var badgin;return _regeneratorRuntime.async(function setBadgeCountAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(typeof window==='undefined')){_context2.next=2;break;}return _context2.abrupt(\"return\",false);case 2:badgin=require('badgin');if(badgeCount>0){badgin.set(badgeCount,options);}else{badgin.clear();}lastSetBadgeCount=badgeCount;return _context2.abrupt(\"return\",true);case 6:case\"end\":return _context2.stop();}}},null,null,null,Promise);}};export default badgeModule;","map":{"version":3,"sources":["../src/BadgeModule.web.ts"],"names":[],"mappings":"4DAEA,GAAI,CAAA,iBAAiB,CAAG,CAAxB,CAEA,GAAM,CAAA,WAAW,CAAgB,CAC/B,WAAW,CAAE,sBAAK,CAAG,CADU,CAE/B,eAAe,CAAE,0BAAK,CAAG,CAFM,CAG/B,kBAAkB,CAAE,0LACX,iBADW,uEAHW,CAM/B,kBAAkB,CAAE,4BAAO,UAAP,CAAmB,OAAnB,iJAGd,MAAO,CAAA,MAAP,GAAkB,WAHJ,4DAIT,KAJS,SAMZ,MANY,CAMH,OAAO,CAAC,QAAD,CANJ,CAOlB,GAAI,UAAU,CAAG,CAAjB,CAAoB,CAClB,MAAM,CAAC,GAAP,CAAW,UAAX,CAAuB,OAAvB,EACD,CAFD,IAEO,CACL,MAAM,CAAC,KAAP,GACD,CACD,iBAAiB,CAAG,UAApB,CAZkB,iCAaX,IAbW,wEANW,CAAjC,CAuBA,cAAe,CAAA,WAAf","sourcesContent":["import { BadgeModule } from './BadgeModule.types';\n\nlet lastSetBadgeCount = 0;\n\nconst badgeModule: BadgeModule = {\n  addListener: () => {},\n  removeListeners: () => {},\n  getBadgeCountAsync: async () => {\n    return lastSetBadgeCount;\n  },\n  setBadgeCountAsync: async (badgeCount, options) => {\n    // If this module is loaded in SSR (NextJS), we can't modify the badge.\n    // It also can't load the badgin module, that instantly invokes methods on window.\n    if (typeof window === 'undefined') {\n      return false;\n    }\n    const badgin = require('badgin');\n    if (badgeCount > 0) {\n      badgin.set(badgeCount, options);\n    } else {\n      badgin.clear();\n    }\n    lastSetBadgeCount = badgeCount;\n    return true;\n  },\n};\n\nexport default badgeModule;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}