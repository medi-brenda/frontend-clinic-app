{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.ImageZoomState=exports.ImageZoomProps=void 0;var ImageZoomProps=function(){function ImageZoomProps(){this.cropWidth=100;this.cropHeight=100;this.imageWidth=100;this.imageHeight=100;this.panToMove=true;this.pinchToZoom=true;this.enableDoubleClickZoom=true;this.clickDistance=10;this.maxOverflow=100;this.longPressTime=800;this.doubleClickInterval=175;this.style={};this.swipeDownThreshold=230;this.enableSwipeDown=false;this.enableCenterFocus=true;this.useHardwareTextureAndroid=true;this.minScale=0.6;this.maxScale=10;this.useNativeDriver=false;this.onClick=function(){};this.onDoubleClick=function(){};this.onLongPress=function(){};this.horizontalOuterRangeOffset=function(){};this.onDragLeft=function(){};this.responderRelease=function(){};this.onMove=function(){};this.layoutChange=function(){};this.onSwipeDown=function(){};this.onStartShouldSetPanResponder=function(){return true;};this.onPanResponderTerminationRequest=function(){return false;};}return ImageZoomProps;}();exports.ImageZoomProps=ImageZoomProps;var ImageZoomState=function(){function ImageZoomState(){this.centerX=0.5;this.centerY=0.5;}return ImageZoomState;}();exports.ImageZoomState=ImageZoomState;","map":{"version":3,"sources":["../../src/image-zoom/image-zoom.type.ts"],"names":[],"mappings":"2HAwBA,GAAA,CAAA,cAAA,CAAA,UAAA,CAAA,QAAA,CAAA,cAAA,EAAA,CAIS,KAAA,SAAA,CAAoB,GAApB,CAKA,KAAA,UAAA,CAAqB,GAArB,CAKA,KAAA,UAAA,CAAqB,GAArB,CAKA,KAAA,WAAA,CAAsB,GAAtB,CAKA,KAAA,SAAA,CAAsB,IAAtB,CAKA,KAAA,WAAA,CAAwB,IAAxB,CAKA,KAAA,qBAAA,CAAkC,IAAlC,CAKA,KAAA,aAAA,CAAyB,EAAzB,CAKA,KAAA,WAAA,CAAuB,GAAvB,CAKA,KAAA,aAAA,CAAyB,GAAzB,CAKA,KAAA,mBAAA,CAA+B,GAA/B,CAQA,KAAA,KAAA,CAAoB,EAApB,CAKA,KAAA,kBAAA,CAA8B,GAA9B,CAKA,KAAA,eAAA,CAA4B,KAA5B,CAKA,KAAA,iBAAA,CAA8B,IAA9B,CAKA,KAAA,yBAAA,CAAsC,IAAtC,CAKA,KAAA,QAAA,CAAoB,GAApB,CAKA,KAAA,QAAA,CAAoB,EAApB,CAMA,KAAA,eAAA,CAA4B,KAA5B,CAKA,KAAA,OAAA,CAA4C,UAAA,CAElD,CAFM,CAOA,KAAA,aAAA,CAAkD,UAAA,CAExD,CAFM,CAOA,KAAA,WAAA,CAAgD,UAAA,CAEtD,CAFM,CAQA,KAAA,0BAAA,CAAyD,UAAA,CAE/D,CAFM,CAOA,KAAA,UAAA,CAA0B,UAAA,CAEhC,CAFM,CAOA,KAAA,gBAAA,CAAyD,UAAA,CAE/D,CAFM,CAOA,KAAA,MAAA,CAAuC,UAAA,CAE7C,CAFM,CAOA,KAAA,YAAA,CAAoD,UAAA,CAE1D,CAFM,CAOA,KAAA,WAAA,CAA2B,UAAA,CAEjC,CAFM,CAgBA,KAAA,4BAAA,CAGQ,UAAA,CAAM,MAAA,KAAA,CAAI,CAHlB,CASA,KAAA,gCAAA,CAGQ,UAAA,CAAM,MAAA,MAAA,CAAK,CAHnB,CAIR,CAAD,MAAA,CAAA,cAAA,CAAC,CA7LD,EAAA,CAAa,OAAA,CAAA,cAAA,CAAA,cAAA,CA+Lb,GAAA,CAAA,cAAA,CAAA,UAAA,CAAA,QAAA,CAAA,cAAA,EAAA,CAIS,KAAA,OAAA,CAAmB,GAAnB,CAIA,KAAA,OAAA,CAAmB,GAAnB,CACR,CAAD,MAAA,CAAA,cAAA,CAAC,CATD,EAAA,CAAa,OAAA,CAAA,cAAA,CAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageZoomState = exports.ImageZoomProps = void 0;\nvar ImageZoomProps = /** @class */ (function () {\n    function ImageZoomProps() {\n        /**\n         * 操作区域宽度\n         */\n        this.cropWidth = 100;\n        /**\n         * 操作区域高度\n         */\n        this.cropHeight = 100;\n        /**\n         * 图片宽度\n         */\n        this.imageWidth = 100;\n        /**\n         * 图片高度\n         */\n        this.imageHeight = 100;\n        /**\n         * 单手是否能移动图片\n         */\n        this.panToMove = true;\n        /**\n         * 多手指是否能缩放\n         */\n        this.pinchToZoom = true;\n        /**\n         * 双击能否放大\n         */\n        this.enableDoubleClickZoom = true;\n        /**\n         * 单击最大位移\n         */\n        this.clickDistance = 10;\n        /**\n         * 最大滑动阈值\n         */\n        this.maxOverflow = 100;\n        /**\n         * 长按的阈值（毫秒）\n         */\n        this.longPressTime = 800;\n        /**\n         * 双击计时器最大间隔\n         */\n        this.doubleClickInterval = 175;\n        this.style = {};\n        /**\n         * threshold for firing swipe down function\n         */\n        this.swipeDownThreshold = 230;\n        /**\n         * for enabling vertical movement if user doesn't want it\n         */\n        this.enableSwipeDown = false;\n        /**\n         * for disabling focus on image center if user doesn't want it\n         */\n        this.enableCenterFocus = true;\n        /**\n         * for disabling rendering to hardware texture on Android\n         */\n        this.useHardwareTextureAndroid = true;\n        /**\n         * minimum zoom scale\n         */\n        this.minScale = 0.6;\n        /**\n         * maximum zoom scale\n         */\n        this.maxScale = 10;\n        /**\n         * 是否启用原生动画驱动\n         * Whether to use native code to perform animations.\n         */\n        this.useNativeDriver = false;\n        /**\n         * 单击的回调\n         */\n        this.onClick = function () {\n            //\n        };\n        /**\n         * 双击的回调\n         */\n        this.onDoubleClick = function () {\n            //\n        };\n        /**\n         * 长按的回调\n         */\n        this.onLongPress = function () {\n            //\n        };\n        /**\n         * 横向超出的距离，父级做图片切换时，可以监听这个函数\n         * 当此函数触发时，可以做切换操作\n         */\n        this.horizontalOuterRangeOffset = function () {\n            //\n        };\n        /**\n         * 触发想切换到左边的图，向左滑动速度超出阈值时触发\n         */\n        this.onDragLeft = function () {\n            //\n        };\n        /**\n         * 松手但是没有取消看图的回调\n         */\n        this.responderRelease = function () {\n            //\n        };\n        /**\n         * If provided, this will be called everytime the map is moved\n         */\n        this.onMove = function () {\n            //\n        };\n        /**\n         * If provided, this method will be called when the onLayout event fires\n         */\n        this.layoutChange = function () {\n            //\n        };\n        /**\n         * function that fires when user swipes down\n         */\n        this.onSwipeDown = function () {\n            //\n        };\n        /**\n         * Allows overriding the default onStartShouldSetPanResponder behavior.\n         * By default, always becomes the responder\n         */\n        this.onStartShouldSetPanResponder = function () { return true; };\n        /**\n         * Allows overriding the default onPanResponderTerminationRequest behavior.\n         * By default, doesn't terminate until the press ends\n         */\n        this.onPanResponderTerminationRequest = function () { return false; };\n    }\n    return ImageZoomProps;\n}());\nexports.ImageZoomProps = ImageZoomProps;\nvar ImageZoomState = /** @class */ (function () {\n    function ImageZoomState() {\n        /**\n         * 中心 x 坐标\n         */\n        this.centerX = 0.5;\n        /**\n         * 中心 y 坐标\n         */\n        this.centerY = 0.5;\n    }\n    return ImageZoomState;\n}());\nexports.ImageZoomState = ImageZoomState;\n//# sourceMappingURL=image-zoom.type.js.map"]},"metadata":{},"sourceType":"script"}