{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{useNavigation}from'@react-navigation/native';import{observer}from'mobx-react';import{Col,Container,Grid,Icon,Row,Text,View}from'native-base';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import Alert from\"react-native-web/dist/exports/Alert\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{ScrollView,TouchableOpacity}from'react-native-gesture-handler';import{getRecords}from\"../../actions/transaction\";import TitleBar from\"../../components/titleBar\";import{useStores}from\"../../stores\";import ErrorPage from\"../error\";import Loading from\"../loading\";import*as _ from'lodash';import moment from'moment';import{getLastMonthDate}from\"../../utils/date\";import MCCButton from\"../../components/mccButton\";import{downloadReport}from\"../../actions/app\";import Spinner from'react-native-loading-spinner-overlay';import PhoneCall from\"../../components/phoneCall\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PureChart=require('react-native-pure-chart/examples/pure-chart').default;var ReportPage=observer(function(){var _useTranslation=useTranslation(),i18n=_useTranslation.i18n,t=_useTranslation.t;var stores=useStores();var navigation=useNavigation();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var today=new Date();var _useState5=useState(today.getFullYear()),_useState6=_slicedToArray(_useState5,2),year=_useState6[0],setYear=_useState6[1];var _useState7=useState(today.getMonth()),_useState8=_slicedToArray(_useState7,2),month=_useState8[0],setMonth=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),chartData=_useState10[0],setChartData=_useState10[1];var _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),data=_useState12[0],setData=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),spinner=_useState14[0],setSpinner=_useState14[1];useEffect(function(){init();},[]);var init=function _callee(){var errorMsg,records,tempData,newData,charKeys,newChartData;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.next=3;return _regeneratorRuntime.awrap(getRecords({stores:stores,navigation:navigation,i18n:i18n}));case 3:errorMsg=_context.sent;setLoading(false);if(errorMsg){setError(errorMsg);}else{records=stores.dataStore.records;tempData={};records.forEach(function(record){var date=moment(record.transactionTime).toDate();var key=\"\"+date.getFullYear()+date.getMonth();if(!tempData[key]){tempData[key]=[];}tempData[key].push(record);});newData={};_.keys(tempData).forEach(function(key){var income=0;tempData[key].forEach(function(record){income+=parseInt(record.feeSum,10)+parseInt(record.doctorFee,10)-parseInt(record.copaymentFee,10)+parseInt(record.extraMedFromNetwork,10);});var monthDate=getLastMonthDate(new Date(tempData[key][0].transactionTime)).getDate();newData[key]={customers:_.size(tempData[key]),income:income,average:(_.size(tempData[key])/monthDate).toFixed(2)};});charKeys=[moment(today).add('month',-5),moment(today).add('month',-4),moment(today).add('month',-3),moment(today).add('month',-2),moment(today).add('month',-1),moment(today)];newChartData=_.map(charKeys,function(month){return{x:month.format('MM/YYYY'),y:_.get(newData,\"\"+month.get('year')+month.get('month')+\".income\",0)};});setChartData([{seriesName:'series1',data:newChartData,color:'blue'}]);setData(newData);}case 6:case\"end\":return _context.stop();}}},null,null,null,Promise);};var changeMonth=function changeMonth(diff){var date=moment().set('month',month).set('year',year).add('month',diff).toDate();setYear(date.getFullYear());setMonth(date.getMonth());};var onReportDownload=function onReportDownload(){Alert.alert(t('Report.Confirm_download'),undefined,[{text:t('Common.Confirm'),onPress:function onPress(){var errorMsg;return _regeneratorRuntime.async(function onPress$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setSpinner(true);_context2.next=3;return _regeneratorRuntime.awrap(downloadReport({stores:stores,navigation:navigation,year:year,month:month+1}));case 3:errorMsg=_context2.sent;if(error){Alert.alert(t('Common.Error'),t('Report.ReportFail'),[{text:t('Common.Confirm'),onPress:function onPress(){setSpinner(false);}}]);}else{Alert.alert(t('Common.Success'),t('Report.ReportSent'),[{text:t('Common.Confirm'),onPress:function onPress(){setSpinner(false);}}]);}case 5:case\"end\":return _context2.stop();}}},null,null,null,Promise);}},{text:t('Common.Cancel'),style:'cancel'}]);};return _jsxs(Container,{children:[_jsx(TitleBar,{title:t('Common.Reports'),onBack:function onBack(){navigation.goBack();}}),_jsx(Spinner,{visible:spinner,color:'red',size:'large',overlayColor:'rgba(0, 0, 0, 0.25)'}),loading?_jsx(Loading,{}):error?_jsx(ErrorPage,{title:error,onRetry:init}):_jsx(ScrollView,{children:_jsxs(Container,{children:[_jsx(Text,{style:styleSheet.title,children:t('Report.Recent_summary')}),_jsx(Text,{style:styleSheet.income,children:t('Report.Income')}),_jsx(View,{children:chartData?_jsx(PureChart,{showEvenNumberXaxisLabel:false,data:chartData,height:150,type:'bar'}):undefined}),_jsx(Text,{style:[styleSheet.income,styleSheet.marginTop],children:t('Report.Monthly_income_and_download')}),_jsxs(View,{style:styleSheet.monthSelectContatiner,children:[_jsx(TouchableOpacity,{onPress:function onPress(){return changeMonth(-1);},style:styleSheet.leftArrow,children:_jsx(View,{children:_jsx(Icon,{name:\"arrow-left-drop-circle\",style:styleSheet.arrowIcon,type:\"MaterialCommunityIcons\"})})}),_jsx(Text,{style:styleSheet.dateText,children:month+1+\"/\"+year}),_jsx(TouchableOpacity,{onPress:function onPress(){return changeMonth(1);},style:styleSheet.rightArrow,children:_jsx(View,{children:_jsx(Icon,{name:\"arrow-right-drop-circle\",style:styleSheet.arrowIcon,type:\"MaterialCommunityIcons\"})})})]}),_jsxs(Grid,{children:[_jsxs(Row,{style:styleSheet.row,children:[_jsxs(Col,{style:styleSheet.col,children:[_jsx(Text,{style:styleSheet.colTitle,children:t('Report.Client_count')}),_jsx(Text,{style:styleSheet.textCenter,children:_.get(data,\"\"+year+month+\".customers\",0)})]}),_jsxs(Col,{style:styleSheet.col,children:[_jsx(Text,{style:styleSheet.colTitle,children:t('Report.Total_income')}),_jsx(Text,{style:styleSheet.textCenter,children:\"HKD $\"+_.get(data,\"\"+year+month+\".income\",0)})]})]}),_jsx(Row,{style:styleSheet.secondRow,children:_jsxs(Col,{style:styleSheet.col,children:[_jsx(Text,{style:styleSheet.colTitle,children:t('Report.Average_client_count')}),_jsx(Text,{style:styleSheet.textCenter,children:_.get(data,\"\"+year+month+\".average\",0)})]})}),_jsx(Row,{children:_jsx(Col,{children:_jsx(View,{style:styleSheet.buttonContainer,children:_jsx(MCCButton,{onPress:onReportDownload,text:t('Report.Download_text')})})})})]})]})}),_jsx(PhoneCall,{})]});});var styleSheet=StyleSheet.create({title:{paddingLeft:0,paddingBottom:10,marginBottom:5,marginTop:10,fontSize:20,fontWeight:'bold',textAlign:'center'},income:{textAlign:'center',color:'#f39c12',fontSize:22,marginBottom:5},marginTop:{marginTop:16},monthSelectContatiner:{flexDirection:'row',justifyContent:'center',alignItems:'center',padding:10,borderColor:'#f0f0f5',borderBottomWidth:1,borderTopWidth:1},leftArrow:{paddingRight:15},rightArrow:{paddingLeft:15},arrowIcon:{fontSize:28,color:'#ed5b5c'},dateText:{fontSize:28,color:'#666'},row:{height:60},col:{paddingLeft:0,paddingBottom:10,marginBottom:5,marginTop:10},colTitle:{textAlign:'center',marginBottom:5},textCenter:{textAlign:'center'},secondRow:{height:50},buttonContainer:{paddingLeft:10,paddingRight:10,marginTop:30}});export default ReportPage;","map":{"version":3,"names":["useNavigation","observer","Col","Container","Grid","Icon","Row","Text","View","React","useEffect","useState","useTranslation","ScrollView","TouchableOpacity","getRecords","TitleBar","useStores","ErrorPage","Loading","_","moment","getLastMonthDate","MCCButton","downloadReport","Spinner","PhoneCall","PureChart","require","default","ReportPage","i18n","t","stores","navigation","loading","setLoading","error","setError","today","Date","getFullYear","year","setYear","getMonth","month","setMonth","chartData","setChartData","data","setData","spinner","setSpinner","init","errorMsg","records","dataStore","tempData","forEach","record","date","transactionTime","toDate","key","push","newData","keys","income","parseInt","feeSum","doctorFee","copaymentFee","extraMedFromNetwork","monthDate","getDate","customers","size","average","toFixed","charKeys","add","newChartData","map","x","format","y","get","seriesName","color","changeMonth","diff","set","onReportDownload","Alert","alert","undefined","text","onPress","style","goBack","styleSheet","title","marginTop","monthSelectContatiner","leftArrow","arrowIcon","dateText","rightArrow","row","col","colTitle","textCenter","secondRow","buttonContainer","StyleSheet","create","paddingLeft","paddingBottom","marginBottom","fontSize","fontWeight","textAlign","flexDirection","justifyContent","alignItems","padding","borderColor","borderBottomWidth","borderTopWidth","paddingRight","height"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/report/index.tsx"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Container, Grid, Icon, Row, Text, View } from 'native-base';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Alert, StyleSheet } from 'react-native';\r\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { getRecords } from '../../actions/transaction';\r\nimport TitleBar from '../../components/titleBar';\r\nimport { useStores } from '../../stores';\r\nimport ErrorPage from '../error';\r\nimport Loading from '../loading';\r\nimport * as _ from 'lodash';\r\nimport moment from 'moment';\r\nimport { Record } from '../../models/record';\r\nimport { getLastMonthDate } from '../../utils/date';\r\nimport MCCButton from '../../components/mccButton';\r\nimport { downloadReport } from '../../actions/app';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport PhoneCall from \"../../components/phoneCall\";\r\nconst PureChart = require('react-native-pure-chart/examples/pure-chart').default;\r\n\r\nconst ReportPage = observer(() => {\r\n    const { i18n, t } = useTranslation();\r\n    const stores = useStores();\r\n    const navigation = useNavigation();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const today = new Date();\r\n    const [year, setYear] = useState(today.getFullYear());\r\n    const [month, setMonth] = useState(today.getMonth());\r\n    const [chartData, setChartData] = useState<any>();\r\n    const [data, setData] = useState<any>({})\r\n    const [spinner, setSpinner] = useState(false);\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const init = async () => {\r\n        setLoading(true);\r\n        const errorMsg = await getRecords({ stores, navigation, i18n });\r\n        setLoading(false);\r\n\r\n        if (errorMsg) {\r\n            setError(errorMsg);\r\n        }\r\n        else {\r\n            const { records } = stores.dataStore;\r\n            const tempData: any = {};\r\n            records.forEach(record => {\r\n                const date = moment(record.transactionTime).toDate();\r\n                const key = `${date.getFullYear()}${date.getMonth()}`;\r\n                if (!tempData[key]) {\r\n                    tempData[key] = [];\r\n                }\r\n\r\n                tempData[key].push(record)\r\n            });\r\n\r\n            const newData: any = {};\r\n            _.keys(tempData).forEach(key => {\r\n                let income = 0;\r\n                tempData[key].forEach((record: Record) => {\r\n                    income += parseInt(record.feeSum, 10) +\r\n                        parseInt(record.doctorFee, 10) -\r\n                        parseInt(record.copaymentFee, 10) +\r\n                        parseInt(record.extraMedFromNetwork, 10);\r\n                });\r\n\r\n                const monthDate = getLastMonthDate(new Date(tempData[key][0].transactionTime)).getDate();\r\n\r\n\r\n                newData[key] = {\r\n                    customers: _.size(tempData[key]),\r\n                    income,\r\n                    average: (_.size(tempData[key]) / monthDate).toFixed(2)\r\n                }\r\n            });\r\n\r\n            const charKeys = [\r\n                moment(today).add('month', -5),\r\n                moment(today).add('month', -4),\r\n                moment(today).add('month', -3),\r\n                moment(today).add('month', -2),\r\n                moment(today).add('month', -1),\r\n                moment(today)\r\n            ];\r\n\r\n            const newChartData = _.map(charKeys, month => ({\r\n                x: month.format('MM/YYYY'),\r\n                y: _.get(newData, `${month.get('year')}${month.get('month')}.income`, 0)\r\n            }));\r\n\r\n            setChartData([{\r\n                seriesName: 'series1',\r\n                data: newChartData,\r\n                color: 'blue'\r\n            }]);\r\n            setData(newData);\r\n        }\r\n    }\r\n\r\n    const changeMonth = (diff: number) => {\r\n        const date = moment().set('month', month).set('year', year).add('month', diff).toDate();\r\n        setYear(date.getFullYear());\r\n        setMonth(date.getMonth());\r\n    }\r\n\r\n    const onReportDownload = () => {\r\n        Alert.alert(\r\n            t('Report.Confirm_download'),\r\n            undefined,\r\n            [\r\n                {\r\n                    text: t('Common.Confirm'),\r\n                    onPress: async () => {\r\n                        setSpinner(true);\r\n                        const errorMsg = await downloadReport({\r\n                            stores,\r\n                            navigation,\r\n                            year,\r\n                            month: month + 1\r\n                        });\r\n\r\n                        if (error) {\r\n                            Alert.alert(\r\n                                t('Common.Error'),\r\n                                t('Report.ReportFail'),\r\n                                [\r\n                                    {\r\n                                        text: t('Common.Confirm'),\r\n                                        onPress: () => {\r\n                                            setSpinner(false);\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            )\r\n                        }\r\n                        else {\r\n                            Alert.alert(\r\n                                t('Common.Success'),\r\n                                t('Report.ReportSent'),\r\n                                [\r\n                                    {\r\n                                        text: t('Common.Confirm'),\r\n                                        onPress: () => {\r\n                                            setSpinner(false);\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            )\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: t('Common.Cancel'),\r\n                    style: 'cancel'\r\n                }\r\n            ]\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <TitleBar\r\n                title={t('Common.Reports')}\r\n                onBack={() => { navigation.goBack(); }}\r\n            />\r\n            <Spinner\r\n                visible={spinner}\r\n                color={'red'}\r\n                size={'large'}\r\n                overlayColor={'rgba(0, 0, 0, 0.25)'}\r\n            />\r\n            {\r\n                loading ? <Loading /> :\r\n                    error ? <ErrorPage title={error} onRetry={init} /> :\r\n                        <ScrollView>\r\n                            <Container>\r\n                                <Text style={styleSheet.title}>{t('Report.Recent_summary')}</Text>\r\n                                <Text style={styleSheet.income}>{t('Report.Income')}</Text>\r\n                                <View>\r\n                                    {\r\n                                        chartData ? (\r\n                                            <PureChart\r\n                                                showEvenNumberXaxisLabel={false}\r\n                                                data={chartData}\r\n                                                height={150}\r\n                                                type={'bar'}\r\n                                            />\r\n                                        ) : undefined\r\n                                    }\r\n                                </View>\r\n                                <Text style={[styleSheet.income, styleSheet.marginTop]}>\r\n                                    {t('Report.Monthly_income_and_download')}\r\n                                </Text>\r\n                                <View style={styleSheet.monthSelectContatiner}>\r\n                                    <TouchableOpacity\r\n                                        onPress={() => changeMonth(-1)}\r\n                                        style={styleSheet.leftArrow}\r\n                                    >\r\n                                        <View>\r\n                                            <Icon\r\n                                                name='arrow-left-drop-circle'\r\n                                                style={styleSheet.arrowIcon}\r\n                                                type='MaterialCommunityIcons'\r\n                                            />\r\n                                        </View>\r\n                                    </TouchableOpacity>\r\n                                    <Text\r\n                                        style={styleSheet.dateText}\r\n                                    >\r\n                                        {`${month + 1}/${year}`}\r\n                                    </Text>\r\n                                    <TouchableOpacity\r\n                                        onPress={() => changeMonth(1)}\r\n                                        style={styleSheet.rightArrow}\r\n                                    >\r\n                                        <View>\r\n                                            <Icon\r\n                                                name='arrow-right-drop-circle'\r\n                                                style={styleSheet.arrowIcon}\r\n                                                type='MaterialCommunityIcons'\r\n                                            />\r\n                                        </View>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                                <Grid>\r\n                                    <Row style={styleSheet.row}>\r\n                                        <Col style={styleSheet.col}>\r\n                                            <Text style={styleSheet.colTitle}>\r\n                                                {t('Report.Client_count')}\r\n                                            </Text>\r\n                                            <Text style={styleSheet.textCenter}>\r\n                                                {_.get(data, `${year}${month}.customers`, 0)}\r\n                                            </Text>\r\n                                        </Col>\r\n                                        <Col style={styleSheet.col}>\r\n                                            <Text style={styleSheet.colTitle}>\r\n                                                {t('Report.Total_income')}\r\n                                            </Text>\r\n                                            <Text style={styleSheet.textCenter}>\r\n                                                {`HKD $${_.get(data, `${year}${month}.income`, 0)}`}\r\n                                            </Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row style={styleSheet.secondRow}>\r\n                                        <Col style={styleSheet.col}>\r\n                                            <Text style={styleSheet.colTitle}>\r\n                                                {t('Report.Average_client_count')}\r\n                                            </Text>\r\n                                            <Text style={styleSheet.textCenter}>\r\n                                                {_.get(data, `${year}${month}.average`, 0)}\r\n                                            </Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <View style={styleSheet.buttonContainer}>\r\n                                                <MCCButton\r\n                                                    onPress={onReportDownload}\r\n                                                    text={t('Report.Download_text')}\r\n                                                />\r\n                                            </View>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Grid>\r\n                            </Container>\r\n                        </ScrollView>\r\n            }\r\n\r\n            <PhoneCall/>\r\n        </Container >\r\n    )\r\n});\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    title: {\r\n        paddingLeft: 0,\r\n        paddingBottom: 10,\r\n        marginBottom: 5,\r\n        marginTop: 10,\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n    income: {\r\n        textAlign: 'center',\r\n        color: '#f39c12',\r\n        fontSize: 22,\r\n        marginBottom: 5,\r\n    },\r\n    marginTop: {\r\n        marginTop: 16\r\n    },\r\n    monthSelectContatiner: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        borderColor: '#f0f0f5',\r\n        borderBottomWidth: 1,\r\n        borderTopWidth: 1\r\n    },\r\n    leftArrow: {\r\n        paddingRight: 15\r\n    },\r\n    rightArrow: {\r\n        paddingLeft: 15\r\n    },\r\n    arrowIcon: {\r\n        fontSize: 28,\r\n        color: '#ed5b5c'\r\n    },\r\n    dateText: {\r\n        fontSize: 28,\r\n        color: '#666'\r\n    },\r\n    row: {\r\n        height: 60\r\n    },\r\n    col: {\r\n        paddingLeft: 0,\r\n        paddingBottom: 10,\r\n        marginBottom: 5,\r\n        marginTop: 10,\r\n    },\r\n    colTitle: {\r\n        textAlign: 'center',\r\n        marginBottom: 5,\r\n    },\r\n    textCenter: {\r\n        textAlign: 'center'\r\n    },\r\n    secondRow: {\r\n        height: 50\r\n    },\r\n    buttonContainer: {\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        marginTop: 30,\r\n    }\r\n});\r\n\r\nexport default ReportPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}