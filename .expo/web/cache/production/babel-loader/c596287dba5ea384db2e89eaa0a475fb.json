{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{UnavailabilityError}from'expo-modules-core';import NotificationScheduler from\"./NotificationScheduler\";export default function getAllScheduledNotificationsAsync(){return _regeneratorRuntime.async(function getAllScheduledNotificationsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(NotificationScheduler.getAllScheduledNotificationsAsync){_context.next=2;break;}throw new UnavailabilityError('Notifications','getAllScheduledNotificationsAsync');case 2:_context.next=4;return _regeneratorRuntime.awrap(NotificationScheduler.getAllScheduledNotificationsAsync());case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);}","map":{"version":3,"sources":["../src/getAllScheduledNotificationsAsync.ts"],"names":[],"mappings":"4DAAA,OAAS,mBAAT,KAAoC,mBAApC,CAEA,MAAO,CAAA,qBAAP,+BAGA,cAAe,SAAe,CAAA,iCAAf,iJACR,qBAAqB,CAAC,iCADd,8BAEL,IAAI,CAAA,mBAAJ,CAAwB,eAAxB,CAAyC,mCAAzC,CAFK,yDAKA,qBAAqB,CAAC,iCAAtB,EALA","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationScheduler from './NotificationScheduler';\nimport { NotificationRequest } from './Notifications.types';\n\nexport default async function getAllScheduledNotificationsAsync(): Promise<NotificationRequest[]> {\n  if (!NotificationScheduler.getAllScheduledNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'getAllScheduledNotificationsAsync');\n  }\n\n  return await NotificationScheduler.getAllScheduledNotificationsAsync();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}