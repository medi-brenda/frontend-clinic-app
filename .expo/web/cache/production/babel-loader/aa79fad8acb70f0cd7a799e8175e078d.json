{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import{extendObservable,runInAction}from'mobx';import{newSetting}from\"../models/setting\";export var ConfigStore=function ConfigStore(){var _this=this;_classCallCheck(this,ConfigStore);this.banks=[];this.districts=[];this.specialities=[];this.authorities=[];this.insurers=[];this.benefits=[];this.doctors=[];this.diagnosis=[];this.setBanks=function(banks){runInAction(function(){_this.banks=banks;});};this.setDistricts=function(districts){runInAction(function(){_this.districts=districts;});};this.setSpecialities=function(specialities){runInAction(function(){_this.specialities=specialities;});};this.setAuthorities=function(authorities){runInAction(function(){_this.authorities=authorities;});};this.setBenefits=function(benefits){runInAction(function(){_this.benefits=benefits;});};this.setInsurers=function(insurers){runInAction(function(){_this.insurers=insurers;});};this.setDoctors=function(doctors){runInAction(function(){_this.doctors=doctors;});};this.setDiagnosis=function(diagnosis){runInAction(function(){_this.diagnosis=diagnosis;});};extendObservable(this,{banks:[],districts:[],specialities:[],authorities:[],benefits:[],insurers:[],doctor:[],diagnosis:[],setting:newSetting()});};export default ConfigStore;","map":{"version":3,"names":["extendObservable","runInAction","newSetting","ConfigStore","banks","districts","specialities","authorities","insurers","benefits","doctors","diagnosis","setBanks","setDistricts","setSpecialities","setAuthorities","setBenefits","setInsurers","setDoctors","setDiagnosis","doctor","setting"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/stores/config.ts"],"sourcesContent":["import {extendObservable, runInAction} from 'mobx';\r\nimport {Authority} from '../models/authorities';\r\nimport {Bank} from '../models/bank';\r\nimport {Benefit} from '../models/benefit';\r\nimport {District} from '../models/district';\r\nimport {Insurer} from '../models/insurer';\r\nimport {Option} from '../models/option';\r\nimport {newSetting} from '../models/setting';\r\nimport {Specialities} from '../models/specialities';\r\n\r\nexport class ConfigStore {\r\n    // registers\r\n    banks: Bank[] = [];\r\n    districts: District[] = [];\r\n    specialities: Specialities[] = [];\r\n    authorities: Authority[] = [];\r\n    insurers: Insurer[] = [];\r\n    benefits: Benefit[] = [];\r\n    doctors: Option[] = [];\r\n    diagnosis: Option[] = [];\r\n\r\n    constructor() {\r\n        extendObservable(this, {\r\n            banks: [],\r\n            districts: [],\r\n            specialities: [],\r\n            authorities: [],\r\n            benefits: [],\r\n            insurers: [],\r\n            doctor: [],\r\n            diagnosis: [],\r\n            setting: newSetting()\r\n        });\r\n    }\r\n\r\n    setBanks = (banks: Bank[]) => {\r\n        runInAction(() => {\r\n            this.banks = banks;\r\n        })\r\n    }\r\n\r\n    setDistricts = (districts: District[]) => {\r\n        runInAction(() => {\r\n            this.districts = districts;\r\n        })\r\n    }\r\n\r\n    setSpecialities = (specialities: Specialities[]) => {\r\n        runInAction(() => {\r\n            this.specialities = specialities;\r\n        })\r\n    }\r\n\r\n    setAuthorities = (authorities: Authority[]) => {\r\n        runInAction(() => {\r\n            this.authorities = authorities;\r\n        })\r\n    }\r\n\r\n    setBenefits = (benefits: Benefit[]) => {\r\n        runInAction(() => {\r\n            this.benefits = benefits;\r\n        })\r\n    }\r\n\r\n    setInsurers = (insurers: Insurer[]) => {\r\n        runInAction(() => {\r\n            this.insurers = insurers;\r\n        })\r\n    }\r\n\r\n    setDoctors = (doctors: Option[]) => {\r\n        runInAction(() => {\r\n            this.doctors = doctors;\r\n        })\r\n    }\r\n\r\n    setDiagnosis = (diagnosis: Option[]) => {\r\n        runInAction(() => {\r\n            this.diagnosis = diagnosis;\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default ConfigStore;\r\n"],"mappings":"mEAAA,OAAQA,gBAAR,CAA0BC,WAA1B,KAA4C,MAA5C,CAOA,OAAQC,UAAR,yBAGA,UAAaC,CAAAA,WAAb,CAWI,sBAAc,uDATdC,KASc,CATE,EASF,MARdC,SAQc,CARU,EAQV,MAPdC,YAOc,CAPiB,EAOjB,MANdC,WAMc,CANa,EAMb,MALdC,QAKc,CALQ,EAKR,MAJdC,QAIc,CAJQ,EAIR,MAHdC,OAGc,CAHM,EAGN,MAFdC,SAEc,CAFQ,EAER,MAcdC,QAdc,CAcH,SAACR,KAAD,CAAmB,CAC1BH,WAAW,CAAC,UAAM,CACd,KAAI,CAACG,KAAL,CAAaA,KAAb,CACH,CAFU,CAAX,CAGH,CAlBa,MAoBdS,YApBc,CAoBC,SAACR,SAAD,CAA2B,CACtCJ,WAAW,CAAC,UAAM,CACd,KAAI,CAACI,SAAL,CAAiBA,SAAjB,CACH,CAFU,CAAX,CAGH,CAxBa,MA0BdS,eA1Bc,CA0BI,SAACR,YAAD,CAAkC,CAChDL,WAAW,CAAC,UAAM,CACd,KAAI,CAACK,YAAL,CAAoBA,YAApB,CACH,CAFU,CAAX,CAGH,CA9Ba,MAgCdS,cAhCc,CAgCG,SAACR,WAAD,CAA8B,CAC3CN,WAAW,CAAC,UAAM,CACd,KAAI,CAACM,WAAL,CAAmBA,WAAnB,CACH,CAFU,CAAX,CAGH,CApCa,MAsCdS,WAtCc,CAsCA,SAACP,QAAD,CAAyB,CACnCR,WAAW,CAAC,UAAM,CACd,KAAI,CAACQ,QAAL,CAAgBA,QAAhB,CACH,CAFU,CAAX,CAGH,CA1Ca,MA4CdQ,WA5Cc,CA4CA,SAACT,QAAD,CAAyB,CACnCP,WAAW,CAAC,UAAM,CACd,KAAI,CAACO,QAAL,CAAgBA,QAAhB,CACH,CAFU,CAAX,CAGH,CAhDa,MAkDdU,UAlDc,CAkDD,SAACR,OAAD,CAAuB,CAChCT,WAAW,CAAC,UAAM,CACd,KAAI,CAACS,OAAL,CAAeA,OAAf,CACH,CAFU,CAAX,CAGH,CAtDa,MAwDdS,YAxDc,CAwDC,SAACR,SAAD,CAAyB,CACpCV,WAAW,CAAC,UAAM,CACd,KAAI,CAACU,SAAL,CAAiBA,SAAjB,CACH,CAFU,CAAX,CAGH,CA5Da,CACVX,gBAAgB,CAAC,IAAD,CAAO,CACnBI,KAAK,CAAE,EADY,CAEnBC,SAAS,CAAE,EAFQ,CAGnBC,YAAY,CAAE,EAHK,CAInBC,WAAW,CAAE,EAJM,CAKnBE,QAAQ,CAAE,EALS,CAMnBD,QAAQ,CAAE,EANS,CAOnBY,MAAM,CAAE,EAPW,CAQnBT,SAAS,CAAE,EARQ,CASnBU,OAAO,CAAEnB,UAAU,EATA,CAAP,CAAhB,CAWH,CAvBL,CA2EA,cAAeC,CAAAA,WAAf"},"metadata":{},"sourceType":"module"}