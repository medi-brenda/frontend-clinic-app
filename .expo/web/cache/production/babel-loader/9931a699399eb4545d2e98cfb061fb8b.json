{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{useNavigation}from'@react-navigation/native';import{observer}from'mobx-react';import{Container,View}from'native-base';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import Alert from\"react-native-web/dist/exports/Alert\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{ScrollView}from'react-native-gesture-handler';import{initSetting,saveSettings}from\"../../actions/app\";import TitleBar from\"../../components/titleBar\";import{useStores}from\"../../stores\";import*as _ from'lodash';import SettingListItem from\"./listItem\";import ErrorPage from\"../error\";import Loading from\"../loading\";import MCCButton from\"../../components/mccButton\";import Spinner from'react-native-loading-spinner-overlay';import Config from\"../../utils/config\";import PhoneCall from\"../../components/phoneCall\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SettingDisplayPage=observer(function(){var _useTranslation=useTranslation(),i18n=_useTranslation.i18n,t=_useTranslation.t;var stores=useStores();var navigation=useNavigation();var setting=stores.appStore.setting;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(setting),_useState6=_slicedToArray(_useState5,2),values=_useState6[0],setValues=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),spinner=_useState8[0],setSpinner=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),refresh=_useState10[0],setRefresh=_useState10[1];useEffect(function(){init();},[]);var init=function _callee(){var errorMsg;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.next=3;return _regeneratorRuntime.awrap(initSetting({stores:stores,navigation:navigation,i18n:i18n}));case 3:errorMsg=_context.sent;setLoading(false);setValues(_.cloneDeep(stores.appStore.setting));if(errorMsg){setError(errorMsg);}case 7:case\"end\":return _context.stop();}}},null,null,null,Promise);};var onDisplayIncomeSwitch=function onDisplayIncomeSwitch(){values.displayIncome=!values.displayIncome;setValues(values);setRefresh(!refresh);};var onPhysicalCardSwitch=function onPhysicalCardSwitch(){values.method.physicalCard=!values.method.physicalCard;setValues(values);setRefresh(!refresh);};var onSave=function _callee2(){var errorMsg;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setSpinner(true);_context2.next=3;return _regeneratorRuntime.awrap(saveSettings({stores:stores,navigation:navigation,settings:values,i18n:i18n}));case 3:errorMsg=_context2.sent;if(!errorMsg){Alert.alert(t('Common.Success'),t('Settings.saveSettingsSuccessfully'),[{text:t('Common.Confirm'),onPress:function onPress(){setSpinner(false);}}]);}else{Alert.alert(t('Common.Error'),errorMsg,[{text:t('Common.Confirm'),onPress:function onPress(){setSpinner(false);}}]);}case 5:case\"end\":return _context2.stop();}}},null,null,null,Promise);};return _jsxs(Container,{children:[_jsx(TitleBar,{title:t('Others.display_settings'),onBack:function onBack(){navigation.goBack();}}),_jsxs(ScrollView,{children:[_jsx(Spinner,{visible:spinner,color:'red',size:'large',overlayColor:'rgba(0, 0, 0, 0.25)'}),loading?_jsx(Loading,{}):error?_jsx(ErrorPage,{title:error,onRetry:init}):_jsxs(View,{style:styleSheet.container,children:[_jsx(SettingListItem,{icon:\"cash\",title:t('Settings.DisplayAmountFromNetwork'),value:values.displayIncome,onChange:onDisplayIncomeSwitch}),Config.method.physicalCard?_jsx(SettingListItem,{icon:\"physicalimg\",title:t('PhysicalCard.Card'),value:values.method.physicalCard,onChange:onPhysicalCardSwitch}):undefined,_jsx(View,{style:styleSheet.padding,children:_jsx(MCCButton,{onPress:onSave,text:t('Settings.saveSettings')})})]})]}),_jsx(PhoneCall,{})]});});var styleSheet=StyleSheet.create({container:{paddingLeft:20,paddingRight:20},image:{width:200,height:200,marginTop:10,alignSelf:'center'},title:{paddingLeft:0,paddingBottom:10,marginBottom:5,marginTop:0,fontSize:22,fontWeight:\"bold\",textAlign:\"center\"},context:{paddingLeft:15,paddingRight:10,color:\"rgba(0,0,0,0.4)\",fontSize:14,textAlign:\"left\"},padding:{padding:25}});export default SettingDisplayPage;","map":{"version":3,"names":["useNavigation","observer","Container","View","React","useEffect","useState","useTranslation","ScrollView","initSetting","saveSettings","TitleBar","useStores","_","SettingListItem","ErrorPage","Loading","MCCButton","Spinner","Config","PhoneCall","SettingDisplayPage","i18n","t","stores","navigation","setting","appStore","loading","setLoading","error","setError","values","setValues","spinner","setSpinner","refresh","setRefresh","init","errorMsg","cloneDeep","onDisplayIncomeSwitch","displayIncome","onPhysicalCardSwitch","method","physicalCard","onSave","settings","Alert","alert","text","onPress","goBack","styleSheet","container","undefined","padding","StyleSheet","create","paddingLeft","paddingRight","image","width","height","marginTop","alignSelf","title","paddingBottom","marginBottom","fontSize","fontWeight","textAlign","context","color"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/settingDisplay/index.tsx"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport { observer } from 'mobx-react';\r\nimport { Container, View } from 'native-base';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Alert, Image, StyleSheet, Text } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { initSetting, saveSettings } from '../../actions/app';\r\nimport TitleBar from '../../components/titleBar';\r\nimport { useStores } from '../../stores';\r\nimport * as _ from 'lodash';\r\nimport SettingListItem from './listItem';\r\nimport ErrorPage from '../error';\r\nimport Loading from '../loading';\r\nimport MCCButton from '../../components/mccButton';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport Config from '../../utils/config';\r\nimport PhoneCall from \"../../components/phoneCall\";\r\n\r\nconst SettingDisplayPage = observer(() => {\r\n    const { i18n, t } = useTranslation();\r\n    const stores = useStores();\r\n    const navigation = useNavigation();\r\n\r\n    const { setting } = stores.appStore;\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [values, setValues] = useState(setting);\r\n    const [spinner, setSpinner] = useState(false);\r\n    const [refresh, setRefresh] = useState(false);\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const init = async () => {\r\n        setLoading(true);\r\n        const errorMsg = await initSetting({ stores, navigation, i18n });\r\n        setLoading(false);\r\n        setValues(_.cloneDeep(stores.appStore.setting));\r\n        if (errorMsg) {\r\n            setError(errorMsg)\r\n        }\r\n    }\r\n\r\n    const onDisplayIncomeSwitch = () => {\r\n        values.displayIncome = !values.displayIncome;\r\n        setValues(values);\r\n        setRefresh(!refresh);\r\n    }\r\n\r\n    const onPhysicalCardSwitch = () => {\r\n        values.method.physicalCard = !values.method.physicalCard;\r\n        setValues(values);\r\n        setRefresh(!refresh);\r\n    }\r\n\r\n    const onSave = async () => {\r\n        setSpinner(true);\r\n        const errorMsg = await saveSettings({ stores, navigation, settings: values, i18n });\r\n        if (!errorMsg) {\r\n            Alert.alert(\r\n                t('Common.Success'),\r\n                t('Settings.saveSettingsSuccessfully'),\r\n                [\r\n                    {\r\n                        text: t('Common.Confirm'),\r\n                        onPress: () => {\r\n                            setSpinner(false);\r\n                        }\r\n                    }\r\n                ]\r\n            );\r\n        }\r\n        else {\r\n            Alert.alert(\r\n                t('Common.Error'),\r\n                errorMsg,\r\n                [\r\n                    {\r\n                        text: t('Common.Confirm'),\r\n                        onPress: () => {\r\n                            setSpinner(false);\r\n                        }\r\n                    }\r\n                ]\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <TitleBar\r\n                title={t('Others.display_settings')}\r\n                onBack={() => { navigation.goBack(); }}\r\n            />\r\n            <ScrollView>\r\n                <Spinner\r\n                    visible={spinner}\r\n                    color={'red'}\r\n                    size={'large'}\r\n                    overlayColor={'rgba(0, 0, 0, 0.25)'}\r\n                />\r\n                {\r\n                    loading ? <Loading /> :\r\n                        error ? <ErrorPage title={error} onRetry={init} /> :\r\n                            <View style={styleSheet.container}>\r\n                                <SettingListItem\r\n                                    icon='cash'\r\n                                    title={t('Settings.DisplayAmountFromNetwork')}\r\n                                    value={values.displayIncome}\r\n                                    onChange={onDisplayIncomeSwitch}\r\n                                />\r\n                                {\r\n                                    Config.method.physicalCard ? (\r\n                                        <SettingListItem\r\n                                            icon='physicalimg'\r\n                                            title={t('PhysicalCard.Card')}\r\n                                            value={values.method.physicalCard}\r\n                                            onChange={onPhysicalCardSwitch}\r\n                                        />\r\n                                    ) : undefined\r\n                                }\r\n                                <View style={styleSheet.padding}>\r\n                                    <MCCButton\r\n                                        onPress={onSave}\r\n                                        text={t('Settings.saveSettings')}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                }\r\n\r\n            </ScrollView>\r\n\r\n            <PhoneCall/>\r\n        </Container>\r\n    )\r\n});\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    container: {\r\n        paddingLeft: 20,\r\n        paddingRight: 20\r\n    },\r\n    image: {\r\n        width: 200,\r\n        height: 200,\r\n        marginTop: 10,\r\n        alignSelf: 'center'\r\n    },\r\n    title: {\r\n        paddingLeft: 0,\r\n        paddingBottom: 10,\r\n        marginBottom: 5,\r\n        marginTop: 0,\r\n        fontSize: 22,\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n    },\r\n    context: {\r\n        paddingLeft: 15,\r\n        paddingRight: 10,\r\n        color: \"rgba(0,0,0,0.4)\",\r\n        fontSize: 14,\r\n        textAlign: \"left\",\r\n    },\r\n    padding: {\r\n        padding: 25\r\n    }\r\n});\r\n\r\nexport default SettingDisplayPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}