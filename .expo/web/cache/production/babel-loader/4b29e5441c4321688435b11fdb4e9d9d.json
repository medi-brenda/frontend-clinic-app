{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{UnavailabilityError}from'expo-modules-core';import NotificationPresenter from\"./NotificationPresenterModule\";export default function dismissNotificationAsync(notificationIdentifier){return _regeneratorRuntime.async(function dismissNotificationAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(NotificationPresenter.dismissNotificationAsync){_context.next=2;break;}throw new UnavailabilityError('Notifications','dismissNotificationAsync');case 2:_context.next=4;return _regeneratorRuntime.awrap(NotificationPresenter.dismissNotificationAsync(notificationIdentifier));case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);}","map":{"version":3,"sources":["../src/dismissNotificationAsync.ts"],"names":[],"mappings":"4DAAA,OAAS,mBAAT,KAAoC,mBAApC,CAEA,MAAO,CAAA,qBAAP,qCAEA,cAAe,SAAe,CAAA,wBAAf,CACb,sBADa,uIAGR,qBAAqB,CAAC,wBAHd,8BAIL,IAAI,CAAA,mBAAJ,CAAwB,eAAxB,CAAyC,0BAAzC,CAJK,yDAOA,qBAAqB,CAAC,wBAAtB,CAA+C,sBAA/C,CAPA","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationPresenter from './NotificationPresenterModule';\n\nexport default async function dismissNotificationAsync(\n  notificationIdentifier: string\n): Promise<void> {\n  if (!NotificationPresenter.dismissNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'dismissNotificationAsync');\n  }\n\n  return await NotificationPresenter.dismissNotificationAsync(notificationIdentifier);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}