{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{observer}from'mobx-react';import{Container,Switch,Text,View}from'native-base';import React,{useState}from'react';import{useTranslation}from'react-i18next';import{ScrollView,TouchableOpacity}from'react-native-gesture-handler';import TitleBar from\"../../components/titleBar\";import{useStores}from\"../../stores\";import*as _ from'lodash';import WorkingHourComponent from\"./workingHour\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{saveServiceHours}from\"../../actions/auth\";import{useNavigation}from'@react-navigation/native';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ServiceHour=observer(function(){var stores=useStores();var _useTranslation=useTranslation(),t=_useTranslation.t;var navigation=useNavigation();var _useState=useState(_.cloneDeep(stores.authStore.schedules)),_useState2=_slicedToArray(_useState,1),schedules=_useState2[0];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),refresh=_useState4[0],setRefresh=_useState4[1];var onWorkingHourChange=function onWorkingHourChange(){setRefresh(!refresh);};var onSave=function onSave(){saveServiceHours({stores:stores,data:schedules,navigation:navigation});};return _jsxs(Container,{children:[_jsx(TitleBar,{title:t('Register.Title'),onNext:onSave,onNextTitle:t('Common.Save'),noReturn:true}),_jsx(ScrollView,{style:{marginTop:8,paddingHorizontal:25},children:_jsx(View,{style:{flex:1},children:_.map(schedules,function(schedule,index){return _jsxs(View,{style:styleSheet.scheduleContainer,children:[_jsxs(View,{style:styleSheet.status,children:[_jsx(Text,{style:styleSheet.index,children:t(\"ServiceTimes.\"+index)}),_jsx(Switch,{style:styleSheet.switch,value:!schedule.closed,onValueChange:function onValueChange(){schedule.closed=!schedule.closed;onWorkingHourChange();}}),_jsx(Text,{style:{fontSize:18},children:schedule.closed?t('Clinic.Closed'):t('Clinic.Open')})]}),schedule.closed?_jsx(View,{style:{marginTop:15}}):_jsxs(_Fragment,{children:[_jsx(View,{style:{flex:1,alignSelf:'stretch',flexDirection:'row',marginBottom:2},children:_jsx(View,{style:{flex:2,alignSelf:'stretch',flexDirection:'column',marginBottom:2},children:_.map(schedule.workingHours,function(workingHour,index){return _jsx(WorkingHourComponent,{value:workingHour,index:Number(index),onChange:function onChange(value){onWorkingHourChange();},onRemove:function onRemove(){schedule.workingHours.splice(index,1);onWorkingHourChange();}},\"working-hour-\"+index);})})}),_jsx(View,{style:{flex:1,flexDirection:'row'},children:_jsx(TouchableOpacity,{style:{marginTop:10,marginLeft:5},onPress:function onPress(e){schedule.workingHours.push({from:{h:10,m:0},to:{h:18,m:30}});onWorkingHourChange();},children:_jsx(Text,{style:{color:'red'},children:t('Clinic.AddServiceHour')})})})]})]},\"schedules-\"+index);})})})]});});var styleSheet=StyleSheet.create({scheduleContainer:{flex:1,flexDirection:'column'},status:{flex:1,flexDirection:'row',marginTop:20,alignItems:'center'},index:{flex:1,fontSize:18},switch:{right:60,position:'absolute'}});export default ServiceHour;","map":{"version":3,"names":["observer","Container","Switch","Text","View","React","useState","useTranslation","ScrollView","TouchableOpacity","TitleBar","useStores","_","WorkingHourComponent","saveServiceHours","useNavigation","ServiceHour","stores","t","navigation","cloneDeep","authStore","schedules","refresh","setRefresh","onWorkingHourChange","onSave","data","marginTop","paddingHorizontal","flex","map","schedule","index","styleSheet","scheduleContainer","status","switch","closed","fontSize","alignSelf","flexDirection","marginBottom","workingHours","workingHour","Number","value","splice","marginLeft","e","push","from","h","m","to","color","StyleSheet","create","alignItems","right","position"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/register/serviceHour.tsx"],"sourcesContent":["import { observer } from 'mobx-react';\r\nimport { Container, Item, Label, Switch, Text, View } from 'native-base';\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\r\nimport TitleBar from '../../components/titleBar';\r\nimport { useStores } from '../../stores';\r\nimport * as _ from 'lodash';\r\nimport WorkingHourComponent from './workingHour';\r\nimport { StyleSheet } from 'react-native';\r\nimport { saveServiceHours } from '../../actions/auth';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst ServiceHour = observer(() => {\r\n    const stores = useStores();\r\n    const { t } = useTranslation();\r\n    const navigation = useNavigation();\r\n\r\n\r\n    const [schedules] = useState(_.cloneDeep(stores.authStore.schedules));\r\n    const [refresh, setRefresh] = useState(false);\r\n\r\n    const onWorkingHourChange = () => {\r\n        setRefresh(!refresh);\r\n    }\r\n\r\n\r\n    const onSave = () => {\r\n        saveServiceHours({\r\n            stores,\r\n            data: schedules,\r\n            navigation\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <TitleBar\r\n                title={t('Register.Title')}\r\n                onNext={onSave}\r\n                onNextTitle={t('Common.Save')}\r\n                noReturn={true}\r\n            />\r\n            <ScrollView\r\n                style={{\r\n                    marginTop: 8,\r\n                    paddingHorizontal: 25,\r\n                }}\r\n            >\r\n                <View style={{ flex: 1 }}>\r\n                    {\r\n                        _.map(schedules, (schedule, index) => (\r\n                            <View key={`schedules-${index}`} style={styleSheet.scheduleContainer}>\r\n                                <View style={styleSheet.status}>\r\n                                    <Text style={styleSheet.index}>\r\n                                        {t(`ServiceTimes.${index}`)}\r\n                                    </Text>\r\n                                    <Switch\r\n                                        style={styleSheet.switch}\r\n                                        value={!schedule.closed}\r\n                                        onValueChange={() => {\r\n                                            schedule.closed = !schedule.closed;\r\n                                            onWorkingHourChange();\r\n                                        }}\r\n                                    />\r\n\r\n                                    <Text style={{ fontSize: 18 }}>\r\n                                        {schedule.closed ? t('Clinic.Closed') : t('Clinic.Open')}\r\n                                    </Text>\r\n                                </View>\r\n\r\n                                {schedule.closed ? (\r\n                                    <View style={{ marginTop: 15 }} />\r\n                                ) : (\r\n                                        <>\r\n                                            <View\r\n                                                style={{\r\n                                                    flex: 1,\r\n                                                    alignSelf: 'stretch',\r\n                                                    flexDirection: 'row',\r\n                                                    marginBottom: 2,\r\n                                                }}\r\n                                            >\r\n                                                <View\r\n                                                    style={{\r\n                                                        flex: 2,\r\n                                                        alignSelf: 'stretch',\r\n                                                        flexDirection: 'column',\r\n                                                        marginBottom: 2,\r\n                                                    }}\r\n                                                >\r\n                                                    {\r\n                                                        _.map(schedule.workingHours, (workingHour, index) => (\r\n                                                            <WorkingHourComponent\r\n                                                                key={`working-hour-${index}`}\r\n                                                                value={workingHour}\r\n                                                                index={Number(index)}\r\n                                                                onChange={(value) => {\r\n                                                                    onWorkingHourChange();\r\n                                                                }}\r\n                                                                onRemove={() => {\r\n                                                                    schedule.workingHours.splice(index, 1);\r\n                                                                    onWorkingHourChange();\r\n                                                                }}\r\n                                                            />\r\n                                                        ))\r\n                                                    }\r\n                                                </View>\r\n                                            </View>\r\n                                            <View\r\n                                                style={{\r\n                                                    flex: 1,\r\n                                                    flexDirection: 'row',\r\n                                                }}\r\n                                            >\r\n                                                <TouchableOpacity\r\n                                                    style={{\r\n                                                        marginTop: 10,\r\n                                                        marginLeft: 5,\r\n                                                    }}\r\n                                                    onPress={(e) => {\r\n                                                        schedule.workingHours.push({\r\n                                                            from: { h: 10, m: 0 },\r\n                                                            to: { h: 18, m: 30 }\r\n                                                        });\r\n                                                        onWorkingHourChange();\r\n                                                    }}\r\n                                                >\r\n                                                    <Text style={{ color: 'red' }}>\r\n                                                        {t('Clinic.AddServiceHour')}\r\n                                                    </Text>\r\n                                                </TouchableOpacity>\r\n                                            </View>\r\n                                        </>\r\n                                    )}\r\n                            </View>\r\n\r\n                        ))\r\n                    }\r\n                </View>\r\n            </ScrollView>\r\n        </Container>\r\n    )\r\n});\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    scheduleContainer: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n    },\r\n    status: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        marginTop: 20,\r\n        alignItems: 'center',\r\n    },\r\n    index: {\r\n        flex: 1,\r\n        fontSize: 18\r\n    },\r\n    switch: {\r\n        right: 60,\r\n        position: 'absolute',\r\n    }\r\n})\r\n\r\nexport default ServiceHour;"],"mappings":"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"},"metadata":{},"sourceType":"module"}