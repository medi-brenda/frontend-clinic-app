{"ast":null,"code":"import*as _ from'lodash';export var validateEmail=function validateEmail(email){var reg=/\\S+@\\S+\\.\\S+/;return reg.test(String(email).toLowerCase());};export var validatePass=function validatePass(password){var PassLength=password==null?void 0:password.length;return PassLength>=6;};export var validateName=function validateName(name){return(name==null?void 0:name.length)>0;};export var validatePhone=function validatePhone(phone){return(phone==null?void 0:phone.length)==8;};export var validateBankAccountNumber=function validateBankAccountNumber(accountNumber){return(accountNumber==null?void 0:accountNumber.length)>=6&&(accountNumber==null?void 0:accountNumber.length)<=12;};export var validateClinicName=function validateClinicName(name){return(name==null?void 0:name.length)>0;};export var validateRegion=function validateRegion(region){return!!region&&region!=='Select';};export var validateDistrict=function validateDistrict(district){return!!district;};export var validatePhoneAllowEmpty=function validatePhoneAllowEmpty(phone){return!phone||phone.length===8;};export var validateGender=function validateGender(gender){return!!gender;};export var validateMedicalServices=function validateMedicalServices(medicalServices){return medicalServices.length&&!medicalServices.find(function(medi){return!medi;})?true:false;};export var validateAuthority=function validateAuthority(authority){return!!authority;};export var validateDocCert=function validateDocCert(cert){return!!cert;};export var validateConsulatation=function validateConsulatation(consultations){return consultations.map(function(consultation){return consultation.benefit&&consultation.insurer&&Number.isInteger(parseInt(consultation.price))&&parseInt(consultation.price)>=0;}).every(function(i){return i===true;});};export var validateDiagnosis=function validateDiagnosis(dianosis){return dianosis.length&&dianosis.length<3;};export var validateExtraMed=function validateExtraMed(extraMed){var reg=/[*|,\":<>\\[\\]{}`';()@&$#%]/;if(_.uniq(extraMed.map(function(med){return med.code;})).length!==extraMed.length){return false;}return!_.find(extraMed,function(med){var price=Number(med.price||0);if(isNaN(price)){return true;}if(!med.code||!price){return true;}if(med.code&&!price){return true;}if(price&&!med.code){return true;}if(med.code.length>199){return true;}if(reg.test(med.code)){return true;}});};","map":{"version":3,"names":["_","validateEmail","email","reg","test","String","toLowerCase","validatePass","password","PassLength","length","validateName","name","validatePhone","phone","validateBankAccountNumber","accountNumber","validateClinicName","validateRegion","region","validateDistrict","district","validatePhoneAllowEmpty","validateGender","gender","validateMedicalServices","medicalServices","find","medi","validateAuthority","authority","validateDocCert","cert","validateConsulatation","consultations","map","consultation","benefit","insurer","Number","isInteger","parseInt","price","every","i","validateDiagnosis","dianosis","validateExtraMed","extraMed","uniq","med","code","isNaN"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/utils/validate.ts"],"sourcesContent":["import { Consultation } from \"../models/consultation\";\r\nimport { ExtraMed } from \"../models/extraMed\";\r\nimport { Option } from \"../models/option\";\r\nimport * as _ from 'lodash';\r\nimport { Item } from \"native-base\";\r\n\r\nexport const validateEmail = (email: string) => {\r\n    var reg = /\\S+@\\S+\\.\\S+/;\r\n    return reg.test(String(email).toLowerCase());\r\n};\r\n\r\nexport const validatePass = (password: string) => {\r\n    let PassLength = password?.length;\r\n    return PassLength >= 6;\r\n};\r\n\r\nexport const validateName = (name: string) => {\r\n    return name?.length > 0;\r\n};\r\n\r\nexport const validatePhone = (phone: string) => {\r\n    return phone?.length == 8;\r\n};\r\n\r\nexport const validateBankAccountNumber = (accountNumber: string) => {\r\n    return accountNumber?.length >= 6 && accountNumber?.length <= 12;\r\n};\r\n\r\nexport const validateClinicName = (name: string) => {\r\n    return name?.length > 0;\r\n};\r\n\r\nexport const validateRegion = (region: string) => {\r\n    return !!region && region !== 'Select';\r\n};\r\n\r\nexport const validateDistrict = (district: string) => {\r\n    return !!district;\r\n};\r\n\r\nexport const validatePhoneAllowEmpty = (phone: string) => {\r\n    return !phone || phone.length === 8;\r\n};\r\n\r\nexport const validateGender = (gender: string) => {\r\n    return !!gender;\r\n}\r\n\r\nexport const validateMedicalServices = (medicalServices: string[]) => {\r\n    return medicalServices.length && !medicalServices.find(medi => !medi) ? true : false;\r\n};\r\n\r\nexport const validateAuthority = (authority: string) => {\r\n    return !!authority;\r\n}\r\n\r\nexport const validateDocCert = (cert: string) => {\r\n    return !!cert;\r\n}\r\n\r\nexport const validateConsulatation = (consultations: Consultation[]) => {\r\n    return consultations\r\n        .map(\r\n            (consultation) =>\r\n                consultation.benefit &&\r\n                consultation.insurer &&\r\n                Number.isInteger(parseInt(consultation.price)) &&\r\n                parseInt(consultation.price) >= 0\r\n        )\r\n        .every((i) => i === true);\r\n}\r\n\r\nexport const validateDiagnosis = (dianosis: Option[]) => {\r\n    return dianosis.length && dianosis.length < 3;\r\n}\r\n\r\nexport const validateExtraMed = (extraMed: ExtraMed[]) => {\r\n    const reg = /[*|,\":<>\\[\\]{}`';()@&$#%]/;\r\n    if (_.uniq(extraMed.map(med => med.code)).length !== extraMed.length) {\r\n        return false;\r\n    }\r\n\r\n    return !_.find(extraMed, (med) => {\r\n        const price = Number(med.price || 0);\r\n        if (isNaN(price)) {\r\n            return true;\r\n        }\r\n\r\n        if (!med.code || !price) {\r\n            return true;\r\n        }\r\n\r\n        if (med.code && !price) {\r\n            return true;\r\n        }\r\n\r\n        if (price && !med.code) {\r\n            return true;\r\n        }\r\n\r\n        if (med.code.length > 199) {\r\n            return true;\r\n        }\r\n\r\n        if (reg.test(med.code)) {\r\n            return true;\r\n        }\r\n    });\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}