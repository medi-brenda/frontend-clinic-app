{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useEffect,useState}from'react';import{useNavigation}from'@react-navigation/native';import{useTranslation}from'react-i18next';import Alert from\"react-native-web/dist/exports/Alert\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{Container,Text,View}from'native-base';import{useStores}from\"../../stores\";import{getAllDoctors,getBenefits,getPendingListItems}from\"../../actions/config\";import TitleBar from\"../../components/titleBar\";import ErrorPage from\"../error\";import Loading from\"../loading\";import RenderPendingList from\"./renderList\";import{observer}from\"mobx-react\";import PhoneCall from\"../../components/phoneCall\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SelectPendingListPage=observer(function(){var _useTranslation=useTranslation(),t=_useTranslation.t,i18n=_useTranslation.i18n;var stores=useStores();var navigation=useNavigation();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),refreshing=_useState6[0],setRefreshing=_useState6[1];var pendingItems=stores.dataStore.pendingItems;useEffect(function(){getData();},[]);var onRefresh=function _callee(){var errorMsg;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setRefreshing(true);_context.next=3;return _regeneratorRuntime.awrap(getPendingListItems({stores:stores,i18n:i18n}));case 3:errorMsg=_context.sent;if(errorMsg){Alert.alert(t('Common.Error'),errorMsg,[{text:t('Common.Confirm'),onPress:function onPress(){setRefreshing(false);}}]);}else{setRefreshing(false);}case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);};var getData=function _callee2(){var pendingListErrorMsg,getBenefitsErrorMsg,getDoctorListErrorMsg,errorMsg;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoading(true);_context2.next=3;return _regeneratorRuntime.awrap(getPendingListItems({stores:stores,i18n:i18n}));case 3:pendingListErrorMsg=_context2.sent;_context2.next=6;return _regeneratorRuntime.awrap(getBenefits({stores:stores}));case 6:getBenefitsErrorMsg=_context2.sent;_context2.next=9;return _regeneratorRuntime.awrap(getAllDoctors({stores:stores}));case 9:getDoctorListErrorMsg=_context2.sent;errorMsg=pendingListErrorMsg||getDoctorListErrorMsg||getBenefitsErrorMsg;setLoading(false);if(errorMsg){setError(errorMsg);}case 13:case\"end\":return _context2.stop();}}},null,null,null,Promise);};return _jsxs(Container,{children:[_jsx(TitleBar,{title:t('Modify.SelectPendingItem'),onBack:function onBack(){navigation.reset({index:0,routes:[{name:'Home'}]});}}),_jsx(View,{style:styles.header,children:_jsx(Text,{style:styles.headerText,children:t('Modify.PendingItemHeader')})}),error?_jsx(ErrorPage,{title:error,onRetry:getData}):loading?_jsx(Loading,{}):_jsxs(React.Fragment,{children:[_jsx(RenderPendingList,{pendingListItems:pendingItems,onRefresh:onRefresh,refreshing:refreshing}),_jsx(PhoneCall,{})]})]});});var styles=StyleSheet.create({header:{height:50,alignItems:'center',justifyContent:'center'},headerText:{fontWeight:'700'}});export default SelectPendingListPage;","map":{"version":3,"names":["React","useEffect","useState","useNavigation","useTranslation","Container","Text","View","useStores","getAllDoctors","getBenefits","getPendingListItems","TitleBar","ErrorPage","Loading","RenderPendingList","observer","PhoneCall","SelectPendingListPage","t","i18n","stores","navigation","error","setError","loading","setLoading","refreshing","setRefreshing","pendingItems","dataStore","getData","onRefresh","errorMsg","Alert","alert","text","onPress","pendingListErrorMsg","getBenefitsErrorMsg","getDoctorListErrorMsg","reset","index","routes","name","styles","header","headerText","StyleSheet","create","height","alignItems","justifyContent","fontWeight"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/selectPendingList/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Alert, StyleSheet } from 'react-native';\r\nimport { Container, Text, View } from 'native-base';\r\nimport { useStores } from '../../stores';\r\nimport {getAllDoctors, getBenefits, getDoctors, getPendingListItems} from '../../actions/config';\r\nimport TitleBar from '../../components/titleBar';\r\nimport ErrorPage from '../error';\r\nimport Loading from '../loading';\r\nimport RenderPendingList from './renderList';\r\nimport {observer} from \"mobx-react\";\r\nimport PhoneCall from \"../../components/phoneCall\";\r\n\r\nconst SelectPendingListPage = observer(() => {\r\n  const {\r\n    t,\r\n    i18n,\r\n  } = useTranslation();\r\n  const stores = useStores();\r\n  const navigation = useNavigation();\r\n\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const { pendingItems } = stores.dataStore;\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const onRefresh = async () => {\r\n    setRefreshing(true);\r\n    const errorMsg = await getPendingListItems({\r\n      stores,\r\n      i18n,\r\n    });\r\n    if (errorMsg) {\r\n      Alert.alert(\r\n        t('Common.Error'),\r\n        errorMsg,\r\n        [\r\n          {\r\n            text: t('Common.Confirm'),\r\n            onPress: () => {\r\n              setRefreshing(false);\r\n            },\r\n          },\r\n        ],\r\n      );\r\n    } else {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    const pendingListErrorMsg = await getPendingListItems({\r\n      stores,\r\n      i18n,\r\n    });\r\n\r\n    const getBenefitsErrorMsg= await getBenefits({stores});\r\n    const getDoctorListErrorMsg= await getAllDoctors({ stores});\r\n\r\n\r\n    const errorMsg=pendingListErrorMsg||getDoctorListErrorMsg||getBenefitsErrorMsg;\r\n    setLoading(false);\r\n    if (errorMsg) {\r\n      setError(errorMsg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <TitleBar\r\n        title={t('Modify.SelectPendingItem')}\r\n        onBack={() => {\r\n          navigation.reset({\r\n            index: 0,\r\n            routes: [{ name: 'Home' }],\r\n          });\r\n        }}\r\n      />\r\n\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerText}>\r\n          {\r\n            t('Modify.PendingItemHeader')\r\n          }\r\n        </Text>\r\n      </View>\r\n\r\n\r\n\r\n\r\n      {\r\n        error\r\n          ? <ErrorPage title={error} onRetry={getData} />\r\n          : loading ? <Loading />\r\n            : (\r\n              <React.Fragment>\r\n                <RenderPendingList\r\n                  pendingListItems={pendingItems}\r\n                  onRefresh={onRefresh}\r\n                  refreshing={refreshing}\r\n                />\r\n\r\n                <PhoneCall/>\r\n              </React.Fragment>\r\n            )\r\n      }\r\n\r\n    </Container>\r\n  );\r\n});\r\n\r\nconst styles=StyleSheet.create({\r\n  header:{\r\n    height:50,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n  },\r\n  headerText:{\r\n    fontWeight:'700'\r\n  }\r\n})\r\nexport default SelectPendingListPage;\r\n"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,aAAT,KAA8B,0BAA9B,CACA,OAASC,cAAT,KAA+B,eAA/B,C,wHAEA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,IAA1B,KAAsC,aAAtC,CACA,OAASC,SAAT,oBACA,OAAQC,aAAR,CAAuBC,WAAvB,CAAgDC,mBAAhD,4BACA,MAAOC,CAAAA,QAAP,iCACA,MAAOC,CAAAA,SAAP,gBACA,MAAOC,CAAAA,OAAP,kBACA,MAAOC,CAAAA,iBAAP,oBACA,OAAQC,QAAR,KAAuB,YAAvB,CACA,MAAOC,CAAAA,SAAP,kC,wFAEA,GAAMC,CAAAA,qBAAqB,CAAGF,QAAQ,CAAC,UAAM,CAC3C,oBAGIZ,cAAc,EAHlB,CACEe,CADF,iBACEA,CADF,CAEEC,IAFF,iBAEEA,IAFF,CAIA,GAAMC,CAAAA,MAAM,CAAGb,SAAS,EAAxB,CACA,GAAMc,CAAAA,UAAU,CAAGnB,aAAa,EAAhC,CAEA,cAA0BD,QAAQ,CAAC,EAAD,CAAlC,wCAAOqB,KAAP,eAAcC,QAAd,eACA,eAA8BtB,QAAQ,CAAC,KAAD,CAAtC,yCAAOuB,OAAP,eAAgBC,UAAhB,eACA,eAAoCxB,QAAQ,CAAC,KAAD,CAA5C,yCAAOyB,UAAP,eAAmBC,aAAnB,eAEA,GAAQC,CAAAA,YAAR,CAAyBR,MAAM,CAACS,SAAhC,CAAQD,YAAR,CAEA5B,SAAS,CAAC,UAAM,CACd8B,OAAO,GACR,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMC,CAAAA,SAAS,CAAG,iJAChBJ,aAAa,CAAC,IAAD,CAAb,CADgB,iDAEOjB,mBAAmB,CAAC,CACzCU,MAAM,CAANA,MADyC,CAEzCD,IAAI,CAAJA,IAFyC,CAAD,CAF1B,SAEVa,QAFU,eAMhB,GAAIA,QAAJ,CAAc,CACZC,KAAK,CAACC,KAAN,CACEhB,CAAC,CAAC,cAAD,CADH,CAEEc,QAFF,CAGE,CACE,CACEG,IAAI,CAAEjB,CAAC,CAAC,gBAAD,CADT,CAEEkB,OAAO,CAAE,kBAAM,CACbT,aAAa,CAAC,KAAD,CAAb,CACD,CAJH,CADF,CAHF,EAYD,CAbD,IAaO,CACLA,aAAa,CAAC,KAAD,CAAb,CACD,CArBe,qEAAlB,CAwBA,GAAMG,CAAAA,OAAO,CAAG,oNACdL,UAAU,CAAC,IAAD,CAAV,CADc,kDAEoBf,mBAAmB,CAAC,CACpDU,MAAM,CAANA,MADoD,CAEpDD,IAAI,CAAJA,IAFoD,CAAD,CAFvC,SAERkB,mBAFQ,kEAOmB5B,WAAW,CAAC,CAACW,MAAM,CAANA,MAAD,CAAD,CAP9B,SAORkB,mBAPQ,kEAQqB9B,aAAa,CAAC,CAAEY,MAAM,CAANA,MAAF,CAAD,CARlC,SAQRmB,qBARQ,gBAWRP,QAXQ,CAWCK,mBAAmB,EAAEE,qBAArB,EAA4CD,mBAX7C,CAYdb,UAAU,CAAC,KAAD,CAAV,CACA,GAAIO,QAAJ,CAAc,CACZT,QAAQ,CAACS,QAAD,CAAR,CACD,CAfa,uEAAhB,CAkBA,MACE,OAAC,SAAD,YACE,KAAC,QAAD,EACE,KAAK,CAAEd,CAAC,CAAC,0BAAD,CADV,CAEE,MAAM,CAAE,iBAAM,CACZG,UAAU,CAACmB,KAAX,CAAiB,CACfC,KAAK,CAAE,CADQ,CAEfC,MAAM,CAAE,CAAC,CAAEC,IAAI,CAAE,MAAR,CAAD,CAFO,CAAjB,EAID,CAPH,EADF,CAWE,KAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACC,MAApB,UACE,KAAC,IAAD,EAAM,KAAK,CAAED,MAAM,CAACE,UAApB,UAEI5B,CAAC,CAAC,0BAAD,CAFL,EADF,EAXF,CAuBII,KAAK,CACD,KAAC,SAAD,EAAW,KAAK,CAAEA,KAAlB,CAAyB,OAAO,CAAEQ,OAAlC,EADC,CAEDN,OAAO,CAAG,KAAC,OAAD,IAAH,CAEL,MAAC,KAAD,CAAO,QAAP,YACE,KAAC,iBAAD,EACE,gBAAgB,CAAEI,YADpB,CAEE,SAAS,CAAEG,SAFb,CAGE,UAAU,CAAEL,UAHd,EADF,CAOE,KAAC,SAAD,IAPF,GA3BV,GADF,CA0CD,CAtGqC,CAAtC,CAwGA,GAAMkB,CAAAA,MAAM,CAACG,UAAU,CAACC,MAAX,CAAkB,CAC7BH,MAAM,CAAC,CACLI,MAAM,CAAC,EADF,CAELC,UAAU,CAAC,QAFN,CAGLC,cAAc,CAAC,QAHV,CADsB,CAM7BL,UAAU,CAAC,CACTM,UAAU,CAAC,KADF,CANkB,CAAlB,CAAb,CAUA,cAAenC,CAAAA,qBAAf"},"metadata":{},"sourceType":"module"}