{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useEffect,useState}from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import CustomErrorBoundary from\"./errors\";import AuthNavigator from\"./routers/auth\";import{observer}from'mobx-react';import{initApp}from\"./actions/app\";import{useStores}from\"./stores\";import{useTranslation}from'react-i18next';import Loading from\"./pages/loading\";import MainNavigator from\"./routers/main\";import ErrorPage from\"./pages/error\";import*as Notifications from'expo-notifications';import{jsx as _jsx}from\"react/jsx-runtime\";Notifications.setNotificationHandler({handleNotification:function handleNotification(){return _regeneratorRuntime.async(function handleNotification$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",{shouldShowAlert:true,shouldPlaySound:true,shouldSetBadge:false});case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);}});var App=observer(function(){var stores=useStores();var _useTranslation=useTranslation(),i18n=_useTranslation.i18n,t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),appState=_useState6[0],setAppState=_useState6[1];useEffect(function(){StatusBar.setBarStyle(\"light-content\");init();},[]);var init=function _callee(){var errorMsg;return _regeneratorRuntime.async(function _callee$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoading(true);_context2.next=3;return _regeneratorRuntime.awrap(initApp({stores:stores,i18n:i18n,platform:Platform.OS}));case 3:errorMsg=_context2.sent;setLoading(false);console.log('errorMsg in App.tsx:',errorMsg);if(errorMsg){setError(errorMsg);}case 7:case\"end\":return _context2.stop();}}},null,null,null,Promise);};if(loading){return _jsx(CustomErrorBoundary,{children:_jsx(Loading,{})});}if(error){return _jsx(CustomErrorBoundary,{children:_jsx(ErrorPage,{title:error,onRetry:init})});}if(!stores.appStore.token){return _jsx(CustomErrorBoundary,{children:_jsx(AuthNavigator,{})});}return _jsx(CustomErrorBoundary,{children:_jsx(MainNavigator,{})});});export default App;","map":{"version":3,"names":["React","useEffect","useState","CustomErrorBoundary","AuthNavigator","observer","initApp","useStores","useTranslation","Loading","MainNavigator","ErrorPage","Notifications","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","App","stores","i18n","t","loading","setLoading","error","setError","appState","setAppState","StatusBar","setBarStyle","init","platform","Platform","OS","errorMsg","console","log","appStore","token"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Platform, StatusBar, AppState } from \"react-native\";\r\nimport CustomErrorBoundary from './errors';\r\nimport AuthNavigator from './routers/auth';\r\nimport { observer } from 'mobx-react';\r\nimport { initApp, checkCodePush } from './actions/app';\r\nimport { useStores } from './stores';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Loading from './pages/loading';\r\nimport MainNavigator from './routers/main';\r\nimport ErrorPage from './pages/error';\r\nimport * as Notifications from 'expo-notifications';\r\nimport * as _ from 'lodash';\r\nimport { useNavigation } from '@react-navigation/native';\r\n// import { useNavigation } from '@react-navigation/native';\r\n\r\nNotifications.setNotificationHandler({\r\n    handleNotification: async () => ({\r\n        shouldShowAlert: true,\r\n        shouldPlaySound: true,\r\n        shouldSetBadge: false,\r\n    }),\r\n});\r\n\r\nconst App = observer(() => {\r\n    const stores = useStores();\r\n    const { i18n, t } = useTranslation();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [appState, setAppState] = useState('');\r\n\r\n    useEffect(() => {\r\n        StatusBar.setBarStyle(\"light-content\");\r\n        init();\r\n\r\n        // AppState.addEventListener('change', handleAppStateChange);\r\n\r\n        // // returned function will be called on component unmount \r\n        // return () => {\r\n        //     AppState.removeEventListener('change', handleAppStateChange);\r\n        // }\r\n    }, []);\r\n\r\n    // const handleAppStateChange = async (nextAppState: string) => {\r\n    //     if (appState.match(/inactive|background/) && nextAppState === 'active') {\r\n    //         console.log('App has come to the foreground!')\r\n    //     }\r\n    //     else {\r\n    //         await checkCodePush();\r\n    //     }\r\n    //     setAppState(nextAppState);\r\n    // };\r\n\r\n    const init = async () => {\r\n        setLoading(true);\r\n        const errorMsg = await initApp({ stores, i18n, platform: Platform.OS });\r\n        setLoading(false);\r\n        console.log('errorMsg in App.tsx:', errorMsg);\r\n\r\n        if (errorMsg) {\r\n            setError(errorMsg);\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <CustomErrorBoundary>\r\n                <Loading />\r\n            </CustomErrorBoundary>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <CustomErrorBoundary>\r\n                <ErrorPage title={error} onRetry={init} />\r\n            </CustomErrorBoundary>\r\n        );\r\n    }\r\n\r\n    if (!stores.appStore.token) {\r\n        return (\r\n            <CustomErrorBoundary>\r\n                <AuthNavigator />\r\n            </CustomErrorBoundary>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <CustomErrorBoundary>\r\n            <MainNavigator />\r\n        </CustomErrorBoundary>\r\n    )\r\n});\r\n\r\nexport default App;"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAAmCC,QAAnC,KAAmD,OAAnD,C,4HAEA,MAAOC,CAAAA,mBAAP,gBACA,MAAOC,CAAAA,aAAP,sBACA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,OAAT,qBACA,OAASC,SAAT,gBACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,OAAP,uBACA,MAAOC,CAAAA,aAAP,sBACA,MAAOC,CAAAA,SAAP,qBACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,oBAA/B,C,2CAKAA,aAAa,CAACC,sBAAd,CAAqC,CACjCC,kBAAkB,CAAE,0LAAa,CAC7BC,eAAe,CAAE,IADY,CAE7BC,eAAe,CAAE,IAFY,CAG7BC,cAAc,CAAE,KAHa,CAAb,uEADa,CAArC,EAQA,GAAMC,CAAAA,GAAG,CAAGb,QAAQ,CAAC,UAAM,CACvB,GAAMc,CAAAA,MAAM,CAAGZ,SAAS,EAAxB,CACA,oBAAoBC,cAAc,EAAlC,CAAQY,IAAR,iBAAQA,IAAR,CAAcC,CAAd,iBAAcA,CAAd,CAEA,cAA8BnB,QAAQ,CAAC,KAAD,CAAtC,wCAAOoB,OAAP,eAAgBC,UAAhB,eACA,eAA0BrB,QAAQ,CAAC,EAAD,CAAlC,yCAAOsB,KAAP,eAAcC,QAAd,eACA,eAAgCvB,QAAQ,CAAC,EAAD,CAAxC,yCAAOwB,QAAP,eAAiBC,WAAjB,eAEA1B,SAAS,CAAC,UAAM,CACZ2B,SAAS,CAACC,WAAV,CAAsB,eAAtB,EACAC,IAAI,GAQP,CAVQ,CAUN,EAVM,CAAT,CAsBA,GAAMA,CAAAA,IAAI,CAAG,oJACTP,UAAU,CAAC,IAAD,CAAV,CADS,kDAEcjB,OAAO,CAAC,CAAEa,MAAM,CAANA,MAAF,CAAUC,IAAI,CAAJA,IAAV,CAAgBW,QAAQ,CAAEC,QAAQ,CAACC,EAAnC,CAAD,CAFrB,SAEHC,QAFG,gBAGTX,UAAU,CAAC,KAAD,CAAV,CACAY,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAoCF,QAApC,EAEA,GAAIA,QAAJ,CAAc,CACVT,QAAQ,CAACS,QAAD,CAAR,CACH,CARQ,sEAAb,CAWA,GAAIZ,OAAJ,CAAa,CACT,MACI,MAAC,mBAAD,WACI,KAAC,OAAD,IADJ,EADJ,CAKH,CAED,GAAIE,KAAJ,CAAW,CACP,MACI,MAAC,mBAAD,WACI,KAAC,SAAD,EAAW,KAAK,CAAEA,KAAlB,CAAyB,OAAO,CAAEM,IAAlC,EADJ,EADJ,CAKH,CAED,GAAI,CAACX,MAAM,CAACkB,QAAP,CAAgBC,KAArB,CAA4B,CACxB,MACI,MAAC,mBAAD,WACI,KAAC,aAAD,IADJ,EADJ,CAKH,CAED,MACI,MAAC,mBAAD,WACI,KAAC,aAAD,IADJ,EADJ,CAKH,CAtEmB,CAApB,CAwEA,cAAepB,CAAAA,GAAf"},"metadata":{},"sourceType":"module"}