{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{UnavailabilityError}from'expo-modules-core';import NotificationPresenter from\"./NotificationPresenterModule\";export default function dismissAllNotificationsAsync(){return _regeneratorRuntime.async(function dismissAllNotificationsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(NotificationPresenter.dismissAllNotificationsAsync){_context.next=2;break;}throw new UnavailabilityError('Notifications','dismissAllNotificationsAsync');case 2:_context.next=4;return _regeneratorRuntime.awrap(NotificationPresenter.dismissAllNotificationsAsync());case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);}","map":{"version":3,"sources":["../src/dismissAllNotificationsAsync.ts"],"names":[],"mappings":"4DAAA,OAAS,mBAAT,KAAoC,mBAApC,CAEA,MAAO,CAAA,qBAAP,qCAEA,cAAe,SAAe,CAAA,4BAAf,4IACR,qBAAqB,CAAC,4BADd,8BAEL,IAAI,CAAA,mBAAJ,CAAwB,eAAxB,CAAyC,8BAAzC,CAFK,yDAKA,qBAAqB,CAAC,4BAAtB,EALA","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationPresenter from './NotificationPresenterModule';\n\nexport default async function dismissAllNotificationsAsync(): Promise<void> {\n  if (!NotificationPresenter.dismissAllNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'dismissAllNotificationsAsync');\n  }\n\n  return await NotificationPresenter.dismissAllNotificationsAsync();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}