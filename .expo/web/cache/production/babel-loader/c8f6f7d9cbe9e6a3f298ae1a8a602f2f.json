{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{View,Text}from'native-base';import React,{useState}from'react';import{useTranslation}from'react-i18next';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{TouchableOpacity,TouchableWithoutFeedback}from'react-native-gesture-handler';import DateTimePickerModal from\"react-native-modal-datetime-picker\";import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var DatePicker=function DatePicker(_ref){var hour=_ref.hour,minute=_ref.minute,onChange=_ref.onChange,onDismiss=_ref.onDismiss;var _useTranslation=useTranslation(),t=_useTranslation.t;var defaultValue=moment().utcOffset(0);defaultValue.set({hour:hour,minute:minute});var _useState=useState(defaultValue.toDate()),_useState2=_slicedToArray(_useState,2),date=_useState2[0],setDate=_useState2[1];var handleChange=function handleChange(value){var temp=moment(value);onDismiss();onChange({minute:temp.minute(),hour:temp.hour()});};var handleConfirm=function handleConfirm(date){console.warn(\"A date has been picked: \",date);handleChange(date);onDismiss();};if(Platform.OS==='ios'){return _jsxs(_Fragment,{children:[_jsx(TouchableWithoutFeedback,{onPress:onDismiss,children:_jsx(View,{style:styleSheet.touchable})}),_jsxs(View,{style:styleSheet.iosPicker,children:[_jsx(Text,{style:styleSheet.iosTitle,children:t('Common.SelectTime')}),_jsx(DateTimePickerModal,{isVisible:true,display:\"spinner\",mode:\"time\",date:date,onConfirm:function onConfirm(date){console.log(date);date&&handleConfirm(date);},onCancel:onDismiss,minuteInterval:30}),_jsxs(View,{style:styleSheet.iosActions,children:[_jsx(TouchableOpacity,{style:styleSheet.iosActionTouchable,onPress:onDismiss,children:_jsx(Text,{style:{color:\"blue\"},children:t('Common.Cancel')})}),_jsx(TouchableOpacity,{style:styleSheet.iosActionTouchable,onPress:handleConfirm,children:_jsx(Text,{style:{color:\"blue\"},children:t('Common.Confirm')})})]})]})]});}else{return _jsx(DateTimePickerModal,{isVisible:true,mode:\"time\",date:date,minuteInterval:30,onConfirm:function onConfirm(date){console.log(date);date&&handleConfirm(date);},onCancel:onDismiss});}};var styleSheet=StyleSheet.create({touchable:{position:\"absolute\",width:\"100%\",height:\"100%\",backgroundColor:\"rgba(0,0,0,0.5)\"},iosPicker:{position:\"absolute\",width:\"80%\",height:\"50%\",left:\"10%\",top:\"25%\",backgroundColor:\"white\",justifyContent:\"space-between\",borderRadius:10},iosTitle:{fontSize:30,textAlign:\"center\",marginTop:10},iosActions:{justifyContent:\"space-around\",flexDirection:\"row\",marginBottom:5},iosActionTouchable:{flex:1,alignItems:\"center\",justifyContent:\"center\"}});export default DatePicker;","map":{"version":3,"names":["View","Text","React","useState","useTranslation","TouchableOpacity","TouchableWithoutFeedback","DateTimePickerModal","moment","DatePicker","hour","minute","onChange","onDismiss","t","defaultValue","utcOffset","set","toDate","date","setDate","handleChange","value","temp","handleConfirm","console","warn","Platform","OS","styleSheet","touchable","iosPicker","iosTitle","log","iosActions","iosActionTouchable","color","StyleSheet","create","position","width","height","backgroundColor","left","top","justifyContent","borderRadius","fontSize","textAlign","marginTop","flexDirection","marginBottom","flex","alignItems"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/components/datePicker/index.tsx"],"sourcesContent":["import { View, Text } from 'native-base';\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Platform, StyleSheet } from 'react-native';\r\nimport { TouchableOpacity, TouchableWithoutFeedback } from 'react-native-gesture-handler';\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport moment from 'moment';\r\n\r\nexport type DatePickerResp = {\r\n    hour: number,\r\n    minute: number\r\n}\r\n\r\ntype DatePickerProp = {\r\n    hour: number,\r\n    minute: number,\r\n    onChange: (resp: DatePickerResp) => void,\r\n    onDismiss: () => void\r\n}\r\n\r\nconst DatePicker = ({ hour, minute, onChange, onDismiss }: DatePickerProp) => {\r\n    const { t } = useTranslation();\r\n    const defaultValue = moment().utcOffset(0);\r\n    defaultValue.set({ hour, minute });\r\n    const [date, setDate] = useState(defaultValue.toDate());\r\n\r\n    const handleChange = (value?: Date) => {\r\n        const temp = moment(value);\r\n        onDismiss();\r\n        onChange({\r\n            minute: temp.minute(),\r\n            hour: temp.hour()\r\n        });\r\n    }\r\n/*\r\n    const handleConfirm = () => {\r\n        handleChange(date);\r\n    }\r\n*/\r\n\r\n/*visibility handled by workingHour\r\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n    const showDatePicker = () => {\r\n        setDatePickerVisibility(true);\r\n    };\r\n    const hideDatePicker = () => {\r\n        setDatePickerVisibility(false);\r\n    };\r\n*/\r\n    const handleConfirm = (date:Date) => {\r\n        console.warn(\"A date has been picked: \", date);\r\n        handleChange(date);\r\n        onDismiss();\r\n    };\r\n\r\n\r\n    if (Platform.OS === 'ios') {\r\n        return (\r\n            <>\r\n                <TouchableWithoutFeedback onPress={onDismiss}>\r\n                    <View style={styleSheet.touchable} />\r\n                </TouchableWithoutFeedback>\r\n                <View style={styleSheet.iosPicker}>\r\n                    <Text style={styleSheet.iosTitle}>{t('Common.SelectTime')}</Text>\r\n                    <DateTimePickerModal\r\n                        isVisible={true}\r\n                        display=\"spinner\"\r\n                        mode=\"time\"\r\n                        date={date}\r\n                        onConfirm={(date:Date) => {\r\n                            console.log(date);\r\n                            date && handleConfirm(date);\r\n                        }}\r\n                        onCancel={onDismiss}\r\n                        minuteInterval={30}\r\n                    />\r\n                    <View style={styleSheet.iosActions}>\r\n\r\n                        <TouchableOpacity\r\n                            style={styleSheet.iosActionTouchable}\r\n                            onPress={onDismiss}\r\n                        >\r\n                            <Text style={{ color: \"blue\" }}>{t('Common.Cancel')}</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity\r\n                            style={styleSheet.iosActionTouchable}\r\n                            onPress={handleConfirm}\r\n                        >\r\n                            <Text style={{ color: \"blue\" }}>{t('Common.Confirm')}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <DateTimePickerModal\r\n                isVisible={true}\r\n                mode='time'\r\n                date={date}\r\n                minuteInterval={30}\r\n                onConfirm={(date:Date) => {\r\n                    console.log(date);\r\n                    date && handleConfirm(date);\r\n                }}\r\n                onCancel={onDismiss}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    touchable: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: \"rgba(0,0,0,0.5)\"\r\n    },\r\n    iosPicker: {\r\n        position: \"absolute\",\r\n        width: \"80%\",\r\n        height: \"50%\",\r\n        left: \"10%\",\r\n        top: \"25%\",\r\n        backgroundColor: \"white\",\r\n        justifyContent: \"space-between\",\r\n        borderRadius: 10\r\n    },\r\n    iosTitle: {\r\n        fontSize: 30,\r\n        textAlign: \"center\",\r\n        marginTop: 10,\r\n    },\r\n    iosActions: {\r\n        justifyContent: \"space-around\",\r\n        flexDirection: \"row\",\r\n        marginBottom: 5,\r\n    },\r\n    iosActionTouchable: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    }\r\n\r\n})\r\n\r\nexport default DatePicker"],"mappings":"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"},"metadata":{},"sourceType":"module"}