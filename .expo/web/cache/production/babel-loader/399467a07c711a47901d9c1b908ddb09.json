{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{UnavailabilityError}from'expo-modules-core';import{v4 as uuidv4}from'uuid';import NotificationPresenter from\"./NotificationPresenterModule\";var warningMessageShown=false;export default function presentNotificationAsync(content){var identifier,_args=arguments;return _regeneratorRuntime.async(function presentNotificationAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:identifier=_args.length>1&&_args[1]!==undefined?_args[1]:uuidv4();if(__DEV__&&!warningMessageShown){console.warn('`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.');warningMessageShown=true;}if(NotificationPresenter.presentNotificationAsync){_context.next=4;break;}throw new UnavailabilityError('Notifications','presentNotificationAsync');case 4:_context.next=6;return _regeneratorRuntime.awrap(NotificationPresenter.presentNotificationAsync(identifier,content));case 6:return _context.abrupt(\"return\",_context.sent);case 7:case\"end\":return _context.stop();}}},null,null,null,Promise);}","map":{"version":3,"sources":["../src/presentNotificationAsync.ts"],"names":[],"mappings":"4DAAA,OAAS,mBAAT,KAAoC,mBAApC,CACA,OAAS,EAAE,GAAI,CAAA,MAAf,KAA6B,MAA7B,CAEA,MAAO,CAAA,qBAAP,qCAGA,GAAI,CAAA,mBAAmB,CAAG,KAA1B,CAMA,cAAe,SAAe,CAAA,wBAAf,CACb,OADa,mKAEb,UAFa,+CAEQ,MAAM,EAFd,CAIb,GAAI,OAAO,EAAI,CAAC,mBAAhB,CAAqC,CACnC,OAAO,CAAC,IAAR,CACE,qMADF,EAGA,mBAAmB,CAAG,IAAtB,CACD,CATY,GAWR,qBAAqB,CAAC,wBAXd,8BAYL,IAAI,CAAA,mBAAJ,CAAwB,eAAxB,CAAyC,0BAAzC,CAZK,yDAeA,qBAAqB,CAAC,wBAAtB,CAA+C,UAA/C,CAA2D,OAA3D,CAfA","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport NotificationPresenter from './NotificationPresenterModule';\nimport { NotificationContentInput } from './Notifications.types';\n\nlet warningMessageShown = false;\n\n/**\n * @deprecated Use `scheduleNotificationAsync` with an explicit notification handler.\n * [Read more](https://expo.fyi/presenting-notifications-deprecated).\n */\nexport default async function presentNotificationAsync(\n  content: NotificationContentInput,\n  identifier: string = uuidv4()\n): Promise<string> {\n  if (__DEV__ && !warningMessageShown) {\n    console.warn(\n      '`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.'\n    );\n    warningMessageShown = true;\n  }\n\n  if (!NotificationPresenter.presentNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'presentNotificationAsync');\n  }\n\n  return await NotificationPresenter.presentNotificationAsync(identifier, content);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}