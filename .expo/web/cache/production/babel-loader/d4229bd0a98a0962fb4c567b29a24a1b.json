{"ast":null,"code":"import*as _ from'lodash';export function newRecord(data){return _.assign({id:0,voucher:'',insurerId:0,benefitCode:'',token:'',memberId:'',verifyTime:'',transactionTime:'',refundTime:'',doctor:{code:0,nameEn:'',nameChi:''},doctorFee:'',serviceType:'',diagnosis:_.get(data,'diagnosis',[]),feeSum:'',extraMed:_.get(data,'extraMed',[]),extraMedFee:'',extraMedFromNetwork:'',extraMedLimit:'',copaymentFee:'',status:0,signature:'',verifyType:0},data);}","map":{"version":3,"names":["_","newRecord","data","assign","id","voucher","insurerId","benefitCode","token","memberId","verifyTime","transactionTime","refundTime","doctor","code","nameEn","nameChi","doctorFee","serviceType","diagnosis","get","feeSum","extraMed","extraMedFee","extraMedFromNetwork","extraMedLimit","copaymentFee","status","signature","verifyType"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/models/record.ts"],"sourcesContent":["import * as _ from 'lodash';\r\nimport { Option } from './option';\r\n\r\ntype Diagnosis = {\r\n    id: number,\r\n    code: string,\r\n    nameEn: string,\r\n    nameChi: string\r\n}\r\n\r\ntype ExtraMed = {\r\n    code: string,\r\n    price: number\r\n}\r\n\r\ntype Doctor = {\r\n    code: number,\r\n    nameEn: string,\r\n    nameChi: string\r\n}\r\n\r\nexport type Record = {\r\n    id: number,\r\n    voucher: string,\r\n    insurerId: number,\r\n    benefitCode: string,\r\n    token: string,\r\n    memberId: string,\r\n    verifyTime: string,\r\n    transactionTime: string,\r\n    refundTime: string,\r\n    doctor: Option,\r\n    serviceType: Option,\r\n    doctorFee: string,\r\n    diagnosis: Diagnosis[],\r\n    feeSum: string,\r\n    extraMed: ExtraMed[],\r\n    extraMedFee: string,\r\n    extraMedFromNetwork: string,\r\n    extraMedLimit: string,\r\n    copaymentFee: string,\r\n    status: number,\r\n    signature: string,\r\n    verifyType: number,\r\n}\r\nexport function newRecord(data?: Partial<Record>): Record {\r\n    return _.assign({\r\n        id: 0,\r\n        voucher: '',\r\n        insurerId: 0,\r\n        benefitCode: '',\r\n        token: '',\r\n        memberId: '',\r\n        verifyTime: '',\r\n        transactionTime: '',\r\n        refundTime: '',\r\n        doctor: {\r\n            code: 0,\r\n            nameEn: '',\r\n            nameChi: ''\r\n        },\r\n        doctorFee: '',\r\n        serviceType: '',\r\n        diagnosis: _.get(data, 'diagnosis', []),\r\n        feeSum: '',\r\n        extraMed: _.get(data, 'extraMed', []),\r\n        extraMedFee: '',\r\n        extraMedFromNetwork: '',\r\n        extraMedLimit: '',\r\n        copaymentFee: '',\r\n        status: 0,\r\n        signature: '',\r\n        verifyType: 0,\r\n    }, data);\r\n}\r\n"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,CAAZ,KAAmB,QAAnB,CA6CA,MAAO,SAASC,CAAAA,SAAT,CAAmBC,IAAnB,CAAmD,CACtD,MAAOF,CAAAA,CAAC,CAACG,MAAF,CAAS,CACZC,EAAE,CAAE,CADQ,CAEZC,OAAO,CAAE,EAFG,CAGZC,SAAS,CAAE,CAHC,CAIZC,WAAW,CAAE,EAJD,CAKZC,KAAK,CAAE,EALK,CAMZC,QAAQ,CAAE,EANE,CAOZC,UAAU,CAAE,EAPA,CAQZC,eAAe,CAAE,EARL,CASZC,UAAU,CAAE,EATA,CAUZC,MAAM,CAAE,CACJC,IAAI,CAAE,CADF,CAEJC,MAAM,CAAE,EAFJ,CAGJC,OAAO,CAAE,EAHL,CAVI,CAeZC,SAAS,CAAE,EAfC,CAgBZC,WAAW,CAAE,EAhBD,CAiBZC,SAAS,CAAEnB,CAAC,CAACoB,GAAF,CAAMlB,IAAN,CAAY,WAAZ,CAAyB,EAAzB,CAjBC,CAkBZmB,MAAM,CAAE,EAlBI,CAmBZC,QAAQ,CAAEtB,CAAC,CAACoB,GAAF,CAAMlB,IAAN,CAAY,UAAZ,CAAwB,EAAxB,CAnBE,CAoBZqB,WAAW,CAAE,EApBD,CAqBZC,mBAAmB,CAAE,EArBT,CAsBZC,aAAa,CAAE,EAtBH,CAuBZC,YAAY,CAAE,EAvBF,CAwBZC,MAAM,CAAE,CAxBI,CAyBZC,SAAS,CAAE,EAzBC,CA0BZC,UAAU,CAAE,CA1BA,CAAT,CA2BJ3B,IA3BI,CAAP,CA4BH"},"metadata":{},"sourceType":"module"}