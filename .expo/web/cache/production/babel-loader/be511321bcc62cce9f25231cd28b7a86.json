{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{useNavigation}from'@react-navigation/native';import{observer}from'mobx-react';import{Container,View}from'native-base';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import FlatList from\"react-native-web/dist/exports/FlatList\";import{ScrollView}from'react-native-gesture-handler';import{goDoctorProfile,initDoctorProfile}from\"../../actions/app\";import TitleBar from\"../../components/titleBar\";import{useStores}from\"../../stores\";import ErrorPage from\"../error\";import Loading from\"../loading\";import{ListItem}from'react-native-elements';import{translate}from\"../../utils/string\";import PhoneCall from\"../../components/phoneCall\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DoctorProfileListPage=observer(function(){var _useTranslation=useTranslation(),i18n=_useTranslation.i18n,t=_useTranslation.t;var stores=useStores();var navigation=useNavigation();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var doctorProfileList=stores.dataStore.doctorProfileList;useEffect(function(){init();},[]);var init=function _callee(){var errorMsg;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.next=3;return _regeneratorRuntime.awrap(initDoctorProfile({stores:stores,navigation:navigation,i18n:i18n}));case 3:errorMsg=_context.sent;setLoading(false);if(errorMsg){setError(errorMsg);}case 6:case\"end\":return _context.stop();}}},null,null,null,Promise);};var onListItemPress=function onListItemPress(doctorProfile){goDoctorProfile({stores:stores,navigation:navigation,doctorProfile:doctorProfile});};var isEng=i18n.language==='en';return _jsxs(Container,{children:[_jsx(TitleBar,{title:t('DoctorProfile.Title'),onBack:function onBack(){navigation.goBack();}}),_jsx(ScrollView,{children:loading?_jsx(Loading,{}):error?_jsx(ErrorPage,{title:error,onRetry:init}):_jsx(View,{style:styleSheet.container,children:_jsx(FlatList,{data:doctorProfileList,keyExtractor:function keyExtractor(item,index){return index.toString();},renderItem:function renderItem(_ref){var _item$speciality;var item=_ref.item,index=_ref.index;var isActive=item.status==='1';var inActiveColor=\"#929292\";var textStyle=isActive?null:{color:inActiveColor};var leftIcon={name:\"people\"};if(!isActive){leftIcon.color=inActiveColor;}return _jsx(ListItem,{titleStyle:textStyle,subtitleStyle:textStyle,leftIcon:leftIcon,title:translate(item,i18n)+\" (\"+(isActive?t('DoctorProfile.Active'):t('DoctorProfile.Inactive'))+\")\",subtitle:\"(\"+((_item$speciality=item.speciality)==null?void 0:_item$speciality.map(function(sp){return translate(sp,i18n);}))+\")\",bottomDivider:true,chevron:true,onPress:function onPress(){onListItemPress(item);}});}})})}),_jsx(PhoneCall,{})]});});var styleSheet=StyleSheet.create({container:{paddingLeft:20,paddingRight:20},divider:{backgroundColor:\"grey\"}});export default DoctorProfileListPage;","map":{"version":3,"names":["useNavigation","observer","Container","View","React","useEffect","useState","useTranslation","ScrollView","goDoctorProfile","initDoctorProfile","TitleBar","useStores","ErrorPage","Loading","ListItem","translate","PhoneCall","DoctorProfileListPage","i18n","t","stores","navigation","loading","setLoading","error","setError","doctorProfileList","dataStore","init","errorMsg","onListItemPress","doctorProfile","isEng","language","goBack","styleSheet","container","item","index","toString","isActive","status","inActiveColor","textStyle","color","leftIcon","name","speciality","map","sp","StyleSheet","create","paddingLeft","paddingRight","divider","backgroundColor"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/doctorProfileList/index.tsx"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport { observer } from 'mobx-react';\r\nimport { Container, View } from 'native-base';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { StyleSheet, FlatList } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { goDoctorProfile, initDoctorProfile } from '../../actions/app';\r\nimport TitleBar from '../../components/titleBar';\r\nimport { useStores } from '../../stores';\r\nimport ErrorPage from '../error';\r\nimport Loading from '../loading';\r\nimport { ListItem } from 'react-native-elements';\r\nimport { translate } from '../../utils/string';\r\nimport { DoctorProfile } from '../../models/doctor';\r\nimport PhoneCall from \"../../components/phoneCall\";\r\n\r\nconst DoctorProfileListPage = observer(() => {\r\n    const { i18n, t } = useTranslation();\r\n    const stores = useStores();\r\n    const navigation = useNavigation();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const { doctorProfileList } = stores.dataStore;\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const init = async () => {\r\n        setLoading(true);\r\n        const errorMsg = await initDoctorProfile({ stores, navigation, i18n });\r\n        setLoading(false);\r\n        if (errorMsg) {\r\n            setError(errorMsg)\r\n        }\r\n    }\r\n\r\n    const onListItemPress = (doctorProfile: DoctorProfile) => {\r\n        goDoctorProfile({ stores, navigation, doctorProfile });\r\n    }\r\n\r\n    const isEng = i18n.language === 'en';\r\n\r\n    return (\r\n        <Container>\r\n            <TitleBar\r\n                title={t('DoctorProfile.Title')}\r\n                onBack={() => { navigation.goBack(); }}\r\n            />\r\n            <ScrollView>\r\n                {\r\n                    loading ? <Loading /> :\r\n                        error ? <ErrorPage title={error} onRetry={init} /> :\r\n                            <View style={styleSheet.container}>\r\n                                <FlatList\r\n                                    data={doctorProfileList}\r\n                                    keyExtractor={(item, index) => index.toString()}\r\n                                    renderItem={({ item, index }) => {\r\n                                        const isActive = item.status === '1';\r\n                                        const inActiveColor = \"#929292\";\r\n                                        const textStyle = isActive ? null : { color: inActiveColor };\r\n                                        const leftIcon: any = { name: \"people\" };\r\n                                        if (!isActive) {\r\n                                            leftIcon.color = inActiveColor;\r\n                                        }\r\n\r\n                                        return (\r\n                                            <ListItem\r\n                                                titleStyle={textStyle}\r\n                                                subtitleStyle={textStyle}\r\n                                                leftIcon={leftIcon}\r\n                                                title={`${translate(item, i18n)} (${isActive ? t('DoctorProfile.Active') : t('DoctorProfile.Inactive')})`}\r\n                                                subtitle={`(${item.speciality?.map(sp => translate(sp, i18n))})`}\r\n                                                bottomDivider\r\n                                                chevron={true}\r\n                                                onPress={() => {\r\n                                                    onListItemPress(item);\r\n                                                }}\r\n                                            />\r\n                                        )\r\n                                    }}\r\n                                />\r\n                            </View>\r\n                }\r\n\r\n            </ScrollView>\r\n\r\n            <PhoneCall/>\r\n        </Container>\r\n    )\r\n});\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    container: {\r\n        paddingLeft: 20,\r\n        paddingRight: 20\r\n    },\r\n    divider: {\r\n        backgroundColor: \"grey\"\r\n    }\r\n});\r\n\r\nexport default DoctorProfileListPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}