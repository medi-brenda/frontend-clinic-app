{"ast":null,"code":"import{Icon,Label,Picker,View,Text,Button}from'native-base';import React from'react';import{useTranslation}from'react-i18next';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{FlatList,TouchableOpacity}from'react-native-gesture-handler';import styles from\"../../styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var FlatListPicker=function FlatListPicker(_ref){var id=_ref.id,values=_ref.values,title=_ref.title,options=_ref.options,warning=_ref.warning,validate=_ref.validate,onChange=_ref.onChange;var _useTranslation=useTranslation(),i18n=_useTranslation.i18n,t=_useTranslation.t;var label=i18n.language==='en'?'nameEn':'nameChi';var onItemChange=function onItemChange(value,index){values[id][index]=value;onChange(id,values[id]);};var onRemove=function onRemove(index){values[id].splice(index,1);onChange(id,values[id]);};var onAdd=function onAdd(){values[id].push('');onChange(id,values[id]);};return _jsxs(_Fragment,{children:[_jsx(Label,{style:styles.reg_field_title,children:title}),_jsx(FlatList,{data:values[id],refreshing:false,keyExtractor:function keyExtractor(item,index){return id+\"-\"+index;},renderItem:function renderItem(_ref2){var item=_ref2.item,index=_ref2.index;return _jsxs(View,{style:styleSheet.listItem,children:[_jsx(View,{style:styleSheet.picker,children:_jsx(Picker,{style:{width:undefined},mode:\"dropdown\",iosIcon:_jsx(Icon,{name:\"arrow-down\"}),placeholderStyle:{color:'#bfc6ea'},placeholder:t('Register.SelectMedicalService'),placeholderIconColor:\"#007aff\",selectedValue:values.medicalServices[index],onValueChange:function onValueChange(key,iIndex){onItemChange(key,index);},children:options.map(function(option,index){return _jsx(Picker.Item,{label:option[label],value:option.code},id+\"-options-\"+index);})})}),index?_jsx(TouchableOpacity,{style:styleSheet.touchable,onPress:function onPress(){onRemove(index);},children:_jsx(Icon,{name:\"close\",style:styleSheet.close})}):null]});}}),!validate(values[id])?_jsx(Text,{style:styleSheet.warning,children:warning}):null,_jsx(Button,{full:true,bordered:true,onPress:onAdd,style:styles.reg_add_btn,children:_jsx(Text,{style:styleSheet.button,children:\"+ \"+t('Common.Add')})})]});};var styleSheet=StyleSheet.create({listItem:{flex:5,justifyContent:'center',borderWidth:0.5,borderRadius:5,borderColor:'#888888'},picker:{flex:5,justifyContent:'center',borderWidth:0.5,borderRadius:5,borderColor:'#888888'},touchable:{justifyContent:'center',alignItems:'center',paddingHorizontal:7},close:{color:'red',fontSize:35},warning:{fontSize:14,marginLeft:10,marginRight:5,color:\"red\"},button:{color:\"#ed5b5c\"}});export default FlatListPicker;","map":{"version":3,"names":["Icon","Label","Picker","View","Text","Button","React","useTranslation","FlatList","TouchableOpacity","styles","FlatListPicker","id","values","title","options","warning","validate","onChange","i18n","t","label","language","onItemChange","value","index","onRemove","splice","onAdd","push","reg_field_title","item","styleSheet","listItem","picker","width","undefined","color","medicalServices","key","iIndex","map","option","code","touchable","close","reg_add_btn","button","StyleSheet","create","flex","justifyContent","borderWidth","borderRadius","borderColor","alignItems","paddingHorizontal","fontSize","marginLeft","marginRight"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/components/flatListPicker/index.tsx"],"sourcesContent":["import { Icon, Label, Picker, View, Text, Button } from 'native-base';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { StyleSheet } from 'react-native';\r\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { Option } from '../../models/option';\r\nimport styles from '../../styles';\r\n\r\ntype FlatListPickerProp = {\r\n    id: string,\r\n    values: any,\r\n    title: string,\r\n    warning: string,\r\n    options: Option[],\r\n    validate: (value: any) => boolean,\r\n    onChange: (id: string, value: any) => void\r\n}\r\n\r\nconst FlatListPicker = ({ id, values, title, options, warning, validate, onChange }: FlatListPickerProp) => {\r\n    const { i18n, t } = useTranslation();\r\n    const label = i18n.language === 'en' ? 'nameEn' : 'nameChi';\r\n\r\n    const onItemChange = (value: any, index: number) => {\r\n        values[id][index] = value;\r\n        onChange(id, values[id]);\r\n    }\r\n\r\n    const onRemove = (index: number) => {\r\n        values[id].splice(index, 1);\r\n        onChange(id, values[id]);\r\n    }\r\n\r\n    const onAdd = () => {\r\n        values[id].push('');\r\n        onChange(id, values[id]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Label style={styles.reg_field_title}>{title}</Label>\r\n            <FlatList\r\n                data={values[id]}\r\n                refreshing={false}\r\n                keyExtractor={(item, index) => `${id}-${index}`}\r\n                renderItem={({ item, index }) => (\r\n                    <View style={styleSheet.listItem}>\r\n                        <View style={styleSheet.picker}>\r\n                            <Picker\r\n                                style={{\r\n                                    width: undefined,\r\n                                }}\r\n                                mode='dropdown'\r\n                                iosIcon={<Icon name='arrow-down' />}\r\n                                placeholderStyle={{ color: '#bfc6ea' }}\r\n                                placeholder={t('Register.SelectMedicalService')}\r\n                                placeholderIconColor='#007aff'\r\n                                selectedValue={values.medicalServices[index]}\r\n                                onValueChange={(key, iIndex) => {\r\n                                    onItemChange(key, index);\r\n                                }}\r\n                            >\r\n                                {\r\n                                    options.map((option, index) => (\r\n                                        <Picker.Item\r\n                                            key={`${id}-options-${index}`}\r\n                                            label={option[label]}\r\n                                            value={option.code}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                            </Picker>\r\n                        </View>\r\n                        {\r\n                            index ? (\r\n                                <TouchableOpacity\r\n                                    style={styleSheet.touchable}\r\n                                    onPress={() => { onRemove(index) }}\r\n                                >\r\n                                    <Icon\r\n                                        name='close'\r\n                                        style={styleSheet.close}\r\n                                    />\r\n                                </TouchableOpacity>\r\n                            ) : null\r\n                        }\r\n                    </View>\r\n                )}\r\n            />\r\n            {\r\n                !validate(values[id]) ?\r\n                    (\r\n                        <Text style={styleSheet.warning}>{warning}</Text>\r\n                    ) : null\r\n            }\r\n\r\n            <Button\r\n                full\r\n                bordered\r\n                onPress={onAdd}\r\n                style={styles.reg_add_btn}\r\n            >\r\n                <Text style={styleSheet.button}>\r\n                    {`+ ${t('Common.Add')}`}\r\n                </Text>\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    listItem: {\r\n        flex: 5,\r\n        justifyContent: 'center',\r\n        borderWidth: 0.5,\r\n        borderRadius: 5,\r\n        borderColor: '#888888',\r\n    },\r\n    picker: {\r\n        flex: 5,\r\n        justifyContent: 'center',\r\n        borderWidth: 0.5,\r\n        borderRadius: 5,\r\n        borderColor: '#888888',\r\n    },\r\n    touchable: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 7,\r\n    },\r\n    close: {\r\n        color: 'red',\r\n        fontSize: 35,\r\n    },\r\n    warning: {\r\n        fontSize: 14,\r\n        marginLeft: 10,\r\n        marginRight: 5,\r\n        color: \"red\",\r\n    },\r\n    button: {\r\n        color: \"#ed5b5c\"\r\n    }\r\n})\r\n\r\nexport default FlatListPicker;"],"mappings":"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"},"metadata":{},"sourceType":"module"}