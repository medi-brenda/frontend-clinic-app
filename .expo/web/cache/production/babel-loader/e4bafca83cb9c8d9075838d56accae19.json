{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{useNavigation}from'@react-navigation/native';import{observer}from'mobx-react';import{Container}from'native-base';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import Text from\"react-native-web/dist/exports/Text\";import Alert from\"react-native-web/dist/exports/Alert\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Spinner from'react-native-loading-spinner-overlay';import{goSelectMethod}from\"../../actions/app\";import{getDoctorsByClinicInsurerBenefit}from\"../../actions/config\";import List from\"../../components/list\";import TitleBar from\"../../components/titleBar\";import i18n from\"../../i18n\";import{useStores}from\"../../stores\";import{translate}from\"../../utils/string\";import ErrorPage from\"../error\";import Loading from\"../loading\";import PhoneCall from\"../../components/phoneCall\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SelectDoctorPage=observer(function(){var _useTranslation=useTranslation(),t=_useTranslation.t;var navigation=useNavigation();var stores=useStores();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),inited=_useState2[0],setInited=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),spinner=_useState6[0],setSpinner=_useState6[1];var currentTab=stores.appStore.currentTab;var doctors=stores.configStore.doctors;useEffect(function(){init();},[]);var init=function _callee(){var errMsg;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(getDoctorsByClinicInsurerBenefit({stores:stores}));case 2:errMsg=_context.sent;if(!errMsg){_context.next=5;break;}return _context.abrupt(\"return\",setError(errMsg));case 5:return _context.abrupt(\"return\",setInited(true));case 6:case\"end\":return _context.stop();}}},null,null,null,Promise);};var onItemSelect=function _callee2(item){var errorMsg;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setSpinner(true);_context2.next=3;return _regeneratorRuntime.awrap(goSelectMethod({stores:stores,doctorId:item.code,navigation:navigation,i18n:i18n}));case 3:errorMsg=_context2.sent;if(errorMsg){Alert.alert(t('Common.Error'),errorMsg,[{text:t('Common.Confirm'),onPress:function onPress(){setSpinner(false);}}]);}else{setSpinner(false);}case 5:case\"end\":return _context2.stop();}}},null,null,null,Promise);};return _jsxs(Container,{children:[_jsx(TitleBar,{title:t(currentTab+\".SelectDoctor\"),onBack:function onBack(){navigation.goBack();}}),_jsx(Spinner,{visible:spinner,color:\"red\",size:\"large\",overlayColor:\"rgba(0, 0, 0, 0.25)\"}),error?_jsx(ErrorPage,{title:error,onRetry:init}):!inited?_jsx(Loading,{}):_jsxs(_Fragment,{children:[_jsx(Text,{style:styleSheet.breadcrumb,children:t(currentTab+\".Selected\")+': '+stores.dataStore.values.insurerName+' / '+stores.dataStore.values.benefitName}),_jsx(List,{data:doctors,icon:\"ios-arrow-forward\",onPress:onItemSelect,formatText:function formatText(item){return translate(item,i18n);}})]}),_jsx(PhoneCall,{})]});});var styleSheet=StyleSheet.create({breadcrumb:{marginLeft:20,marginTop:5,color:\"#777777\"}});export default SelectDoctorPage;","map":{"version":3,"names":["useNavigation","observer","Container","React","useEffect","useState","useTranslation","Spinner","goSelectMethod","getDoctorsByClinicInsurerBenefit","List","TitleBar","i18n","useStores","translate","ErrorPage","Loading","PhoneCall","SelectDoctorPage","t","navigation","stores","inited","setInited","error","setError","spinner","setSpinner","currentTab","appStore","doctors","configStore","init","errMsg","onItemSelect","item","doctorId","code","errorMsg","Alert","alert","text","onPress","goBack","styleSheet","breadcrumb","dataStore","values","insurerName","benefitName","StyleSheet","create","marginLeft","marginTop","color"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/selectDoctors/index.tsx"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport { observer } from 'mobx-react';\r\nimport { Container } from 'native-base';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Text, Alert, StyleSheet } from 'react-native';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport { goSelectMethod } from '../../actions/app';\r\nimport { getDoctorsByClinicInsurerBenefit } from '../../actions/config';\r\nimport List from '../../components/list';\r\nimport TitleBar from '../../components/titleBar';\r\nimport i18n from '../../i18n';\r\nimport { Option } from '../../models/option';\r\nimport { useStores } from '../../stores';\r\nimport { translate } from '../../utils/string';\r\nimport ErrorPage from '../error';\r\nimport Loading from '../loading';\r\nimport PhoneCall from \"../../components/phoneCall\";\r\nimport styles from '../../styles';\r\n\r\nconst SelectDoctorPage = observer(() => {\r\n    const { t } = useTranslation();\r\n    const navigation = useNavigation();\r\n    const stores = useStores();\r\n\r\n    const [inited, setInited] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [spinner, setSpinner] = useState(false);\r\n\r\n    const { currentTab } = stores.appStore;\r\n    const { doctors } = stores.configStore;\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const init = async () => {\r\n        const errMsg = await getDoctorsByClinicInsurerBenefit({ stores });\r\n        if (errMsg) {\r\n            return setError(errMsg);\r\n        }\r\n        return setInited(true);\r\n    }\r\n\r\n    const onItemSelect = async (item: Option) => {\r\n        setSpinner(true);\r\n        const errorMsg = await goSelectMethod({\r\n            stores,\r\n            doctorId: item.code,\r\n            navigation,\r\n            i18n\r\n        });\r\n\r\n        if (errorMsg) {\r\n            Alert.alert(\r\n                t('Common.Error'),\r\n                errorMsg,\r\n                [{\r\n                    text: t('Common.Confirm'),\r\n                    onPress: () => {\r\n                        setSpinner(false);\r\n                    }\r\n                }]\r\n            );\r\n        }\r\n        else {\r\n            setSpinner(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <TitleBar\r\n                title={t(`${currentTab}.SelectDoctor`)}\r\n                onBack={() => {\r\n                    navigation.goBack();\r\n                }}\r\n            />\r\n            <Spinner\r\n                visible={spinner}\r\n                color={\"red\"}\r\n                size={\"large\"}\r\n                overlayColor={\"rgba(0, 0, 0, 0.25)\"}\r\n            />\r\n            {\r\n                error ?\r\n                    <ErrorPage title={error} onRetry={init} /> :\r\n                    !inited ? <Loading /> :\r\n                    <>\r\n                        <Text style={styleSheet.breadcrumb}>{t(`${currentTab}.Selected`)+': '+stores.dataStore.values.insurerName + ' / '+stores.dataStore.values.benefitName }</Text>\r\n                        <List\r\n                            data={doctors}\r\n                            icon='ios-arrow-forward'\r\n                            onPress={onItemSelect}\r\n                            formatText={(item) => translate(item, i18n)}\r\n                        />\r\n                    </>\r\n            }\r\n\r\n            <PhoneCall/>\r\n        </Container>\r\n    )\r\n});\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    breadcrumb:{\r\n        marginLeft: 20,\r\n        marginTop: 5,\r\n        color: \"#777777\"\r\n    }\r\n});\r\n\r\nexport default SelectDoctorPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}