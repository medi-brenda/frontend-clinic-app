{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import UIManager from\"../../exports/UIManager\";import createDOMProps from\"../createDOMProps\";import useStable from\"../useStable\";import{useRef}from'react';var emptyObject={};function setNativeProps(node,nativeProps,classList,pointerEvents,style,previousStyleRef){if(node!=null&&nativeProps){var domProps=createDOMProps(null,_objectSpread(_objectSpread({pointerEvents:pointerEvents},nativeProps),{},{classList:[classList,nativeProps.className],style:[style,nativeProps.style]}));var nextDomStyle=domProps.style;if(previousStyleRef.current!=null){if(domProps.style==null){domProps.style={};}for(var styleName in previousStyleRef.current){if(domProps.style[styleName]==null){domProps.style[styleName]='';}}}previousStyleRef.current=nextDomStyle;UIManager.updateView(node,domProps);}}export default function usePlatformMethods(_ref){var classList=_ref.classList,pointerEvents=_ref.pointerEvents,style=_ref.style;var previousStyleRef=useRef(null);var setNativePropsArgsRef=useRef(null);setNativePropsArgsRef.current={classList:classList,pointerEvents:pointerEvents,style:style};var ref=useStable(function(){return function(hostNode){if(hostNode!=null){hostNode.measure=function(callback){return UIManager.measure(hostNode,callback);};hostNode.measureLayout=function(relativeToNode,success,failure){return UIManager.measureLayout(hostNode,relativeToNode,failure,success);};hostNode.measureInWindow=function(callback){return UIManager.measureInWindow(hostNode,callback);};hostNode.setNativeProps=function(nativeProps){var _ref2=setNativePropsArgsRef.current||emptyObject,classList=_ref2.classList,style=_ref2.style,pointerEvents=_ref2.pointerEvents;setNativeProps(hostNode,nativeProps,classList,pointerEvents,style,previousStyleRef);};}};});return ref;}","map":{"version":3,"names":["UIManager","createDOMProps","useStable","useRef","emptyObject","setNativeProps","node","nativeProps","classList","pointerEvents","style","previousStyleRef","domProps","className","nextDomStyle","current","styleName","updateView","usePlatformMethods","setNativePropsArgsRef","ref","hostNode","measure","callback","measureLayout","relativeToNode","success","failure","measureInWindow"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/node_modules/react-native-web/src/modules/usePlatformMethods/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { GenericStyleProp } from '../../types';\nimport type { ViewProps } from '../../exports/View';\n\nimport UIManager from '../../exports/UIManager';\nimport createDOMProps from '../createDOMProps';\nimport useStable from '../useStable';\nimport { useRef } from 'react';\n\nconst emptyObject = {};\n\nfunction setNativeProps(node, nativeProps, classList, pointerEvents, style, previousStyleRef) {\n  if (node != null && nativeProps) {\n    const domProps = createDOMProps(null, {\n      pointerEvents,\n      ...nativeProps,\n      classList: [classList, nativeProps.className],\n      style: [style, nativeProps.style]\n    });\n\n    const nextDomStyle = domProps.style;\n\n    if (previousStyleRef.current != null) {\n      if (domProps.style == null) {\n        domProps.style = {};\n      }\n      for (const styleName in previousStyleRef.current) {\n        if (domProps.style[styleName] == null) {\n          domProps.style[styleName] = '';\n        }\n      }\n    }\n\n    previousStyleRef.current = nextDomStyle;\n\n    UIManager.updateView(node, domProps);\n  }\n}\n\n/**\n * Adds non-standard methods to the hode element. This is temporarily until an\n * API like `ReactNative.measure(hostRef, callback)` is added to React Native.\n */\nexport default function usePlatformMethods({\n  classList,\n  pointerEvents,\n  style\n}: {\n  classList?: Array<string | boolean>,\n  style?: GenericStyleProp<*>,\n  pointerEvents?: $PropertyType<ViewProps, 'pointerEvents'>\n}): (hostNode: any) => void {\n  const previousStyleRef = useRef(null);\n  const setNativePropsArgsRef = useRef(null);\n  setNativePropsArgsRef.current = { classList, pointerEvents, style };\n\n  // Avoid creating a new ref on every render. The props only need to be\n  // available to 'setNativeProps' when it is called.\n  const ref = useStable(() => (hostNode: any) => {\n    if (hostNode != null) {\n      hostNode.measure = (callback) => UIManager.measure(hostNode, callback);\n      hostNode.measureLayout = (relativeToNode, success, failure) =>\n        UIManager.measureLayout(hostNode, relativeToNode, failure, success);\n      hostNode.measureInWindow = (callback) => UIManager.measureInWindow(hostNode, callback);\n      hostNode.setNativeProps = (nativeProps) => {\n        const { classList, style, pointerEvents } = setNativePropsArgsRef.current || emptyObject;\n        setNativeProps(hostNode, nativeProps, classList, pointerEvents, style, previousStyleRef);\n      };\n    }\n  });\n\n  return ref;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}