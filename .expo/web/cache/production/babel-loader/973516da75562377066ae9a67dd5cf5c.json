{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{useNavigation}from'@react-navigation/native';import{observer}from'mobx-react';import{Container,View}from'native-base';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{ScrollView}from'react-native-gesture-handler';import TitleBar from\"../../components/titleBar\";import{useStores}from\"../../stores\";import{translate}from\"../../utils/string\";import ReadOnlyField from\"../../components/readOnlyField/infex\";import{initDoctorProfileDetail}from\"../../actions/app\";import Loading from\"../loading\";import ErrorPage from\"../error\";import BenefitItem from\"./BenefitItem\";import*as _ from'lodash';import PhoneCall from\"../../components/phoneCall\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DoctorProfilePage=observer(function(){var _doctorProfile$specia;var _useTranslation=useTranslation(),i18n=_useTranslation.i18n,t=_useTranslation.t;var stores=useStores();var navigation=useNavigation();var doctorProfile=stores.dataStore.doctorProfile;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var doctorProfileList=stores.dataStore.doctorProfileList;useEffect(function(){init();},[]);var init=function _callee(){var errorMsg;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.next=3;return _regeneratorRuntime.awrap(initDoctorProfileDetail({stores:stores,navigation:navigation,i18n:i18n}));case 3:errorMsg=_context.sent;setLoading(false);if(errorMsg){setError(errorMsg);}case 6:case\"end\":return _context.stop();}}},null,null,null,Promise);};var isEng=i18n.language==='en';var existBenefitCodes=_.uniq(_.map(doctorProfile.benefits,'benefitCode'));return _jsxs(Container,{children:[_jsx(TitleBar,{title:t('DoctorProfile.Title'),onBack:function onBack(){navigation.goBack();}}),loading?_jsx(Loading,{}):error?_jsx(ErrorPage,{title:error,onRetry:init}):_jsx(ScrollView,{children:_jsxs(View,{style:styleSheet.container,children:[_jsx(ReadOnlyField,{title:t('DoctorProfile.Name_en'),value:doctorProfile.nameEn}),_jsx(ReadOnlyField,{title:t('DoctorProfile.Name_cn'),value:doctorProfile.nameChi}),_jsx(ReadOnlyField,{title:t('DoctorProfile.Gender'),value:doctorProfile.gender==='F'?t('DoctorProfile.Female'):t('DoctorProfile.Male')}),_jsx(ReadOnlyField,{title:t('DoctorProfile.Speciality'),value:(_doctorProfile$specia=doctorProfile.speciality)==null?void 0:_doctorProfile$specia.map(function(item){return translate(item,i18n);}),type:'stringArray'}),_jsx(ReadOnlyField,{title:t('DoctorProfile.Authority'),value:isEng?doctorProfile.authorityEn:doctorProfile.authorityChi}),_jsx(ReadOnlyField,{title:t('DoctorProfile.Service_hour'),value:doctorProfile.schedules,type:'schedule'}),_jsx(View,{style:styleSheet.paddingTop,children:existBenefitCodes.map(function(benefitCode,index){return _jsx(BenefitItem,{benefitCode:benefitCode,benefits:_.filter(doctorProfile.benefits,function(benefit){return benefit.benefitCode===benefitCode;})},\"benefit-\"+index);})})]})}),_jsx(PhoneCall,{})]});});var styleSheet=StyleSheet.create({container:{paddingLeft:20,paddingRight:20},data:{color:\"black\",fontWeight:\"normal\"},divider:{backgroundColor:\"grey\"},serviceHour:{flexDirection:\"row\",justifyContent:\"space-between\"},shTitle:{fontSize:18},paddingTop:{paddingTop:16}});export default DoctorProfilePage;","map":{"version":3,"names":["useNavigation","observer","Container","View","React","useEffect","useState","useTranslation","ScrollView","TitleBar","useStores","translate","ReadOnlyField","initDoctorProfileDetail","Loading","ErrorPage","BenefitItem","_","PhoneCall","DoctorProfilePage","i18n","t","stores","navigation","doctorProfile","dataStore","loading","setLoading","error","setError","doctorProfileList","init","errorMsg","isEng","language","existBenefitCodes","uniq","map","benefits","goBack","styleSheet","container","nameEn","nameChi","gender","speciality","item","authorityEn","authorityChi","schedules","paddingTop","benefitCode","index","filter","benefit","StyleSheet","create","paddingLeft","paddingRight","data","color","fontWeight","divider","backgroundColor","serviceHour","flexDirection","justifyContent","shTitle","fontSize"],"sources":["I:/Workspace/mediWS/mccWS/frontend-clinic-app/src/pages/doctorProfile/index.tsx"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport { observer } from 'mobx-react';\r\nimport { Container, View } from 'native-base';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { StyleSheet } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport TitleBar from '../../components/titleBar';\r\nimport { useStores } from '../../stores';\r\nimport { translate } from '../../utils/string';\r\nimport ReadOnlyField from '../../components/readOnlyField/infex';\r\nimport { initDoctorProfileDetail } from '../../actions/app';\r\nimport Loading from '../loading';\r\nimport ErrorPage from '../error';\r\nimport BenefitItem from './BenefitItem';\r\nimport * as _ from 'lodash';\r\nimport PhoneCall from \"../../components/phoneCall\";\r\n\r\nconst DoctorProfilePage = observer(() => {\r\n    const { i18n, t } = useTranslation();\r\n    const stores = useStores();\r\n    const navigation = useNavigation();\r\n\r\n    const { doctorProfile } = stores.dataStore;\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const { doctorProfileList } = stores.dataStore;\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const init = async () => {\r\n        setLoading(true);\r\n        const errorMsg = await initDoctorProfileDetail({ stores, navigation, i18n });\r\n        setLoading(false);\r\n        if (errorMsg) {\r\n            setError(errorMsg)\r\n        }\r\n    }\r\n    const isEng = i18n.language === 'en';\r\n    const existBenefitCodes = _.uniq(_.map(doctorProfile.benefits, 'benefitCode'));\r\n\r\n    return (\r\n        <Container>\r\n            <TitleBar\r\n                title={t('DoctorProfile.Title')}\r\n                onBack={() => { navigation.goBack(); }}\r\n            />\r\n            {\r\n                loading ? <Loading /> :\r\n                    error ? <ErrorPage title={error} onRetry={init} /> :\r\n                        <ScrollView>\r\n                            <View style={styleSheet.container}>\r\n                                <ReadOnlyField\r\n                                    title={t('DoctorProfile.Name_en')}\r\n                                    value={doctorProfile.nameEn}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('DoctorProfile.Name_cn')}\r\n                                    value={doctorProfile.nameChi}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('DoctorProfile.Gender')}\r\n                                    value={doctorProfile.gender === 'F' ? t('DoctorProfile.Female') : t('DoctorProfile.Male')}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('DoctorProfile.Speciality')}\r\n                                    value={doctorProfile.speciality?.map((item) => translate(item, i18n))}\r\n                                    type={'stringArray'}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('DoctorProfile.Authority')}\r\n                                    value={isEng ? doctorProfile.authorityEn : doctorProfile.authorityChi}\r\n                                />\r\n                                <ReadOnlyField\r\n                                    title={t('DoctorProfile.Service_hour')}\r\n                                    value={doctorProfile.schedules}\r\n                                    type={'schedule'}\r\n                                />\r\n                                <View style={styleSheet.paddingTop}>\r\n                                    {\r\n                                        existBenefitCodes.map((benefitCode, index) => (\r\n                                            <BenefitItem\r\n                                                key={`benefit-${index}`}\r\n                                                benefitCode={benefitCode}\r\n                                                benefits={_.filter(doctorProfile.benefits, benefit => benefit.benefitCode === benefitCode)}\r\n                                            />\r\n                                        ))\r\n                                    }\r\n                                </View>\r\n                            </View>\r\n                        </ScrollView>\r\n            }\r\n\r\n            <PhoneCall/>\r\n        </Container>\r\n    )\r\n});\r\n\r\nconst styleSheet = StyleSheet.create({\r\n    container: {\r\n        paddingLeft: 20,\r\n        paddingRight: 20\r\n    },\r\n    data: {\r\n        color: \"black\",\r\n        fontWeight: \"normal\",\r\n    },\r\n    divider: {\r\n        backgroundColor: \"grey\"\r\n    },\r\n    serviceHour: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    shTitle: {\r\n        fontSize: 18\r\n    },\r\n    paddingTop: {\r\n        paddingTop: 16\r\n    }\r\n});\r\n\r\nexport default DoctorProfilePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}